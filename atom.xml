<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>妙瓦种子</title>
  
  
  <link href="https://blog.dzm.pp.ua/atom.xml" rel="self"/>
  
  <link href="https://blog.dzm.pp.ua/"/>
  <updated>2025-05-18T14:52:01.396Z</updated>
  <id>https://blog.dzm.pp.ua/</id>
  
  <author>
    <name>妙瓦草</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>长毛象配置b2对象存储不完全教程</title>
    <link href="https://blog.dzm.pp.ua/2025/05/18/mastodon-b2-cdn/"/>
    <id>https://blog.dzm.pp.ua/2025/05/18/mastodon-b2-cdn/</id>
    <published>2025-05-18T07:36:06.000Z</published>
    <updated>2025-05-18T14:52:01.396Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，我又回来了。这次博客更新比我预料得要频繁。因为，这操作确实有点复杂，而且因为<a href="https://backblaze.com/">backblaze</a>的政策相比于前几年改了，所以网上能搜到的有关b2的长毛象对象存储教程都不准确了。而且我还为此熬夜好几晚折腾了这个对象存储。</p><span id="more"></span><h1 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h1><p>自从上次我把长毛象实例<a href="/2025/04/12/migrating-instance/">迁移到现在的VPS以后</a>，我就感觉有很多地方不对劲。我现在用的和上次用的是Contabo，名字也不避讳了，反正今年肯定要迁移走了，不如说出来避个雷。<br>这一家的优点很明显，性价比非常高，硬盘也非常大，这5.5美元&#x2F;月400G硬盘是其他供应商都比不了的。你们读者如果想要租，我也不反对。<br>但是，今年起就租不到这个价格4核6G的VPS了，而且前两个月它还要涨价！这我就不能忍了，必须找下一家！后来它又推送给我一个活动，可以年付，以平均每月$4.95的价格租一个4核4G内存400G硬盘的VPS。我就先租了并在1个月前迁过去了。用了大概2周后，发现了一些问题：</p><ol><li>全文搜索总是失效。ElasticSearch进程总是停掉，而这个服务重启非常非常慢，总是超时，最后我把超时的时间延长了10倍才勉强解决。进程停掉的问题，是在我迁移成功后大约1周才开始的。我把swap扩张到10G，这个<code>elasticsearch.service</code>才勉强正常运行。</li><li>ssh端口被擅自更改。这我也不知道怎么回事，到底是不是供应商改的？我实例的服务器，ssh端口不再是22。这是出于防止brutespray的目的而改掉的。当然，ufw也改掉了，禁了22&#x2F;tcp端口。然而有一天我发现无法登录ssh了。我一开始怀疑也是内存不足，ssh进程给顶掉了，但其实不是。我用救援模式，重启进入，还发现我再contabo的面板点了救援模式，非但进不去，长毛象实例也没掉线。我在面板反复重启关机以后才进入了救援模式。结果发现它把我的<code>ssh.socket</code>给改回默认22端口了😅。</li><li>管理界面响应过慢。我要经常查看存储使用情况，它这个界面 <a href="https://cmx.dzm.pp.ua/admin/dashboard">https://cmx.dzm.pp.ua/admin/dashboard</a> （你们不要去点，建议当管理员的读者把&lt;cmx.dzm.pp.ua&gt;换成自己实例的网址）每次都要磨蹭很久，以前似乎从来不这样的。我把实例迁移回家以后，发现虽然网速不快，但是管理界面的响应快了很多。所以我认为是VPS有问题，因此准备迁移到别家去。</li></ol><p>其他厂商，以及Contabo的其他高性价比VPS，尤其月均$5以下的那种，也就100G出头的硬盘，用来存储媒体文件完全不够。因此就需要找个便宜的对象存储来托管媒体文件。</p><h2 id="对象存储的选用"><a href="#对象存储的选用" class="headerlink" title="对象存储的选用"></a>对象存储的选用</h2><p>我站的媒体文件远超10G，所以不考虑免费额度。本文不打算进行比价，也不赘述选用backblaze的理由了。除了backblaze以外，我站的另一个备选就是Cloudflare R2存储。<strong>如果发现b2不合适，那么我以后还会再写一篇关于R2存储的配置的博客。</strong> 目前b2的有点除了便宜没有其他了。b2的价格是6美元&#x2F;TB&#x2F;month，而R2的价格是0.015美元&#x2F;GB&#x2F;month。<br>b2也有很多<strong>缺点</strong>：</p><ol><li>网站上面显示的大小比我实际上（管理界面和上传的大小）要大几十个G。这很有可能会导致最终月均价格比R2存储桶要贵。</li><li>网站对手机端不友好，而且网站管理页面响应也非常慢。这样的话，我关心用量和资费就远比R2要慢了。</li><li>还有很多功能用途不是很了解，不像R2一看就知道是要用来干什么的。</li><li>媒体文件上传响应非常慢，上传视频经常失败，经过我迁移b2存储桶到欧洲（离我VPS更近），再配置代理规则以后，才有所改观。相比之下，R2的表现就要好很多。</li></ol><p>优点也有（选择b2存储的理由）：</p><ol><li>便宜</li><li>跟cloudflare属于带宽联盟，下载流量可以免费</li></ol><h1 id="桶的创建"><a href="#桶的创建" class="headerlink" title="桶的创建"></a>桶的创建</h1><p>首先注册一个账号，注意选择地区（如果地区选择错误，或是要在其他地区开一个桶，那么请注册一个新账号，邮箱可以用cloudflare邮件路由来创建）<br><img src="backblaze-register.png"><br>注册时，建议使用梯子的美国节点，然后通过邮箱里的确认邮件完成注册。<br>单击创作一个桶<br><img src="create-a-bucket.jpg"><br>这里应该创建一个公共桶，第一次选择公共桶需要付款1美元。也可以使用私人桶，然后通过Cloudflare Worker用APIkey访问图片，这样更安全，但是更为麻烦，而且我这种架构，b2→Cloudflare→我的VPS缓存→Cloudflare缓存，写出来怕被一些高手说“太过扭曲”。安全肯定很安全，私有桶不怕有人对我的对象存储进行DDOS，从而造成天价账单了。参考文献：<a href="https://www.backblaze.com/blog/how-to-serve-data-from-a-private-bucket-with-a-cloudflare-worker/">https://www.backblaze.com/blog/how-to-serve-data-from-a-private-bucket-with-a-cloudflare-worker/</a><br><img src="bb-bd-Cloudflare-B2-Worker_Vertical-cropped.png"><br>桶的名字我建议设为&lt;你实例的名称&gt;+&lt;40个随机字母数字&gt;。如果设为你实例的网址，那么我可以很轻易地对你的桶进行DDOS，造成当日无法使用，或形成天价账单。<br>生命周期设为只保留最后版本<br><img src="life-cycle.jpg"><br>其余设置都设为disabled，CORS亲测设置了也没用。</p><h1 id="从本地迁移文件"><a href="#从本地迁移文件" class="headerlink" title="从本地迁移文件"></a>从本地迁移文件</h1><p>登录你实例的ssh。在root账户下，安装awscli。可以用包管理器，也可以用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install python3-pip</span><br><span class="line">pip install awscli</span><br></pre></td></tr></table></figure><p>如果有报错，请自行排错。<br>接下来配置你的APIkey。切换到<code>mastodon</code>用户，配置aws-cli</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - mastodon</span><br><span class="line">aws configure</span><br></pre></td></tr></table></figure><p>登录到backblaze云存储界面（很快就会需要重新登录）。选择“应用密钥”。<br><img src="apikeys.jpg"><br>为aws-cli创建新密钥<br><img src="add-application-key.jpg"><br>接下来会显示“成功！ 您的新应用程序密钥已创建。 它只会出现一次。”将keyID和applicationKey填入ssh界面。地区部分由于是第三方兼容s3接口，所以无所谓。APIkey保存在长毛象账户的<code>~/.aws</code>路径下，可随时修改。接下来配置<code>~/.aws/config</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[default]</span><br><span class="line">endpoint_url = https://s3.us-west-004.backblazeb2.com</span><br><span class="line">region = us-west-004</span><br><span class="line">request_checksum_calculation = WHEN_REQUIRED</span><br><span class="line">response_checksum_validation = WHEN_REQUIRED</span><br></pre></td></tr></table></figure><p>其中最后两行不能少，否则在awscli在上传文件时会报错，文件不会被上传。<br>然后回到root账户下，进入<code>tmux</code>，再切换到<code>mastodon</code>账户下，先清理7天前的文件，再清理orphans文件，具体步骤在<a href="/2025/04/12/migrating-instance/">迁移</a>博客中。<br>清理1遍以后，再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws s3 <span class="built_in">sync</span> /home/mastodon/live/public/system s3://【你的bucket名】 --endpoint-url=https://s3.us-west-004.backblazeb2.com</span><br></pre></td></tr></table></figure><p>跟<a href="https://pullopen.github.io/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/2020/07/22/Move-mastodon-media-to-Scaleway.html">网上教程</a>不同，这里不要设置<code>--acl public-read</code>（会报错），<code>--endpoint-url</code>设成你的桶的。命令开始执行后，先仔细观察有没有error，一切顺利的话可以Ctrl+B再按D，detach会话。<br>过一段时间后，同步完成了，就可以设定你的实例了。</p><h1 id="配置nginx缓存"><a href="#配置nginx缓存" class="headerlink" title="配置nginx缓存"></a>配置nginx缓存</h1><p>接下来就得讲讲本站的CDN架构。<br><img src="CDN-architecture.jpeg"><br>首先，媒体文件每次都上传到b2存储桶。需要访问时，用户和外站从CDN拉取媒体文件。世界各地的Cloudflare服务器都存有本站的图片文件。如果没有，就到我的nginx服务器，也就是我的实例服务器获取。我的实例服务器的相关路径在被访问过一次以后，也会将图片长期保存。如果也没有图片，那样才会去b2存储桶获取。也就是说，本站的媒体文件理论上遍布全球。</p><p>根据<a href="https://docs.joinmastodon.org/admin/optional/object-storage-proxy/">官方文档</a>配置nginx缓存服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl http2;</span><br><span class="line">  listen [::]:443 ssl http2;</span><br><span class="line">  server_name i-cmx.dzm.pp.ua;</span><br><span class="line">  root /var/www/html;</span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/i-cmx.dzm.pp.ua/fullchain.pem; # managed by Certbot</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/i-cmx.dzm.pp.ua/privkey.pem; # managed by Certbot</span><br><span class="line"></span><br><span class="line">  keepalive_timeout 30;</span><br><span class="line"></span><br><span class="line">  location = / &#123;</span><br><span class="line">    index index.html;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    try_files $uri @s3;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location = /favicon.ico &#123;</span><br><span class="line">    deny all;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  set $s3_backend &#x27;https://YOUR_BUCKET_NAME.YOUR_S3_HOSTNAME&#x27;;</span><br><span class="line"></span><br><span class="line">  location @s3 &#123;</span><br><span class="line">    limit_except GET &#123;</span><br><span class="line">      deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    resolver 8.8.8.8;</span><br><span class="line">    proxy_set_header Host YOUR_BUCKET_NAME.YOUR_S3_HOSTNAME;</span><br><span class="line">    proxy_set_header Connection &#x27;&#x27;;</span><br><span class="line">    proxy_set_header Authorization &#x27;&#x27;;</span><br><span class="line">    proxy_hide_header Set-Cookie;</span><br><span class="line">    proxy_hide_header &#x27;Access-Control-Allow-Origin&#x27;;</span><br><span class="line">    proxy_hide_header &#x27;Access-Control-Allow-Methods&#x27;;</span><br><span class="line">    proxy_hide_header &#x27;Access-Control-Allow-Headers&#x27;;</span><br><span class="line">    proxy_hide_header x-amz-id-2;</span><br><span class="line">    proxy_hide_header x-amz-request-id;</span><br><span class="line">    proxy_hide_header x-amz-meta-server-side-encryption;</span><br><span class="line">    proxy_hide_header x-amz-server-side-encryption;</span><br><span class="line">    proxy_hide_header x-amz-bucket-region;</span><br><span class="line">    proxy_hide_header x-amzn-requestid;</span><br><span class="line">    proxy_ignore_headers Set-Cookie;</span><br><span class="line">    proxy_pass $s3_backend$uri;</span><br><span class="line">    proxy_intercept_errors off;</span><br><span class="line">    proxy_ssl_server_name on;</span><br><span class="line"></span><br><span class="line">    proxy_cache CACHE;</span><br><span class="line">    proxy_cache_valid 200 1y;</span><br><span class="line">    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;</span><br><span class="line">    proxy_cache_lock on;</span><br><span class="line"></span><br><span class="line">    expires 2h;</span><br><span class="line">    add_header Cache-Control public;</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span><br><span class="line">    add_header X-Cache-Status $upstream_cache_status;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header Content-Security-Policy &quot;default-src &#x27;none&#x27;; form-action &#x27;none&#x27;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相比官方，我作出了如下改动：</p><ul><li>把服务器上的缓存时间改为了1年</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_valid 200 1y;</span><br></pre></td></tr></table></figure><ul><li>把用户设备上的缓存时间缩短为了2小时</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expires 2h;</span><br></pre></td></tr></table></figure><ul><li>禁止获取b2的图标，这样用户就难以得知我用的是哪个厂商的对象存储服务（看我的博客还是可以知道的），增加了猜存储桶进行DDOS的难度</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location = /favicon.ico &#123;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其余不变，缓存位置在<code>/var/cache/nginx</code>目录下，需要清缓存的话，进入该目录直接<code>rm -rf *</code>即可，建议先做好快照。<br>配置完成后，记得去cloudflare解析<code>i-cmx.dzm.pp.ua</code>到服务器，打开小云朵，设定SSL&#x2F;TLS加密模式。然后先<code>certbot certonly --nginx -d i-cmx.dzm.pp.ua</code>，生成证书后，再直接<code>ln -s /etc/nginx/sites-available/media /etc/nginx/sites-enabled</code>。改完配置文件后，先<code>nginx -t</code>，提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><p>再重启nginx服务。也别忘了检查crontab。</p><blockquote><p>💡：为什么我要把域名设为i-cmx.dzm.pp.ua？而不是i.cmx.dzm.pp.ua？<br>你试过就知道了，这样Cloudflare无法生成证书，除非购买收费的证书服务。</p></blockquote><h1 id="配置长毛象实例"><a href="#配置长毛象实例" class="headerlink" title="配置长毛象实例"></a>配置长毛象实例</h1><p>首先进入<code>tmux attach</code>查看同步会话，会话结束，暨awscli同步完成后，就可以让长毛象正式开始使用对象存储了。经过我的分析与实践，配置文件应当这么配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">S3_ENABLED=true</span><br><span class="line">S3_ENDPOINT=&lt;这里填桶的Endpoint&gt;</span><br><span class="line">S3_BUCKET=&lt;这里填桶的名称&gt;</span><br><span class="line">AWS_ACCESS_KEY_ID=&lt;这里填你的keyID&gt;</span><br><span class="line">AWS_SECRET_ACCESS_KEY=&lt;这里填你的APIkey&gt;</span><br><span class="line">S3_READ_TIMEOUT=10</span><br><span class="line">S3_FORCE_SINGLE_REQUEST=true</span><br><span class="line"></span><br><span class="line">S3_PROTOCOL=https</span><br><span class="line">S3_ALIAS_HOST=&lt;这里填你的nginx缓存服务器的域名，或者一切可以访问存储桶的CDN&gt;</span><br></pre></td></tr></table></figure><p>什么<code>S3_HOSTNAME</code>，<code>S3_REGION</code>一概不要写。<code>S3_HOSTNAME</code>如实写了，如果你<code>S3_ALIAS_HOST</code>没写，那么就会泄露你的存储桶，从而失去缓存提供的DDOS防护。<code>S3_REGION</code>是你在用正牌aws s3对象存储时才有用的。</p><p>仔细看，配置文件的上半部分，决定了你和用户上传媒体文件时，你实例如何上传文件。把超时延长，强制单连接，就能防止上传较大文件失败。<br>配置文件的下半部分只要填两条，这个决定了你实例加载媒体时，给客户端或网页端传什么样的链接。通过这个链接，前端才能解析图片的URL。<br>填配置文件时，建议当场生成新的APIkey。</p><p>最后回到root账户，重启一切长毛象服务<code>systemctl restart mastodon-*</code>。</p><h2 id="验证结果"><a href="#验证结果" class="headerlink" title="验证结果"></a>验证结果</h2><p>重启实例后，登录网页端，按Ctrl+F5刷新网页。对图片检查元素<br><img src="CDN-media.jpg"><br>发现媒体文件的地址变成了CDN地址+路径，而不是<code>https://cmx.dzm.pp.ua/system/</code>+路径，就说明成功了。</p><h2 id="后续同步"><a href="#后续同步" class="headerlink" title="后续同步"></a>后续同步</h2><p>存储桶正式上岗后，再使用awscli进行一下同步，即可解决同步完成后到长毛象配置完成重启前的空白。以后的媒体文件迁移也都按照这个思路进行无缝衔接。</p><h1 id="网络问题优化"><a href="#网络问题优化" class="headerlink" title="网络问题优化"></a>网络问题优化</h1><p>之前有<a href="/2025/04/12/Warp%E4%BB%A3%E7%90%86%EF%BC%88%E9%9D%9EDocker%E7%89%88%EF%BC%89/">隐藏源站IP</a>，因此，上传图片也走了代理。这个问题我研究了很久，熬夜好几晚，还曾试图修改代码。但是最优解是<code>.env.production</code>再加一条配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO_PROXY=.backblazeb2.com</span><br></pre></td></tr></table></figure><p>众所周知，长毛象的配置文件都是环境变量。特别的是，这个环境变量是通过<code>dotenv</code>模块，仅针对长毛象这一个软件的。所以<code>export http_proxy</code>什么的都不会影响到其他程序，还有长毛象的各种密钥，也不会影响到其他程序，尤其是其他ActivityPub实例。这时再添加一个环境变量<code>NO_PROXY</code>即可有效绕过<code>http_proxy</code>。这个环境变量，不能使用通配符，只能用后缀来包括整个范围。</p><h1 id="清理媒体文件计划任务"><a href="#清理媒体文件计划任务" class="headerlink" title="清理媒体文件计划任务"></a>清理媒体文件计划任务</h1><p>跟本地存储不同，对象存储的空间十分宝贵，所以需要在<code>mastodon</code>账户下配置<code>crontab -e</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 21 * * *<span class="built_in">cd</span> /home/mastodon/live &amp;&amp; RAILS_ENV=production ./bin/tootctl media remove --days=15</span><br><span class="line">0 22 * * *      <span class="built_in">cd</span> /home/mastodon/live &amp;&amp; RAILS_ENV=production ./bin/tootctl media remove-orphans</span><br></pre></td></tr></table></figure><h1 id="迁移存储桶"><a href="#迁移存储桶" class="headerlink" title="迁移存储桶"></a>迁移存储桶</h1><p>由于存储桶在美国，VPS在德国，由于物理距离太远，导致上传文件的性能表现不佳。此时可以迁移存储桶。首先注册一个新backblaze账号，位置选在你想要的地理位置。开启一个新的存储桶。登录旧桶账号，选择Cloud Replication。<br><img src="Cloud-Replication.jpg"><br>选择源和目标后，它会在两个账号各生成一个密钥，自动进行迁移。这需要等待1~2天，不会立刻就有动静的。大约2天后，新桶文件比旧桶多了，你就可以把前后端迁往新桶。每次迁移媒体文件后，建议删除orphans，因为我总是觉得桶占用的空间比实际要大(；′⌒&#96;)。<br>迁移完成几天后，就可以把旧桶删除，节约开销。</p><p>本节是因为backblaze自带站内迁移才写的，如果要迁移到其他厂商，有服务就用服务。如果不划算或者没服务，直接用awscli分两步走得了。</p><h1 id="带宽联盟优化（可选）"><a href="#带宽联盟优化（可选）" class="headerlink" title="带宽联盟优化（可选）"></a>带宽联盟优化（可选）</h1><p>b2存储桶每个月可以免费下载3倍月均存储的数据，但是“每天下载带宽限度”总是报警，设置太低会影响使用，设置太高感觉又不好看。如果你真的会用完这个带宽，那么也不妨试一试本节内容。</p><h2 id="公开桶设置"><a href="#公开桶设置" class="headerlink" title="公开桶设置"></a>公开桶设置</h2><p>首先要找到桶的友好链接。方法是进入桶浏览文件，找到一个图片文件后，点开，详情内有“友好URL”。主机名部分，在Cloudflare解析CNAME，同时点亮小云朵。这样它就走了CDN，免了流量。这个友好链接的格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://f00x.backblazeb2.com/file/&lt;你的存储桶名字&gt;/&lt;媒体在你站的路径&gt;</span><br></pre></td></tr></table></figure><p>因此，只要在Cloudflare设置“URL重写规则”，筛选方式：主机名等于你刚设的域名，重写到Dynamic <code>concat(&quot;/file/&lt;你的存储桶&gt;&quot;, http.request.uri.path)</code>，保存并启用即可。然后把你的nginx配置文件里的<code>YOUR_BUCKET_NAME.YOUR_S3_HOSTNAME</code>改为你刚解析的域名即可。</p><p>这时眼尖的读者要说了，这个域名如果被DDOS该咋办？一个办法，再设40个随机字母数字。缺点是迁移重设什么的太烦。<br>还有一个聪明一点的办法，就是设置cloudflare access，或者设置规则禁止访问。通过这个方式，禁止所有非VPS的IP访问这个域名。<br>方法很多，举个例子，access添加一个应用程序，域名就是刚设置的，加一条策略，规则是VPS的IP地址，既要IPv4的也要IPv6的，否则无法正常访问。操作选择Bypass，不能选择allow，否则nginx反向代理和cloudflare CDN只会把被夹了的图缓存下来，最后修复完还得手动清缓存。</p><h2 id="私密桶设置（略过）"><a href="#私密桶设置（略过）" class="headerlink" title="私密桶设置（略过）"></a>私密桶设置（略过）</h2><p>本教程已经说了是不完整教程了，所以给个参考文献（官方文档）：<a href="https://www.backblaze.com/blog/use-a-cloudflare-worker-to-send-notifications-on-backblaze-b2-events/">https://www.backblaze.com/blog/use-a-cloudflare-worker-to-send-notifications-on-backblaze-b2-events/</a><br>大致上的意思就是：<br>你把APIkey交给cloudflare workers，用户访问你的CDN地址，workers用API去访问私有桶。这期间可以通过带宽联盟免流量。<br>优点是不怕被人DDOS刷流量，能省1美元。缺点还是太麻烦。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;大家好，我又回来了。这次博客更新比我预料得要频繁。因为，这操作确实有点复杂，而且因为&lt;a href=&quot;https://backblaze.com/&quot;&gt;backblaze&lt;/a&gt;的政策相比于前几年改了，所以网上能搜到的有关b2的长毛象对象存储教程都不准确了。而且我还为此熬夜好几晚折腾了这个对象存储。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="长毛象实例运维" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%AE%9E%E4%BE%8B%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="非保姆级教程" scheme="https://blog.dzm.pp.ua/tags/%E9%9D%9E%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B/"/>
    
    <category term="长毛象运维" scheme="https://blog.dzm.pp.ua/tags/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BF%90%E7%BB%B4/"/>
    
    <category term="网络安全" scheme="https://blog.dzm.pp.ua/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>长毛象定时发文</title>
    <link href="https://blog.dzm.pp.ua/2025/05/02/mastodon-scheduled-statuses/"/>
    <id>https://blog.dzm.pp.ua/2025/05/02/mastodon-scheduled-statuses/</id>
    <published>2025-05-02T07:57:39.000Z</published>
    <updated>2025-05-18T07:35:11.524Z</updated>
    
    <content type="html"><![CDATA[<p>这个事情，我查了下我的git提交的日期，已经是半个月前自学的了，肯定不能保证包教包会，但是留了些代码和一些基础知识，可以给未来的我和有同样需求的象友们提供参考。</p><span id="more"></span><p>这篇心得我也不说面向什么基础的读者了，即使读者是大神，也可能会跟我导师听了我的presentation以后说出一样的话“我听不懂你在说什么”。只能说尽量提供帮助。</p><h1 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h1><p>有些网友很喜欢分享自己的生活。有的喜欢在网上当偶像，今天吃了草莓塔，<strong>马上</strong>发一个带美图的照片<del>然后就被坏人跟踪</del>。有的在基层默默无闻数年，诶，今天有幸领导带我去参加了一个涉密的会议，发个朋友圈炫耀一下。<del>这也得益于上头天天说教：“你没干坏事要什么隐私啊”结果现在国家安全教育难以下手，留下来的都是爱炫耀的人。</del><br>我在长毛象上最主要的痛点，就不是天天发家里的街景图和快递包装了，而是分享YouTube和b站视频。还有微信里面的一些文章。这种行为其实也有危险，<strong>即使把链接脱敏，</strong> 只要根据你发布的日期和时间，找到你大概在看视频时那段时间的那些评论，就能知道你的视频账号。随后可以根据你的投稿（如果有的话）和社工库里你账号绑定的身份证号，把你给开盒。<br>以上这种情况，只要晚两个小时再分享就可以多少减轻一点风险。<br>要做到这个，最没技术含量的办法，也是我最开始的办法，就是晚上再回去把视频翻出来，进行分享，同时要忍住不跟评论互动（不管是人家夸你，你去讨论也好，还是人家骂你，你去跟人讲道理也好）。代码上没技术含量，其实社会工程的技术含量也不小。我没上过培训班，不在乎老师说“你已经初中了，就不要用小学的知识来解题了”。我的处世之道是用的招数越傻越好，傻的满足不了需求了再用聪明的，用这样的方式让所有技术发挥最大作用。</p><h2 id="FediPlan"><a href="#FediPlan" class="headerlink" title="FediPlan"></a>FediPlan</h2><p>接下来我就去网上找有没有现成的办法推迟发嘟。我是不会为了锻炼而去找英文进行阅读的，不然我写出了这篇文章以后，还是会有人说我抄袭。搜“长毛象 计划发嘟”（菜鸟会搜“求救！！！长毛象怎么计划发嘟”），一般都是搜出怎么注册账号，甚至是怎么养大象之类的。然后用英文搜答案，就能找到了（别问我怎么练的英语，首先要学会照葫芦画瓢，不会ruby，不会javascript怎么办？找到类似的语法，把你想要的变量或词汇填进去！）。<br>我找到了这一篇 <a href="https://fedi.tips/scheduling-posts-on-mastodon/">https://fedi.tips/scheduling-posts-on-mastodon/</a> 。你就能了解到，其实早就在开发了。已经有软件实现了计划发嘟。而官方，确实有一个API叫<code>scheduled_at</code>。我查了官方文档，确实如此。所以，现在所有计划发嘟的软件的原理，就是发嘟请求中带有<code>scheduled_at</code>，实例的服务器接收到了，就会安排定时发嘟。而官方web端和主流应用都没有这个功能。<br>到现在为止，你可以登录 <a href="https://plan.fedilab.app/">https://plan.fedilab.app/</a> 这个网站进行发嘟。需要你跳转到你的实例以后，手动把token粘贴过来进行发嘟。该有的功能它都有，丑是有点丑，但是问题不大。缺点我认为就是发嘟文总会自带User Agent，而长毛象实例的服务器会根据你的UA给你的嘟文标注你用了哪个客户端。<br>如果这个FediPlan能改UA，那就无敌了，我也不需要写这个官方GitHub管理员都瞧不上的前端代码了。</p><h1 id="嘟文发送的基本原理"><a href="#嘟文发送的基本原理" class="headerlink" title="嘟文发送的基本原理"></a>嘟文发送的基本原理</h1><p>抛开客户端不谈，只简单讲讲网页端的原理，因为即使开发完了，官方和我的IceCube还是不能计划发嘟。<br>首先浏览器输入了实例的网址，登录了账号。这时会跳入这个路径 <a href="https://cmx.dzm.pp.ua/deck/getting-started">https://cmx.dzm.pp.ua/deck/getting-started</a> （仅限登录成功时）。<br><img src="getting-started.png"><br>此时，浏览器会执行javascript代码。有基础的读者都知道，浏览器是javascript的解释器，只要安全策略允许，浏览器可以根据javascript代码做任何事。前端代码就在浏览器跑起来了。<br><img src="principle.jpeg"><br>长毛象的前端是用react写的。react的基础就不赘述了，不懂的懒得看，懂的都远远比我还懂。<br>只要注意，每一个组件都要首字母大写，然后在render函数内当作一个HTML元素使用。而这个组件，它的值不像HTML的表单一样可以让用户随意改。最基础的，是要编写函数<code>onChange</code>，然后通过<code>onChange</code>这个方法修改这个元素的值。每次<code>onChange</code>修改了元素的值，<code>render</code>函数都会重新运行一次。</p><h2 id="Redux的逻辑浅析"><a href="#Redux的逻辑浅析" class="headerlink" title="Redux的逻辑浅析"></a>Redux的逻辑浅析</h2><p>长毛象前端嘟文发送，并不像发送表单一样简单。你的嘟文，它的内容、媒体、投票、是否敏感、内容警告信息等一大串属性，最终都是要发给服务器的。而这些属性，都要反映在你的编辑界面里。所以这些<code>state</code>都储存在store里，每次有组件被操作，<code>onChange</code>就要触发<code>dispatch()</code>，而dispatch函数会根据括号里的参数找到<code>action</code>对象。action文件里定义了一大堆大写字母的变量，其实是为了防止调用<code>action.type</code>时遇到拼写错误无法正确执行期望的动作，且不报错的这个情况发生。随后action函数再去找reducer。因为每次发生更改，store里面的数组可能都要从头重新写一遍，所以为了简化代码，才有reducer这么个模块。reducer模块会枚举所有<code>action.type</code>，用大量<code>elseif</code>或<code>switch</code> <code>case</code>罗列所有<code>action.type</code>。<br><img src="redux.gif"><br>也就是说，你每点一次鼠标，每按一次键盘，上图的流程就要跑一圈。<br>直到最后，你编辑完毕，点下发送，它就会执行<code>submit</code>动作。这个动作直接调用了<code>api()</code>模块，把你的token，加上<code>store</code>里的所有<code>state</code>，发到服务器地址的指定路径下，最后经过nginx和puma的解析，让后端处理这些数据，将它们放入数据库，并发送给你的所有粉丝。</p><h1 id="代码魔改"><a href="#代码魔改" class="headerlink" title="代码魔改"></a>代码魔改</h1><p>以下是在前端添加计划发嘟功能的代码，请读者谨慎修改！</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/actions/compose.js b/app/javascript/mastodon/actions/compose.js</span></span><br><span class="line"><span class="comment">index 7525be454..88cb684a8 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/actions/compose.js</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/actions/compose.js</span></span><br><span class="line"><span class="meta">@@ -81,6 +81,9 @@</span> export const COMPOSE_CHANGE_MEDIA_ORDER       = &#x27;COMPOSE_CHANGE_MEDIA_ORDER&#x27;;</span><br><span class="line"> export const COMPOSE_SET_STATUS = &#x27;COMPOSE_SET_STATUS&#x27;;</span><br><span class="line"> export const COMPOSE_FOCUS = &#x27;COMPOSE_FOCUS&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="addition">+export const COMPOSE_CHANGE_IS_SCHEDULED = &#x27;COMPOSE_CHANGE_IS_SCHEDULED&#x27;;</span></span><br><span class="line"><span class="addition">+export const COMPOSE_CHANGE_SCHEDULE_TIME = &#x27;COMPOSE_CHANGE_SCHEDULE_TIME&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> const messages = defineMessages(&#123;</span><br><span class="line">   uploadErrorLimit: &#123; id: &#x27;upload_error.limit&#x27;, defaultMessage: &#x27;File upload limit exceeded.&#x27; &#125;,</span><br><span class="line">   open: &#123; id: &#x27;compose.published.open&#x27;, defaultMessage: &#x27;Open&#x27; &#125;,</span><br><span class="line"><span class="meta">@@ -187,6 +190,7 @@</span> export function submitCompose() &#123;</span><br><span class="line">     const status   = getState().getIn([&#x27;compose&#x27;, &#x27;text&#x27;], &#x27;&#x27;);</span><br><span class="line">     const media    = getState().getIn([&#x27;compose&#x27;, &#x27;media_attachments&#x27;]);</span><br><span class="line">     const statusId = getState().getIn([&#x27;compose&#x27;, &#x27;id&#x27;], null);</span><br><span class="line"><span class="addition">+    const is_scheduled = getState().getIn([&#x27;compose&#x27;, &#x27;is_scheduled&#x27;]);</span></span><br><span class="line"></span><br><span class="line">     if ((!status || !status.length) &amp;&amp; media.size <span class="comment">=== 0) &#123;</span></span><br><span class="line">       return;</span><br><span class="line"><span class="meta">@@ -227,6 +231,7 @@</span> export function submitCompose() &#123;</span><br><span class="line">         visibility: getState().getIn([&#x27;compose&#x27;, &#x27;privacy&#x27;]),</span><br><span class="line">         poll: getState().getIn([&#x27;compose&#x27;, &#x27;poll&#x27;], null),</span><br><span class="line">         language: getState().getIn([&#x27;compose&#x27;, &#x27;language&#x27;]),</span><br><span class="line"><span class="addition">+        scheduled_at: is_scheduled ? getState().getIn([&#x27;compose&#x27;, &#x27;scheduled_at&#x27;]) : null,</span></span><br><span class="line">       &#125;,</span><br><span class="line">       headers: &#123;</span><br><span class="line">         &#x27;Idempotency-Key&#x27;: getState().getIn([&#x27;compose&#x27;, &#x27;idempotencyKey&#x27;]),</span><br><span class="line"><span class="meta">@@ -236,9 +241,22 @@</span> export function submitCompose() &#123;</span><br><span class="line">         browserHistory.goBack();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      if (&#x27;scheduled_at&#x27; in response.data) &#123;</span></span><br><span class="line"><span class="addition">+        dispatch(showAlert(&#123;</span></span><br><span class="line"><span class="addition">+          message: messages.saved,</span></span><br><span class="line"><span class="addition">+          dismissAfter: 10000,</span></span><br><span class="line"><span class="addition">+        &#125;));</span></span><br><span class="line"><span class="addition">+        dispatch(submitComposeSuccess(&#123; ...response.data.params&#125;));</span></span><br><span class="line"><span class="addition">+        return;</span></span><br><span class="line"><span class="addition">+      &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">       dispatch(insertIntoTagHistory(response.data.tags, status));</span><br><span class="line">       dispatch(submitComposeSuccess(&#123; ...response.data &#125;));</span><br><span class="line"></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">       // To make the app more responsive, immediately push the status</span><br><span class="line">       // into the columns</span><br><span class="line">       const insertIfOnline = timelineId =&gt; &#123;</span><br><span class="line"><span class="meta">@@ -829,3 +847,16 @@</span> export const changeMediaOrder = (a, b) =&gt; (&#123;</span><br><span class="line">   a,</span><br><span class="line">   b,</span><br><span class="line"> &#125;);</span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+export function changeIsScheduled() &#123;</span></span><br><span class="line"><span class="addition">+  return &#123;</span></span><br><span class="line"><span class="addition">+    type: COMPOSE_CHANGE_IS_SCHEDULED,</span></span><br><span class="line"><span class="addition">+  &#125;;</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+export function changeScheduleTime(value) &#123;</span></span><br><span class="line"><span class="addition">+  return &#123;</span></span><br><span class="line"><span class="addition">+    type: COMPOSE_CHANGE_SCHEDULE_TIME,</span></span><br><span class="line"><span class="addition">+    value,</span></span><br><span class="line"><span class="addition">+  &#125;;</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line">\ No newline at end of file</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/components/compose_form.jsx b/app/javascript/mastodon/features/compose/components/compose_form.jsx</span></span><br><span class="line"><span class="comment">index b5e8dabb7..e1e0038eb 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/features/compose/components/compose_form.jsx</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/components/compose_form.jsx</span></span><br><span class="line"><span class="meta">@@ -29,6 +29,9 @@</span> import &#123; PollForm &#125; from &quot;./poll_form&quot;;</span><br><span class="line"> import &#123; ReplyIndicator &#125; from &#x27;./reply_indicator&#x27;;</span><br><span class="line"> import &#123; UploadForm &#125; from &#x27;./upload_form&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="addition">+import ScheduleButtonContainer from &#x27;../containers/schedule_button_container&#x27;;</span></span><br><span class="line"><span class="addition">+import &#123; ScheduleForm &#125; from &#x27;./schedule_form&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> const allowedAroundShortCode = &#x27;&gt;&lt;\u0085\u0020\u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\u0009\u000a\u000b\u000c\u000d&#x27;;</span><br><span class="line"></span><br><span class="line"> const messages = defineMessages(&#123;</span><br><span class="line"><span class="meta">@@ -69,6 +72,11 @@</span> class ComposeForm extends ImmutablePureComponent &#123;</span><br><span class="line">     singleColumn: PropTypes.bool,</span><br><span class="line">     lang: PropTypes.string,</span><br><span class="line">     maxChars: PropTypes.number,</span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    schedule_time: PropTypes.string,</span></span><br><span class="line"><span class="addition">+    schedule_timezone: PropTypes.string,</span></span><br><span class="line"><span class="addition">+    is_scheduled: PropTypes.bool.isRequired,</span></span><br><span class="line"><span class="addition">+    scheduled_at: PropTypes.string,</span></span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   static defaultProps = &#123;</span><br><span class="line"><span class="meta">@@ -295,6 +303,7 @@</span> class ComposeForm extends ImmutablePureComponent &#123;</span><br><span class="line">                 &lt;PollButtonContainer /&gt;</span><br><span class="line">                 &lt;SpoilerButtonContainer /&gt;</span><br><span class="line">                 &lt;EmojiPickerDropdown onPickEmoji=&#123;this.handleEmojiPick&#125; /&gt;</span><br><span class="line"><span class="addition">+                &lt;ScheduleButtonContainer /&gt;</span></span><br><span class="line">                 &lt;CharacterCounter max=&#123;maxChars&#125; text=&#123;this.getFulltextForCharacterCounting()&#125; /&gt;</span><br><span class="line">               &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">@@ -306,6 +315,7 @@</span> class ComposeForm extends ImmutablePureComponent &#123;</span><br><span class="line">                 /&gt;</span><br><span class="line">               &lt;/div&gt;</span><br><span class="line">             &lt;/div&gt;</span><br><span class="line"><span class="addition">+            &lt;ScheduleForm /&gt;</span></span><br><span class="line">           &lt;/div&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">       &lt;/form&gt;</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/components/schedule_form.jsx b/app/javascript/mastodon/features/compose/components/schedule_form.jsx</span></span><br><span class="line">new file mode 100644</span><br><span class="line"><span class="comment">index 000000000..435d9427d</span></span><br><span class="line"><span class="comment">--- /dev/null</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/components/schedule_form.jsx</span></span><br><span class="line"><span class="meta">@@ -0,0 +1,41 @@</span></span><br><span class="line"><span class="addition">+import PropTypes from &#x27;prop-types&#x27;;</span></span><br><span class="line"><span class="addition">+import &#123; useCallback &#125; from &#x27;react&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+import &#123; defineMessages, useIntl &#125; from &#x27;react-intl&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+import classNames from &#x27;classnames&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+import &#123; useDispatch, useSelector&#125; from &#x27;react-redux&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+import &#123; changeScheduleTime &#125; from &#x27;mastodon/actions/compose&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+const messages = defineMessages(&#123;</span></span><br><span class="line"><span class="addition">+    schedule_time: &#123; id: &#x27;compose_form.schedule_time&#x27;, defaultMessage: &#x27;计划发文时间（北京时间）&#x27; &#125;,</span></span><br><span class="line"><span class="addition">+&#125;);</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+export const ScheduleForm = () =&gt; &#123;</span></span><br><span class="line"><span class="addition">+    const is_scheduled = useSelector(state =&gt; state.getIn([&#x27;compose&#x27;, &#x27;is_scheduled&#x27;]));</span></span><br><span class="line"><span class="addition">+    const schedule_time = useSelector(state =&gt; state.getIn([&#x27;compose&#x27;, &#x27;schedule_time&#x27;]));</span></span><br><span class="line"><span class="addition">+    const dispatch = useDispatch();</span></span><br><span class="line"><span class="addition">+    const intl = useIntl();</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    const handleChange = useCallback((&#123; target: &#123; value &#125; &#125;) =&gt; &#123;</span></span><br><span class="line"><span class="addition">+        dispatch(changeScheduleTime(value));</span></span><br><span class="line"><span class="addition">+    &#125;, [dispatch]);</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    if (!is_scheduled) &#123;</span></span><br><span class="line"><span class="addition">+        return null;</span></span><br><span class="line"><span class="addition">+    &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    return (</span></span><br><span class="line"><span class="addition">+        &lt;div&gt;</span></span><br><span class="line"><span class="addition">+            &lt;label&gt;&#123;intl.formatMessage(messages.schedule_time)&#125;&lt;/label&gt;</span></span><br><span class="line"><span class="addition">+            &lt;input</span></span><br><span class="line"><span class="addition">+                className=&#x27;search__input&#x27;</span></span><br><span class="line"><span class="addition">+                type=&#x27;datetime-local&#x27;</span></span><br><span class="line"><span class="addition">+                value=&#123;schedule_time&#125;</span></span><br><span class="line"><span class="addition">+                onChange=&#123;handleChange&#125;</span></span><br><span class="line"><span class="addition">+            /&gt;</span></span><br><span class="line"><span class="addition">+        &lt;/div&gt;</span></span><br><span class="line"><span class="addition">+    );</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line">\ No newline at end of file</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/containers/compose_form_container.js b/app/javascript/mastodon/features/compose/containers/compose_form_container.js</span></span><br><span class="line"><span class="comment">index 76ac65bf3..e97d33695 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/features/compose/containers/compose_form_container.js</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/containers/compose_form_container.js</span></span><br><span class="line"><span class="meta">@@ -29,6 +29,10 @@</span> const mapStateToProps = state =&gt; (&#123;</span><br><span class="line">   isInReply: state.getIn([&#x27;compose&#x27;, &#x27;in_reply_to&#x27;]) !== null,</span><br><span class="line">   lang: state.getIn([&#x27;compose&#x27;, &#x27;language&#x27;]),</span><br><span class="line">   maxChars: state.getIn([&#x27;server&#x27;, &#x27;server&#x27;, &#x27;configuration&#x27;, &#x27;statuses&#x27;, &#x27;max_characters&#x27;], 5000),</span><br><span class="line"><span class="addition">+  is_scheduled: state.getIn([&#x27;compose&#x27;, &#x27;is_scheduled&#x27;]),</span></span><br><span class="line"><span class="addition">+  schedule_time: state.getIn([&#x27;compose&#x27;, &#x27;schedule_time&#x27;]),</span></span><br><span class="line"><span class="addition">+  schedule_timezone: state.getIn([&#x27;compose&#x27;, &#x27;schedule_timezone&#x27;]),</span></span><br><span class="line"><span class="addition">+  scheduled_at: state.getIn([&#x27;compose&#x27;, &#x27;scheduled_at&#x27;]),</span></span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> const mapDispatchToProps = (dispatch) =&gt; (&#123;</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/containers/schedule_button_container.js b/app/javascript/mastodon/features/compose/containers/schedule_button_container.js</span></span><br><span class="line">new file mode 100644</span><br><span class="line"><span class="comment">index 000000000..0ece8ffb8</span></span><br><span class="line"><span class="comment">--- /dev/null</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/containers/schedule_button_container.js</span></span><br><span class="line"><span class="meta">@@ -0,0 +1,30 @@</span></span><br><span class="line"><span class="addition">+import &#123; injectIntl, defineMessages &#125; from &quot;react-intl&quot;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+import &#123; connect &#125; from &#x27;react-redux&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+import ScheduleIcon from &#x27;@/material-icons/400-20px/schedule.svg?react&#x27;;</span></span><br><span class="line"><span class="addition">+import &#123; IconButton &#125; from &quot;@/mastodon/components/icon_button&quot;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+import &#123; changeIsScheduled &#125; from &#x27;../../../actions/compose&#x27;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+const messages = defineMessages(&#123;</span></span><br><span class="line"><span class="addition">+    marked: &#123; id: &#x27;compose_form.schedule.marked&#x27;, defaultMessage: &#x27;本文将在以下时间发布&#x27;&#125;,</span></span><br><span class="line"><span class="addition">+    unmarked: &#123; id: &#x27;compose_form.schedule.unmarked&#x27;, defaultMessage: &#x27;文本将立即发布&#x27;&#125;,</span></span><br><span class="line"><span class="addition">+&#125;)</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+const mapStateToProps = (state, &#123; intl &#125;) =&gt; (&#123;</span></span><br><span class="line"><span class="addition">+    iconComponent: ScheduleIcon,</span></span><br><span class="line"><span class="addition">+    title: intl.formatMessage(state.getIn([&#x27;compose&#x27;, &#x27;is_scheduled&#x27;]) ? messages.marked : messages.unmarked),</span></span><br><span class="line"><span class="addition">+    active: state.getIn([&#x27;compose&#x27;, &#x27;is_scheduled&#x27;]),</span></span><br><span class="line"><span class="addition">+    ariaControls: &#x27;schedule-publish&#x27;,</span></span><br><span class="line"><span class="addition">+    size: 18,</span></span><br><span class="line"><span class="addition">+    inverted: true,</span></span><br><span class="line"><span class="addition">+&#125;);</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+const mapDispatchToProps = dispatch =&gt; (&#123;</span></span><br><span class="line"><span class="addition">+    onClick () &#123;</span></span><br><span class="line"><span class="addition">+        dispatch(changeIsScheduled());</span></span><br><span class="line"><span class="addition">+    &#125;,</span></span><br><span class="line"><span class="addition">+&#125;);</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+export default injectIntl(connect(mapStateToProps, mapDispatchToProps)(IconButton));</span></span><br><span class="line">\ No newline at end of file</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/reducers/compose.js b/app/javascript/mastodon/reducers/compose.js</span></span><br><span class="line"><span class="comment">index bfa2ec6a0..6b9a2c3ec 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/reducers/compose.js</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/reducers/compose.js</span></span><br><span class="line"><span class="meta">@@ -50,6 +50,8 @@</span> import &#123;</span><br><span class="line">   COMPOSE_CHANGE_MEDIA_ORDER,</span><br><span class="line">   COMPOSE_SET_STATUS,</span><br><span class="line">   COMPOSE_FOCUS,</span><br><span class="line"><span class="addition">+  COMPOSE_CHANGE_IS_SCHEDULED,</span></span><br><span class="line"><span class="addition">+  COMPOSE_CHANGE_SCHEDULE_TIME</span></span><br><span class="line"> &#125; from &#x27;../actions/compose&#x27;;</span><br><span class="line"> import &#123; REDRAFT &#125; from &#x27;../actions/statuses&#x27;;</span><br><span class="line"> import &#123; STORE_HYDRATE &#125; from &#x27;../actions/store&#x27;;</span><br><span class="line"><span class="meta">@@ -94,6 +96,11 @@</span> const initialState = ImmutableMap(&#123;</span><br><span class="line">     focusY: 0,</span><br><span class="line">     dirty: false,</span><br><span class="line">   &#125;),</span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  schedule_time: null,</span></span><br><span class="line"><span class="addition">+  schedule_timezone: &#x27;+08:00&#x27;,</span></span><br><span class="line"><span class="addition">+  is_scheduled: false,</span></span><br><span class="line"><span class="addition">+  scheduled_at: null,</span></span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> const initialPoll = ImmutableMap(&#123;</span><br><span class="line"><span class="meta">@@ -127,6 +134,9 @@</span> function clearAll(state) &#123;</span><br><span class="line">     map.update(&#x27;media_attachments&#x27;, list =&gt; list.clear());</span><br><span class="line">     map.set(&#x27;poll&#x27;, null);</span><br><span class="line">     map.set(&#x27;idempotencyKey&#x27;, uuid());</span><br><span class="line"><span class="addition">+    map.set(&#x27;schedule_time&#x27;, null);</span></span><br><span class="line"><span class="addition">+    map.set(&#x27;is_scheduled&#x27;, false);</span></span><br><span class="line"><span class="addition">+    map.set(&#x27;scheduled_at&#x27;, null);</span></span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@@ -560,6 +570,18 @@</span> export default function compose(state = initialState, action) &#123;</span><br><span class="line"></span><br><span class="line">       return list.splice(indexA, 1).splice(indexB, 0, moveItem);</span><br><span class="line">     &#125;);</span><br><span class="line"><span class="addition">+  case COMPOSE_CHANGE_IS_SCHEDULED:</span></span><br><span class="line"><span class="addition">+    return state.withMutations(map =&gt; &#123;</span></span><br><span class="line"><span class="addition">+      map.set(&#x27;is_scheduled&#x27;, !state.get(&#x27;is_scheduled&#x27;));</span></span><br><span class="line"><span class="addition">+      map.set(&#x27;scheduled_at&#x27;, state.get(&#x27;schedule_time&#x27;) + &#x27;:00.0&#x27; + state.get(&#x27;schedule_timezone&#x27;));</span></span><br><span class="line"><span class="addition">+      map.set(&#x27;idempotencyKey&#x27;, uuid());</span></span><br><span class="line"><span class="addition">+    &#125;);</span></span><br><span class="line"><span class="addition">+  case COMPOSE_CHANGE_SCHEDULE_TIME:</span></span><br><span class="line"><span class="addition">+    return state.withMutations(map =&gt; &#123;</span></span><br><span class="line"><span class="addition">+      map.set(&#x27;schedule_time&#x27;, action.value);</span></span><br><span class="line"><span class="addition">+      map.set(&#x27;scheduled_at&#x27;, action.value + &#x27;:00.0&#x27; + state.get(&#x27;schedule_timezone&#x27;));</span></span><br><span class="line"><span class="addition">+      map.set(&#x27;idempotencyKey&#x27;, uuid());</span></span><br><span class="line"><span class="addition">+    &#125;);</span></span><br><span class="line">   default:</span><br><span class="line">     return state;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">diff --git a/app/javascript/material-icons/400-20px/schedule.svg b/app/javascript/material-icons/400-20px/schedule.svg</span></span><br><span class="line">new file mode 100644</span><br><span class="line"><span class="comment">index 000000000..350607c71</span></span><br><span class="line"><span class="comment">--- /dev/null</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/material-icons/400-20px/schedule.svg</span></span><br><span class="line"><span class="meta">@@ -0,0 +1,6 @@</span></span><br><span class="line"><span class="addition">+&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="addition">+&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;20px&quot; height=&quot;20px&quot; viewBox=&quot;0 0 20 20&quot; version=&quot;1.1&quot;&gt;</span></span><br><span class="line"><span class="addition">+&lt;g id=&quot;surface1&quot;&gt;</span></span><br><span class="line"><span class="addition">+&lt;path style=&quot; stroke:none;fill-rule:nonzero;fill-opacity:1;&quot; d=&quot;M 13.476562 8.167969 C 15.507812 8.167969 17.382812 9.214844 18.398438 10.917969 C 19.417969 12.609375 19.417969 14.722656 18.398438 16.417969 C 17.382812 18.117188 15.507812 19.167969 13.476562 19.167969 C 10.332031 19.167969 7.785156 16.699219 7.785156 13.667969 C 7.785156 10.632812 10.332031 8.167969 13.476562 8.167969 Z M 7.160156 1.25 L 7.160156 2.058594 L 12.214844 2.058594 L 12.214844 1.25 C 12.214844 1.023438 12.398438 0.832031 12.632812 0.832031 L 13.066406 0.832031 C 13.292969 0.832031 13.484375 1.015625 13.484375 1.25 L 13.484375 2.058594 L 18.125 2.058594 C 18.359375 2.058594 18.542969 2.25 18.542969 2.476562 L 18.542969 8.367188 C 18.542969 8.589844 18.359375 8.785156 18.125 8.785156 L 17.691406 8.785156 C 17.457031 8.785156 17.273438 8.601562 17.273438 8.367188 L 17.273438 6.949219 L 2.101562 6.949219 L 2.101562 17.332031 L 7.375 17.332031 C 7.609375 17.332031 7.792969 17.515625 7.792969 17.75 L 7.792969 18.140625 C 7.792969 18.375 7.609375 18.558594 7.375 18.558594 L 0.832031 18.558594 L 0.832031 2.476562 C 0.832031 2.242188 1.015625 2.058594 1.25 2.058594 L 5.890625 2.058594 L 5.890625 1.25 C 5.890625 1.023438 6.074219 0.832031 6.308594 0.832031 L 6.742188 0.832031 C 6.964844 0.832031 7.160156 1.015625 7.160156 1.25 Z M 13.476562 9.390625 C 11.890625 9.390625 10.433594 10.207031 9.640625 11.535156 C 8.851562 12.859375 8.851562 14.492188 9.640625 15.808594 C 10.433594 17.125 11.890625 17.949219 13.476562 17.949219 C 15.917969 17.949219 17.898438 16.035156 17.898438 13.675781 C 17.898438 11.316406 15.917969 9.390625 13.476562 9.390625 Z M 12.523438 11.226562 L 13.375 11.226562 C 13.609375 11.226562 13.792969 11.410156 13.792969 11.640625 L 13.792969 13.941406 C 13.792969 14.089844 13.875 14.234375 14.007812 14.308594 L 14.976562 14.851562 C 15.074219 14.902344 15.144531 14.996094 15.175781 15.105469 C 15.207031 15.210938 15.191406 15.328125 15.132812 15.425781 L 14.726562 16.117188 L 12.75 15.015625 C 12.617188 14.941406 12.535156 14.800781 12.535156 14.648438 L 12.535156 11.226562 Z M 5.890625 3.273438 L 2.101562 3.273438 L 2.101562 5.714844 L 17.273438 5.714844 L 17.273438 3.273438 L 13.484375 3.273438 L 13.484375 4.082031 C 13.484375 4.316406 13.300781 4.5 13.066406 4.5 L 12.632812 4.5 C 12.398438 4.5 12.214844 4.316406 12.214844 4.082031 L 12.214844 3.273438 L 7.160156 3.273438 L 7.160156 4.082031 C 7.160156 4.316406 6.976562 4.5 6.742188 4.5 L 6.308594 4.5 C 6.074219 4.5 5.890625 4.316406 5.890625 4.082031 Z M 5.890625 3.273438 &quot;/&gt;</span></span><br><span class="line"><span class="addition">+&lt;/g&gt;</span></span><br><span class="line"><span class="addition">+&lt;/svg&gt;</span></span><br><span class="line">(END)</span><br></pre></td></tr></table></figure><h1 id="长毛象主题的修改"><a href="#长毛象主题的修改" class="headerlink" title="长毛象主题的修改"></a>长毛象主题的修改</h1><p>代码因主题而异，由于笔者未介绍过如何安装主题，所以只简略地说一下：<br>首先在测试环境的网页端或已经上线的网页端，按F12查看元素，大概在右下角可以修改样式。调整某些数值，直到错位解决以后，再在样式的.scss文件搜索这个元素的<code>class</code>名称，对其中的数据进行修改。<br>总之，这个过程比魔改计划发文更容易依样画葫芦。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>这个代码并非完成版。仔细看了就会发现，时区仅限东八区。这是因为我还没设计出选择时区的界面，也不知道该如何实现。下次有时间一定补上。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个事情，我查了下我的git提交的日期，已经是半个月前自学的了，肯定不能保证包教包会，但是留了些代码和一些基础知识，可以给未来的我和有同样需求的象友们提供参考。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="长毛象重度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E9%87%8D%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    <category term="长毛象前端开发" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E9%87%8D%E5%BA%A6%E9%AD%94%E6%94%B9/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="长毛象定时发文" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E9%87%8D%E5%BA%A6%E9%AD%94%E6%94%B9/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%AE%9A%E6%97%B6%E5%8F%91%E6%96%87/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="爱🐘TV" scheme="https://blog.dzm.pp.ua/tags/%E7%88%B1%F0%9F%90%98TV/"/>
    
    <category term="超长代码预警" scheme="https://blog.dzm.pp.ua/tags/%E8%B6%85%E9%95%BF%E4%BB%A3%E7%A0%81%E9%A2%84%E8%AD%A6/"/>
    
    <category term="非保姆级教程" scheme="https://blog.dzm.pp.ua/tags/%E9%9D%9E%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B/"/>
    
    <category term="哈基象欠爱了" scheme="https://blog.dzm.pp.ua/tags/%E5%93%88%E5%9F%BA%E8%B1%A1%E6%AC%A0%E7%88%B1%E4%BA%86/"/>
    
    <category term="长毛象前端" scheme="https://blog.dzm.pp.ua/tags/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%89%8D%E7%AB%AF/"/>
    
    <category term="非基础" scheme="https://blog.dzm.pp.ua/tags/%E9%9D%9E%E5%9F%BA%E7%A1%80/"/>
    
    <category term="长毛象计划发嘟" scheme="https://blog.dzm.pp.ua/tags/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%AE%A1%E5%88%92%E5%8F%91%E5%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>长毛象实例迁移</title>
    <link href="https://blog.dzm.pp.ua/2025/04/12/migrating-instance/"/>
    <id>https://blog.dzm.pp.ua/2025/04/12/migrating-instance/</id>
    <published>2025-04-12T14:06:35.000Z</published>
    <updated>2025-04-13T10:10:26.716Z</updated>
    
    <content type="html"><![CDATA[<p>本实例经过2次迁移，第1次迁移时，本博客也不存在，而且我也懒得写技术博客。当时本站只有20G大小，没有任何邮件功能，也没有全文搜索，字数限制和媒体限制也跟官方的一样小，富文本也不需要（不需要引用原文），置顶也没有超过10条。<span id="more"></span><br>本站的根本目的就是保证我不会因为被人恶意封号导致在网络上社会性死亡<del>，就跟吃屎喝尿求生存没什么两样</del>。<br>现在本站有了很多魔改功能（我自己不用也可以分享给象友们用，只要你们把我的代码抄去），配置了邮件功能以后，还邀请了几个象友来注册。所以迁移起来就有点讲究了，步骤也跟<a href="https://docs.joinmastodon.org/">官方文档</a>大相径庭。如果你们要用我的代码从新部署你们自己的实例的话，本文也有很大参考价值。</p><h1 id="面向的读者"><a href="#面向的读者" class="headerlink" title="面向的读者"></a>面向的读者</h1><p>我自己。如果你在Linux系统运维中，遇到难题，通过Google搜索找到这篇进行参考，能给你提供一些帮助，那再好不过了。😚</p><h2 id="需要的基础知识"><a href="#需要的基础知识" class="headerlink" title="需要的基础知识"></a>需要的基础知识</h2><p>掌握越多Linux技巧越好，没有的话真的愿意学习就行。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>提前买好VPS。如果你要全新部署实例，申请域名和托管Cloudflare也建议提早进行，因为中国的域名备案要花8天（我不是中国域名，也没备案）。提早准备VPS和域名的时候，千万不要炫耀，发个推特&#x2F;朋友圈，图里还带IP和域名的，说“看这是我的新网站”。<br><img src="vain.jpg"><br>不然你实例上线那天被人DDOS，就欲哭无泪了。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>由于我的实例没有使用对象存储，全部文件都在本地，而新旧服务器都有400GB的硬盘，非常的划算，所以需要迁移媒体文件，因此服务器的迁移要多花好几个小时。<br>迁移媒体文件之前，首先要进行瘦身，第一步要删除7天以前的外站媒体文件。<br>在进行以下操作前，首先要切换到<code>mastodon</code>用户，进入<code>live</code>文件夹，以下本文不再赘述。操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - mastodon</span><br><span class="line"><span class="built_in">cd</span> live</span><br></pre></td></tr></table></figure><p>删除媒体文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/tootctl media remove</span><br></pre></td></tr></table></figure><p>删除未被引用的媒体文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/tootctl media remove-orphans</span><br></pre></td></tr></table></figure><blockquote><p>💡 <strong>温馨提醒：</strong> 以上操作耗时极长</p></blockquote><p>进行耗时极长的操作，或者需要后台运行的操作，除了<code>no hup</code>以外，还可以使用<code>tmux</code>。</p><h2 id="几个简单的tmux操作"><a href="#几个简单的tmux操作" class="headerlink" title="几个简单的tmux操作"></a>几个简单的tmux操作</h2><h3 id="进入tmux"><a href="#进入tmux" class="headerlink" title="进入tmux"></a>进入tmux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux</span><br></pre></td></tr></table></figure><h3 id="终止tmux会话"><a href="#终止tmux会话" class="headerlink" title="终止tmux会话"></a>终止tmux会话</h3><p>在tmux界面运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="脱离tmux"><a href="#脱离tmux" class="headerlink" title="脱离tmux"></a>脱离tmux</h3><p>在tmux界面下，按下Ctrl+B，再按下D。</p><h3 id="检查tmux有多少会话"><a href="#检查tmux有多少会话" class="headerlink" title="检查tmux有多少会话"></a>检查tmux有多少会话</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h3 id="进入第一个tmux会话"><a href="#进入第一个tmux会话" class="headerlink" title="进入第一个tmux会话"></a>进入第一个tmux会话</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux attach</span><br></pre></td></tr></table></figure><p>tmux操作还有很多，以上这些属于最常用的，够用了，不够用就搜索一下，或者查看阮一峰的教程。我只领你入门，靠这几招平A，助你在这个行业立足😀。</p><blockquote><p>💡说句题外话，systemd也可以用于程序后台运行，但可能有些大材小用了。如果需要断电重启后继续运行，请用它。</p></blockquote><p>此外最好还要发一下公告，让用户做好断开服务的准备。</p><h1 id="准备新服务器"><a href="#准备新服务器" class="headerlink" title="准备新服务器"></a>准备新服务器</h1><p>如果你用的是vultr和digitalocean，我建议你在有时间部署时当天就买，不用提前。虽然安全方面比我这好，但是这种服务器很贵，不划算。如果你（为了节约成本，为了优惠）提前买了服务器，那么你的服务器可能会被黑客不停地扫描（我本来还想出一个brutespray的教程😈，以后有空再说吧，关注<a href="/tags/%E6%8F%90%E7%AF%AE%E6%A1%A5%E7%9A%84%E5%85%A5%E5%9C%BA%E5%88%B8/">提篮桥tag</a>），直到被破解变成肉鸡。不仅是你的损失，你对自己资产和隐私的疏忽和漠视也是对公共安全的一大危害。所以我建议你服务器刚买，但还没来得及改密码的时候先关机，等到需要用了再直接重装系统。</p><h2 id="更改登录方式"><a href="#更改登录方式" class="headerlink" title="更改登录方式"></a>更改登录方式</h2><p>我们最怕的就是我们的ssh被别人登录了。这也是我们接触服务器操作系统的唯一界面。有两种办法在一定程度上避免被别人强行登录：</p><ol><li>禁止密码登录，改用非对称加密或TOTP登录。</li><li>修改ssh端口，不再使用22端口<br>这两种方法最好都用。非对称加密的原理我不再赘述，自己去搜索去学习。别人要想破解RSA2048加密，只有试个至少2^2048遍才能登进去了吧？<br>修改ssh端口其实也没卵用，用<a href="https://fofa.info/">https://fofa.info</a> 一下就能查出来你服务器改了什么端口。用专业工具扫描也可以轻松破解。但这对于专杀菜鸟的黑客还是相当有用的，<strong>你跟他无冤无仇，而且他知道你不是菜鸟，就不攻击你了。</strong></li></ol><h3 id="禁止密码登录"><a href="#禁止密码登录" class="headerlink" title="禁止密码登录"></a>禁止密码登录</h3><p>在重装系统时，你直接选择ssh-key登录。各种工具都有它自己的生成密钥方式，请自己上网搜索。</p><ul><li>其中XShell的密钥生成方式就是单击菜单栏<code>工具</code>，再单击<code>用户密钥管理者</code>。根据向导生成密钥，生成期间多动鼠标，生成以后即可复制公钥。要寻找已生成密钥的公钥，双击打开这个密钥的属性，单击<code>公钥</code>选项卡，复制全部内容给VPS控制台。</li><li>openssh的密钥生成方式直接使用<code>ssh-keygen</code>，直接用文本编辑器打开生成的.pub文件，复制全部内容即可。</li></ul><p>重装后的系统即可使用密钥登录。如果不能重装密钥登录，那还可以在Linux系统内设置。</p><ul><li>打开<code>~/.ssh/authorized_keys</code>，另起一行，直接将你的公钥复制进去即可。多个公钥的话，一行一个公钥就行。<br>设置完公钥后，重新登录服务器，XShell用户请注意界面<br><img src="xshell-login.png"><br>Password一定要变灰，否则黑客还是可以试出你的密码登录进去。如果是其他软件用户，则尝试输入正确密码登录服务器，如果无法使用密码登录，或者正确密码无法登录，则配置正确。</li></ul><p>如果配置不正确，则修改配置。目前Ubuntu 24.04.1 LTS的配置方法如下：</p><ul><li>进入ssh配置目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/ssh</span><br></pre></td></tr></table></figure><ul><li>打开ssh配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim sshd_config</span><br></pre></td></tr></table></figure><ul><li>找到<code>PasswordAuthentication</code>配置，取消注释，后面的值改为<code>no</code>，并保存文件<blockquote><p><strong>注意：</strong> 进行禁用密码操作时，<strong>必须</strong>用密钥登录。否则，虽然可行，但是如果发生意外，则只能进入救援系统或者重装系统！</p></blockquote></li><li>重启ssh服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ssh</span><br></pre></td></tr></table></figure><p>验证是否能用密码，如果还能用密码，则重启<code>sshd.service</code>和<code>ssh.socket</code>服务。这些新旧版本的系统使用方式都各不相同！</p><h3 id="更改端口"><a href="#更改端口" class="headerlink" title="更改端口"></a>更改端口</h3><p>最新版本的 Ubuntu 24.04 LTS现已无法用<code>sshd_config</code>修改ssh端口。正确修改方法如下</p><ul><li>进入systemd目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/systemd/system</span><br></pre></td></tr></table></figure><ul><li><code>ls</code>显示目录内容，找到ssh开头的目录，进入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ssh.service.requires/</span><br></pre></td></tr></table></figure><ul><li>修改<code>ssh.socket</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ssh.socket</span><br></pre></td></tr></table></figure><ul><li>先添加新端口，再删除旧端口。每次更改，都必须运行一次<code>systemctl daemon-reload</code>再重启ssh服务<br>经过验证，旧端口无法使用后即完成。</li></ul><blockquote><p><strong>温馨提示：</strong> 先不要改掉22端口！后面用<code>rsync</code>同步文件时可以少打好几次参数！</p></blockquote><h2 id="系统升级"><a href="#系统升级" class="headerlink" title="系统升级"></a>系统升级</h2><p>系统内的软件有很多安全漏洞，更新到最新版本进行修复。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade -y</span><br></pre></td></tr></table></figure><h2 id="分配虚拟内存"><a href="#分配虚拟内存" class="headerlink" title="分配虚拟内存"></a>分配虚拟内存</h2><p>由于本实例要用ElasticSearch，所以需要分配虚拟内存</p><ul><li>查看交换空间</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon --show</span><br></pre></td></tr></table></figure><p>如果没有虚拟内存，则继续</p><ul><li>分配虚拟内存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fallocate -l 4G /swapfile</span><br></pre></td></tr></table></figure><ul><li>设置文件权限</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /swapfile</span><br></pre></td></tr></table></figure><ul><li>格式化虚拟内存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /swapfile</span><br></pre></td></tr></table></figure><ul><li>挂载虚拟内存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /swapfile</span><br></pre></td></tr></table></figure><ul><li>设置开机挂载虚拟内存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><p>添加一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/swapfile none swap defaults 0 0</span><br></pre></td></tr></table></figure><h2 id="安装fail2ban"><a href="#安装fail2ban" class="headerlink" title="安装fail2ban"></a>安装fail2ban</h2><p>直接参考<a href="https://docs.joinmastodon.org/admin/prerequisites/#install-fail2ban-so-it-blocks-repeated-login-attempts">官方文档</a>进行操作</p><ul><li>直接用包管理器安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install fail2ban</span><br></pre></td></tr></table></figure><ul><li>直接编辑或新建<code>/etc/fail2ban/jail.local</code><br>插入以下内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">destemail = your@email.here</span><br><span class="line">sendername = Fail2Ban</span><br><span class="line"></span><br><span class="line">[sshd]</span><br><span class="line">enabled = true</span><br><span class="line">port = 22</span><br><span class="line">mode = aggressive</span><br></pre></td></tr></table></figure><p>其中<code>port</code>改为你的ssh端口，邮箱改为你平时用的邮箱（如果你不想接收黑客入侵提醒，可不改，毕竟天天开着brutespray这种工具的虫豸实在是太多了🤬）<br>完成后，重启fail2ban进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart fail2ban</span><br></pre></td></tr></table></figure><p>现在，你的fail2ban已经可以阻止密码&#x2F;密钥爆破了。其实禁止密码后，就已经很安全了，但还是建议安装fail2ban。验证方式就是，你挂上你最不常用的梯子出口节点，你先用错误的登录方式登录5遍，第6遍错误尝试时会被拒绝得特别快。再用正确方式登录，发现登录不了了，这就是fail2ban生效了。</p><p>接下来可以配置fail2ban邮件提醒，可以在有人被禁和程序重启时发出邮件进行警告。当然也可以不配置。</p><h3 id="fail2ban配置邮件提醒"><a href="#fail2ban配置邮件提醒" class="headerlink" title="fail2ban配置邮件提醒"></a>fail2ban配置邮件提醒</h3><p>fail2ban默认是不发送邮件的。需要修改<code>/etc/fail2ban/jail.conf</code>内的配置。</p><ul><li>打开该文件，找到<code>action = %(action_)s</code>这一行，把<code>action_</code>改为<code>action_mw</code>。这样在ban可疑IP时会发送邮件了。</li><li>找到<code>mta = sendmail</code>，把值改为<code>mail</code>。这样它会使用<code>mail</code>命令通过系统发送邮件。（这时<code>mail</code>还不能发送邮件，后面讲如何配置，内容较为复杂<del>我没义务包教包会，倒是你有义务交版权费</del>）</li><li>修改<code>destemail</code>为你的常用邮箱（安全起见，也可以发到不常用邮箱，再设置自动转发）。</li><li>修改<code>sender</code>为<code>root@&lt;你的主机名&gt;</code>。<br>这个值，我要解释一下远古时期（上个世纪）邮箱发明时的原理了。最早没有什么网易邮箱、谷歌邮箱、微软邮箱，网络上每台电脑都能当邮箱服务器，既能收又能发，不用配什么POP3和SMTP。邮箱地址@前面的字符是用户名，就是你在这台电脑上的用户名；邮箱地址@后面的是主机名，就是你这台电脑在网络上的名称。你要发邮件给小明，你就直接登录你单位唯一那台电脑，那么发件人就是<code>&lt;你的名字&gt;@&lt;你的电脑名称&gt;</code>。邮件发送时，电脑解析出收件人的主机名，把你的邮件发到小明单位的电脑上，小明一登录就能收到你的邮件。<br>等我讲到配置postfix时会进一步解释。</li></ul><p>修改完后重启fail2ban。</p><h3 id="fail2ban配置重启提醒"><a href="#fail2ban配置重启提醒" class="headerlink" title="fail2ban配置重启提醒"></a>fail2ban配置重启提醒</h3><p>打开<code>/etc/fail2ban/action.d/mail-whois.conf</code>，修改最后一行<code>dest</code>，地址改为你的常用邮箱。<br>改完重启fail2ban生效。</p><h3 id="postfix的安装与配置"><a href="#postfix的安装与配置" class="headerlink" title="postfix的安装与配置"></a>postfix的安装与配置</h3><blockquote><p>这一条应该在前面写，但是考虑到邮件提醒必要性不大，同时还会打断fail2ban的讲解。</p></blockquote><p>在全新的Ubuntu系统中，试图使用<code>mail</code>命令发送邮件，它会提醒你安装<code>mailutils</code>。使用<code>apt install mailutils</code>，它会自动安装<code>postfix</code>。邮件发送似乎只有postfix好用，我在第1次迁移实例时已经踩过这个坑了。</p><ul><li>邮箱服务的选用<br>如果你不怕泄露隐私,可以直接用网易邮箱来给长毛象实例使用。但缺点就是smtp密码有效期只有半年，半年后就得重新设置，否则可能导致错过重要邮件。<br>现在对我来说，最好的邮箱服务就是飞书国际版。注册教程如下所示：<br><a href="https://uuzi.net/lark-international-smtp-email-sending-guide/">https://uuzi.net/lark-international-smtp-email-sending-guide/</a><br>亚马逊、sendgrid什么的都不行。</li></ul><p>安装postfix时，它会要你选择几种模式，你选择带有<code>Satellite</code>的那个选项就行了。安装完成后，需要修改配置文件。进入<code>/etc/postfix</code>目录，首先修改<code>main.cf</code>文件。<br>强烈建议修改前进行备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> main.cf main.cf.bak</span><br></pre></td></tr></table></figure><p>修改内容：</p><ul><li>首先把<code>relayhost</code>改为<code>[smtp.larsuite.com]:465</code>。方括号一律不能少，否则会出问题。</li><li>修改<code>smtp_tls_security_level</code>，如果协议为STARTTLS,则修改为<code>may</code>；协议为TLS则修改为<code>encrypt</code>。</li><li>添加如下内容：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># enable SASL authentication</span><br><span class="line">smtp_sasl_auth_enable = yes</span><br><span class="line"></span><br><span class="line"># disallow methods that allow anonymous authentication.</span><br><span class="line">smtp_sasl_security_options = noanonymous</span><br><span class="line"></span><br><span class="line"># where to find sasl_passwd</span><br><span class="line">smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd</span><br><span class="line"></span><br><span class="line"># where to find generic</span><br><span class="line">smtp_generic_maps = hash:/etc/postfix/generic</span><br><span class="line"></span><br><span class="line"># Enable STARTTLS encryption</span><br><span class="line">smtp_use_tls = yes</span><br><span class="line"></span><br><span class="line"># where to find CA certificates</span><br><span class="line">smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt</span><br><span class="line"></span><br><span class="line"># Enable tls encryption</span><br><span class="line">smtp_tls_wrappermode = yes</span><br></pre></td></tr></table></figure><p>用简单密码来登录smtp邮箱。<br>修改后，执行<code>postfix reload</code>生效。<br>但此时还不能生效，如上所示，还缺<code>generic</code>和<code>sasl_passwd</code>两个文件。其中<code>generic</code>是本机邮箱地址（用户名@主机名）和发件人的对应关系；<code>sasl_passwd</code>是发件人和密码的对应关系。发件人邮箱就是你在smtp服务商（我的是飞书）。</p><ul><li>首先新建<code>generic</code>文件：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim generic</span><br></pre></td></tr></table></figure><ul><li>添加如下内容：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@&lt;我的主机名&gt;   fail2ban@dzm.pp.ua</span><br></pre></td></tr></table></figure><p>其中<code>&lt;我的主机名&gt;</code>和用户名就是命令提示符前的当前路径冒号前面的那段。保存后执行<code>postmap generic</code>，会生成一个<code>generic.db</code>。</p><ul><li>再新建<code>sasl_passwd</code>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim sasl_passwd</span><br></pre></td></tr></table></figure><ul><li>添加如下内容：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[smtp.larksuite.com]:465    fail2ban@dzm.pp.ua:&lt;我的密码&gt;</span><br></pre></td></tr></table></figure><p>显然，是发件人：密码（真正的密码在飞书设置和修改）和服务器的对应关系。保存后还是执行<code>postmap sasl_passwd</code>。</p><ul><li>执行<code>postfix reload</code>，显示<code>postfix/postfix-script: refreshing the Postfix mail system</code>即为设置成功。</li></ul><h4 id="postfix配置的验证"><a href="#postfix配置的验证" class="headerlink" title="postfix配置的验证"></a>postfix配置的验证</h4><p>配置完成后，你可以执行如下命令给自己发邮件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail &lt;你的邮箱&gt;</span><br></pre></td></tr></table></figure><p>输入抄送人、主题后，即可输入正文。正文编辑完毕后，按下Ctrl+D组合键发送。<br>发送时，执行<code>mailq</code>即可查看邮件发送状况。没有错误提示，且几秒后再执行<code>mailq</code>，提示<code>Mail queue is empty</code>,即为发送成功。<br>再执行<code>mail</code>，如果显示没有邮件，则邮件已离开发件服务器。<br>失效模式：</p><ul><li><code>mailq</code>有报错：本机配置问题，本机网络问题，密码问题，账号问题等</li><li><code>mail</code>收到退信：违反smtp提供商的发信政策，提供商服务到期，提供商的服务未续费，接收方退信等</li><li>都没报错：邮件被接收方拦截，请查看垃圾邮件，或者更换收件邮箱进行测试</li></ul><h3 id="验证fail2ban"><a href="#验证fail2ban" class="headerlink" title="验证fail2ban"></a>验证fail2ban</h3><p>挂梯子不常用节点，用错误方式登录5次，或重启fail2ban。有问题则排查postfix故障。</p><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><p>此配置因VPS而异。好的提供商，自带防火墙面板。可以把ufw关掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure><p>再在面板设置防火墙策略。<br>防火墙对于长毛象实例是很必要的，因为它可能会暴露3000端口、4000端口，甚至让黑客尽情地注入。还有数据库、ES搜索、redis等长毛象依赖服务都可能暴露端口。配好防火墙，才能让长毛象实例的进程间通信只在本机内访问。</p><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>安装nginx是我验证防火墙和CDN的重要方式。我直接先安装nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nginx</span><br></pre></td></tr></table></figure><p>安装完成后，它就会即刻启动。我直接打开防火墙端口，在浏览器访问我VPS的IP地址（所以网站上线前必须保持低调）。如果显示“Welcome to nginx！”，则说明nginx安装成功，且防火墙开放。如果无法显示，排除了nginx的问题以后，多找找防火墙的问题。默认的Linux防火墙和面板防火墙，都是随VPS不同，因人而异的。</p><h3 id="配置仅允许cloudflare"><a href="#配置仅允许cloudflare" class="headerlink" title="配置仅允许cloudflare"></a>配置仅允许cloudflare</h3><p>nginx测试通畅后，由于我没面板，所以只能配置ufw。配置时还是要注意不能搞得无法登录了。</p><ul><li>开启ufw</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><ul><li>允许ssh</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 22/tcp</span><br></pre></td></tr></table></figure><ul><li>允许80</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 80/tcp</span><br></pre></td></tr></table></figure><p>这样就能用浏览器访问VPS的IP地址了</p><ul><li>在cloudflare解析并代理VPS的地址。<br>由于是迁移，我解析测试用的子域名到我的VPS。用<a href="https://whatsmydns.net/">https://whatsmydns.net</a> 检查是否开启代理，再用浏览器访问我的域名。<br>如果是新部署的实例，你可以直接解析你的实例域名到VPS。<br>这时应该都能显示“Welcome to nginx”。如果不行，就在cloudflare设置规则，该域名的SSL加密设置为“灵活”。<br>关闭80端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw delete allow 80/tcp</span><br></pre></td></tr></table></figure><p>此时无法访问VPS的网页。<br>将3个脚本上传到服务器，并赋予执行权限。<br>add.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/scripts/ufw</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ipv4 <span class="keyword">in</span> `curl -sL https://www.cloudflare.com/ips-v4/ | <span class="built_in">tee</span> ips-v4`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sudo</span> ufw allow from <span class="variable">$ipv4</span> to any port 80 proto tcp</span><br><span class="line">    <span class="built_in">sudo</span> ufw allow from <span class="variable">$ipv4</span> to any port 443 proto tcp</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ipv6 <span class="keyword">in</span> `curl -sL https://www.cloudflare.com/ips-v6/ | <span class="built_in">tee</span> ips-v6`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sudo</span> ufw allow from <span class="variable">$ipv6</span> to any port 80 proto tcp</span><br><span class="line">    <span class="built_in">sudo</span> ufw allow from <span class="variable">$ipv6</span> to any port 443 proto tcp</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上脚本会将所有cloudflare的IP地址加入ufw白名单中。<br>remove.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/scripts/ufw</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ipv4 <span class="keyword">in</span> `<span class="built_in">cat</span> ips-v4`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sudo</span> ufw delete allow from <span class="variable">$ipv4</span> to any port 80 proto tcp</span><br><span class="line">    <span class="built_in">sudo</span> ufw delete allow from <span class="variable">$ipv4</span> to any port 443 proto tcp</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ipv6 <span class="keyword">in</span> `<span class="built_in">cat</span> ips-v6`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sudo</span> ufw delete allow from <span class="variable">$ipv6</span> to any port 80 proto tcp</span><br><span class="line">    <span class="built_in">sudo</span> ufw delete allow from <span class="variable">$ipv6</span> to any port 443 proto tcp</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f ips-v4 ips-v6</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上脚本会删除<code>add.sh</code>添加的一切IP。<br>update.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/scripts/ufw</span><br><span class="line"></span><br><span class="line">curl -sL https://www.cloudflare.com/ips-v4/ -o ips-v4.new</span><br><span class="line">curl -sL https://www.cloudflare.com/ips-v6/ -o ips-v6.new</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! cmp -s ips-v4 ips-v4.new || ! cmp -s ips-v6 ips-v6.new || [ ! -f ips-v4 ] || [ ! -f ips-v6 ]; <span class="keyword">then</span></span><br><span class="line">    bash remove.sh</span><br><span class="line">    bash add.sh</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f ips-v4.new ips-v6.new</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上脚本会自动更新<code>add.sh</code>添加的IP。</p><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./add.sh</span><br></pre></td></tr></table></figure><p>就会发现IP地址已无法访问网页，但是域名可以访问网页。</p><h1 id="部署长毛象实例"><a href="#部署长毛象实例" class="headerlink" title="部署长毛象实例"></a>部署长毛象实例</h1><p>刚才已完成网络安全的配置，黑客很难对本站的IP地址和端口进行扫描了。接下来就可以正式开始迁移了。此时旧服务器仍然无需停机。</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>以下是从官网安装时，传输和防中间人攻击用的软件，用如下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y curl wget gnupg apt-transport-https lsb-release ca-certificates</span><br></pre></td></tr></table></figure><p>然后依照官方文档安装长毛象的依赖环境，没有如下软件，长毛象将无法运行</p><h2 id="添加Node-js软件源"><a href="#添加Node-js软件源" class="headerlink" title="添加Node.js软件源"></a>添加Node.js软件源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main&quot;</span> | <span class="built_in">tee</span> /etc/apt/sources.list.d/nodesource.list</span><br></pre></td></tr></table></figure><h2 id="添加PostgreSQL软件源"><a href="#添加PostgreSQL软件源" class="headerlink" title="添加PostgreSQL软件源"></a>添加PostgreSQL软件源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O /usr/share/keyrings/postgresql.asc https://www.postgresql.org/media/keys/ACCC4CF8.asc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/usr/share/keyrings/postgresql.asc] http://apt.postgresql.org/pub/repos/apt <span class="subst">$(lsb_release -cs)</span>-pgdg main&quot;</span> &gt; /etc/apt/sources.list.d/postgresql.list</span><br></pre></td></tr></table></figure><h2 id="安装全部依赖"><a href="#安装全部依赖" class="headerlink" title="安装全部依赖"></a>安装全部依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install -y \</span><br><span class="line">  imagemagick ffmpeg libvips-tools libpq-dev libxml2-dev libxslt1-dev file git-core \</span><br><span class="line">  g++ libprotobuf-dev protobuf-compiler pkg-config gcc autoconf \</span><br><span class="line">  bison build-essential libssl-dev libyaml-dev libreadline6-dev \</span><br><span class="line">  zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev \</span><br><span class="line">  nginx nodejs redis-server redis-tools postgresql postgresql-contrib \</span><br><span class="line">  certbot python3-certbot-nginx libidn11-dev libicu-dev libjemalloc-dev</span><br></pre></td></tr></table></figure><p>开启corepack</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">corepack <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><h1 id="创建mastodon用户"><a href="#创建mastodon用户" class="headerlink" title="创建mastodon用户"></a>创建mastodon用户</h1><p>长毛象实例必须在自己的用户下运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser --disabled-password mastodon</span><br></pre></td></tr></table></figure><p>之前的安全设置也是防止有人登录mastodon用户摧毁你的实例。</p><h1 id="配置PostgreSQL数据库"><a href="#配置PostgreSQL数据库" class="headerlink" title="配置PostgreSQL数据库"></a>配置PostgreSQL数据库</h1><h2 id="优化性能"><a href="#优化性能" class="headerlink" title="优化性能"></a>优化性能</h2><p>登录<a href="https://pgtune.leopard.in.ua/#/">PGTune</a>，将你的PostgreSQL版本和VPS配置输入进去，点击<code>Generate</code>，复制出生成的配置信息。再找到文件<code>/etc/postgresql/17/main/postgresql.conf</code>（如果版本不同，则可能路径有变化，但是文件名应该不会变）。建议做好备份<code>cp postgresql.conf postgresql.conf.bak</code>。<br>我建议将文件从VPS下载到本地，用vscode改，用文件内搜索功能找到对应行，解除注释（如果有的话），进行修改。</p><blockquote><p><strong>注意：</strong> 千万不要用<a href="https://pgtune.leopard.in.ua/#/">PGTune</a>生成的配置覆盖整个<code>postgresql.conf</code>！否则postgresql将无法启动！<br>修改后记得重启postgresql</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart postgresql</span><br></pre></td></tr></table></figure><h2 id="创建数据库用户"><a href="#创建数据库用户" class="headerlink" title="创建数据库用户"></a>创建数据库用户</h2><p>不论是新部署实例还是迁移实例，都要创建mastodon用户</p><ul><li>进入数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -u postgres psql</span><br></pre></td></tr></table></figure><ul><li>创建用户</li></ul><figure class="highlight postgresql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> mastodon <span class="keyword">CREATEDB</span>;</span><br><span class="line">\q</span><br></pre></td></tr></table></figure><h1 id="从GitHub安装长毛象实例"><a href="#从GitHub安装长毛象实例" class="headerlink" title="从GitHub安装长毛象实例"></a>从GitHub安装长毛象实例</h1><p>切换到mastodon用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - mastodon</span><br></pre></td></tr></table></figure><p>在mastodon用户的home目录克隆我的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/dongzhimin-xz/mastodon.git live &amp;&amp; <span class="built_in">cd</span> live</span><br></pre></td></tr></table></figure><p>再用<code>git checkout</code>切换到我最新提交的tag上。</p><h2 id="安装Ruby"><a href="#安装Ruby" class="headerlink" title="安装Ruby"></a>安装Ruby</h2><p>就在<code>mastodon</code>用户下执行安装ruby的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rbenv/rbenv.git ~/.rbenv</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;eval &quot;$(rbenv init -)&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">exec</span> bash</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/rbenv/ruby-build.git <span class="string">&quot;<span class="subst">$(rbenv root)</span>&quot;</span>/plugins/ruby-build</span><br></pre></td></tr></table></figure><p>以上命令我建议<strong>逐行</strong>复制执行，避免有漏错<br>最后安装ruby</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RUBY_CONFIGURE_OPTS=--with-jemalloc rbenv install</span><br></pre></td></tr></table></figure><h2 id="安装长毛象依赖的Ruby和Node-js组件"><a href="#安装长毛象依赖的Ruby和Node-js组件" class="headerlink" title="安装长毛象依赖的Ruby和Node.js组件"></a>安装长毛象依赖的Ruby和Node.js组件</h2><p>逐行执行如下命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bundle config deployment <span class="string">&#x27;true&#x27;</span></span><br><span class="line">bundle config without <span class="string">&#x27;development test&#x27;</span></span><br><span class="line">bundle install -j$(getconf _NPROCESSORS_ONLN)</span><br><span class="line">yarn install</span><br></pre></td></tr></table></figure><h1 id="开始迁移实例"><a href="#开始迁移实例" class="headerlink" title="开始迁移实例"></a>开始迁移实例</h1><p><del>完成以上步骤后，根据官方文档，直接运行<code>RAILS_ENV=production bin/rails mastodon:setup</code>就能部署新实例了，但我今天是要迁移</del><br>现在起，就开始迁移数据。旧实例仍然无需停机，因为我有50GB的媒体文件需要迁移。</p><h2 id="迁移前的准备"><a href="#迁移前的准备" class="headerlink" title="迁移前的准备"></a>迁移前的准备</h2><p>迁移最常用的软件就是rsync，它可以让你在你的公网服务器间快速地传输文件。也可以保证本地文件备份同步，当然本文只用来在网络上传输文件。<br>rsync使用ssh协议进行文件传输，所以前面我建议先不要改掉ssh端口号22。所以可以通过密钥来登录。</p><ol><li>首先切换到<code>mastodon</code>用户</li><li>在旧服务器上使用<code>ssh-keygen</code>生成密钥</li><li>将旧服务器生成的<code>.pub</code>密钥下载下来</li><li>登录到新服务器，将前面下载的公钥复制到<code>/home/mastodon/.ssh/authorized_keys</code>新加的最后一行<br>如果没有该文件，就把<code>.pub</code>结尾的文件直接上传到它的目录下，并用<code>chown</code>把文件所有人更改为<code>mastodon</code>用户。<br><code>root</code>用户也一样。在root用户下生成密钥，密钥位置在<code>/root/.ssh</code>目录下。<br>这样，旧服务器就可以用ssh登录新服务器了（迁移完成后，记得把刚才在<code>authorized_keys</code>下添加的删除，这样就能直接取消旧机器登录新机器的权限）</li></ol><h2 id="迁移媒体文件"><a href="#迁移媒体文件" class="headerlink" title="迁移媒体文件"></a>迁移媒体文件</h2><p>登录旧机器，进入<code>tmux</code>界面。<code>tmux</code>的好处在于你在此界面中即使意外断线了，你刚才在界面中运行的程序仍然不会中止，而普通的ssh会话，里面的程序会随着会话中断而中断。</p><blockquote><p>你在正式迁移前可以再次用<code>bin/tootctl media remove</code>等命令清理一下文件进行瘦身，但从时间成本上考虑，必要性不大。迁移开始后就不要再清理文件了，以免新旧机器文件不同步。</p></blockquote><p>在<code>tmux</code>界面中，执行如下命令开始迁移</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz --progress ~/live/public/system/ mastodon@&lt;你的新IP&gt;:~/live/public/system/</span><br></pre></td></tr></table></figure><p>&lt;你的新IP&gt;直接换成你的IP地址，当然也不要加尖括号。<br>这样它就正式开始迁移了。在此期间，你可以关掉会话去做别的事情，大约会花4小时。<br>一般来说，我还是建议使用对象存储，备份、恢复和迁移更加灵活省事。对于大实例来说，成本也更加划算。如果实例发生意外，这么大个文件夹都由第三方保管，也确实令人放心。</p><p>迁移完成后，旧实例该停机了。</p><h2 id="旧实例停机"><a href="#旧实例停机" class="headerlink" title="旧实例停机"></a>旧实例停机</h2><blockquote><p>在此之前，我建议先存个快照</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mastodon-*</span><br></pre></td></tr></table></figure><p>完事以后，看看<code>systemctl status</code>，确认一些长毛象进程是否中止，不要让它再改动数据了。<br>也可以再用<code>rsync -avz --progress ~/live/public/system/ mastodon@&lt;你的新IP&gt;:~/live/public/system/</code>同步一下，但是还会再花掉2小时进行同步。</p><p>新实例运行后，旧实例的所有<code>mastodon-sidekiq</code>都应该终止并禁止开机启动，否则会导致你实例在联邦中重复访问联合。</p><h2 id="迁移数据库"><a href="#迁移数据库" class="headerlink" title="迁移数据库"></a>迁移数据库</h2><p>数据库是最重要的，先进行同步。</p><ul><li>登录旧机器，进入<code>mastodon</code>用户，直接导出数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - mastodon</span><br><span class="line">pg_dump -Fc mastodon_production -f backup.dump</span><br></pre></td></tr></table></figure><ul><li>用<code>rsync</code>将<code>backup.dump</code>传到新机器的<code>mastodon</code>用户目录下</li><li>登录新机器，切换到<code>mastodon</code>用户，创建长毛象实例的数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - mastodon</span><br><span class="line">createdb -T template0 mastodon_production</span><br></pre></td></tr></table></figure><ul><li>将<code>backup.dump</code>恢复到数据库中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pg_restore -Fc -j4 -U mastodon -n public --no-owner --role=mastodon \</span><br><span class="line">  -d mastodon_production backup.dump</span><br></pre></td></tr></table></figure><p>其中，<code>-j4</code>是因为我VPS为4核。</p><h2 id="迁移其他文件"><a href="#迁移其他文件" class="headerlink" title="迁移其他文件"></a>迁移其他文件</h2><ul><li><code>.env.production</code>也是非常重要的文件，没有它，实例就无法运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - mastodon</span><br><span class="line">rsync -avz --progress ~/live/.env.production mastodon@&lt;你的新IP&gt;:~/live/</span><br></pre></td></tr></table></figure><ul><li>我的<code>mastodon-sidekiq</code>文件经过自定义，所以不能使用全新的，也要进行迁移<br>在root用户下进行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz --progress /etc/systemd/system/mastodon-* root@&lt;你的新IP&gt;:/etc/systemd/system/</span><br></pre></td></tr></table></figure><ul><li>还有GOST文件也要迁移</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz --progress /etc/systemd/system/gost.service root@&lt;你的新IP&gt;:/etc/systemd/system/</span><br></pre></td></tr></table></figure><ul><li>我的nginx文件也经过自定义，里面包括了显示用户IP地址的设置，所以也要迁移（在root用户下进行）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz --progress /etc/nginx/sites-available/ root@&lt;你的新IP&gt;:/etc/nginx/sites-available</span><br></pre></td></tr></table></figure><ul><li>迁移后，别忘了在新服务器上使nginx配置生效</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /etc/nginx/sites-available/mastodon /etc/nginx/sites-enabled/mastodon</span><br></pre></td></tr></table></figure><p>先执行<code>nginx -t</code>如果没有报错，显示一切OK，那么就可以重启nginx服务使配置生效</p><h2 id="迁移Redis文件"><a href="#迁移Redis文件" class="headerlink" title="迁移Redis文件"></a>迁移Redis文件</h2><ul><li>登录新机器，停止redis进程</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop redis-server.service</span><br></pre></td></tr></table></figure><ul><li>登录旧机器，将redis文件传入新机器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli SAVE</span><br><span class="line">systemctl stop redis-server.service</span><br><span class="line">rsync -avz --progress /var/lib/redis/ root@&lt;你的新IP&gt;:/var/lib/redis</span><br></pre></td></tr></table></figure><p>完事就可以启动新机器的redis了</p><p>至此，实例已迁移完毕，可以删除旧机器的公钥了。记得<code>/root/.ssh</code>和<code>/home/mastodon/.ssh</code>两个文件夹下都有。</p><h2 id="编译新实例"><a href="#编译新实例" class="headerlink" title="编译新实例"></a>编译新实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production bundle <span class="built_in">exec</span> rails assets:precompile</span><br></pre></td></tr></table></figure><p>等待至少30分钟，没有报错则可继续。</p><p>为了以后在维护新实例时，不用再输入<code>RAILS_ENV=production</code>，可在<code>/home/mastodon/.bashrc</code>结尾加上一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RAILS_ENV=production</span><br></pre></td></tr></table></figure><h2 id="启动新实例"><a href="#启动新实例" class="headerlink" title="启动新实例"></a>启动新实例</h2><p>重新加载<code>systemd</code>，启动redis和所有长毛象进程（并设置开机自启）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start redis-server  </span><br><span class="line">systemctl <span class="built_in">enable</span> --now mastodon-web mastodon-sidekiq mastodon-sidekiq2 mastodon-streaming  </span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>此时，长毛象进程开始启动。在启动时，不宜允许用户进行频繁登录，所以在重新解析地址之前进行。<br>在启动nginx或验证nginx配置时，可能会提示缺少证书。完成以下步骤以后解决</p><h2 id="重新解析域名"><a href="#重新解析域名" class="headerlink" title="重新解析域名"></a>重新解析域名</h2><ol><li>进入Cloudflare，修改DNS记录，修改cmx的A和AAAA记录。</li><li>左侧选择<code>SSL/TLS</code>&gt;<code>概述</code>，在此界面，先把<code>SSL/TLS加密</code>改为<code>完全</code>。在这种模式下，服务器没有证书也可以访问，以便用certbot申请证书。</li></ol><h2 id="Certbot申请证书"><a href="#Certbot申请证书" class="headerlink" title="Certbot申请证书"></a>Certbot申请证书</h2><p>在你的新实例服务器执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly --nginx -d cmx.dzm.pp.ua</span><br></pre></td></tr></table></figure><blockquote><p>注意把域名替代成你自己的</p></blockquote><p>这样即可申请全新证书，有效期90天。原理就是certbot在你机器上生成了一些信息，letsencrypt通过DNS解析到了CDN，CDN访问了你机器上生成的信息，传给了letsencrypt。letsencrypt依据这个认定此域名归你所有，给你颁发SSL证书。<br>然后登录你的网页端，能显示首页即为成功。<br>如果有问题，再重启一下nginx解决上述缺少证书的问题。<br>成功后，别忘记把Cloudflare设置改回去。</p><h3 id="新实例网页无法正常显示"><a href="#新实例网页无法正常显示" class="headerlink" title="新实例网页无法正常显示"></a>新实例网页无法正常显示</h3><p>我在迁移后遇到了这个问题，曾一度把DNS切回去。解决方式如同<a href="https://docs.joinmastodon.org/admin/install/#setting-up-nginx">官方文档</a>从新安装篇所述</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> o+x /home/mastodon</span><br></pre></td></tr></table></figure><p>赋予<code>mastodon</code>用户文件夹，所有用户执行权限。</p><blockquote><p>我当时也是把所有长毛象组件删了装，装了删，最后才发现是这个原因&#x2F;(ㄒoㄒ)&#x2F;~~</p></blockquote><h3 id="设置证书自动更新"><a href="#设置证书自动更新" class="headerlink" title="设置证书自动更新"></a>设置证书自动更新</h3><p>编辑crontab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>在最后一行添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 14 1 */2 * certbot renew --force-renewal</span><br></pre></td></tr></table></figure><p>意思是每2个月的1日服务器当地时间14:00更新证书。<br>避免90天后实例无法访问，需要手动登录cloudflare更改配置。</p><h1 id="重建时间线"><a href="#重建时间线" class="headerlink" title="重建时间线"></a>重建时间线</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production ./bin/tootctl feeds build</span><br></pre></td></tr></table></figure><h1 id="隐藏IP地址"><a href="#隐藏IP地址" class="headerlink" title="隐藏IP地址"></a>隐藏IP地址</h1><p><a href="/2025/04/12/Warp%E4%BB%A3%E7%90%86%EF%BC%88%E9%9D%9EDocker%E7%89%88%EF%BC%89/">前面的文章</a>我就说过为什么要迁移了。现在直接上步骤<br>其中改配置文件和编辑systemd文件都可以省掉，因为这些文件都是从旧服务器迁移来的。</p><ul><li>安装Cloudflare WARP</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | <span class="built_in">sudo</span> gpg --<span class="built_in">yes</span> --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class="subst">$(lsb_release -cs)</span> main&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/cloudflare-client.list</span><br><span class="line"><span class="built_in">sudo</span> apt-get update &amp;&amp; <span class="built_in">sudo</span> apt-get install cloudflare-warp</span><br><span class="line">warp-cli registration new</span><br><span class="line">warp-cli mode proxy</span><br><span class="line">warp-cli connect</span><br></pre></td></tr></table></figure><ul><li>安装GOST</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -fsSL https://github.com/go-gost/gost/raw/master/install.sh) --install</span><br></pre></td></tr></table></figure><ul><li>迁移GOST文件以后，转发端口到Cloudflare WARP</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now gost.service</span><br></pre></td></tr></table></figure><p>最后验证结果：开一个VPS，安装nginx，在新实例搜索框输入http:&#x2F;&#x2F;&lt;你的VPS IP地址&gt;。查阅VPS的nginx日志<code>/var/log/nginx/access.log</code>，是否是cloudflare的IP。如果是即成功。</p><h1 id="部署全文搜索"><a href="#部署全文搜索" class="headerlink" title="部署全文搜索"></a>部署全文搜索</h1><p>新服务器，代码魔改部分省略，因为都是从我GitHub仓库下载的代码。</p><h2 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install openjdk-17-jre-headless</span><br></pre></td></tr></table></figure><h2 id="添加软件源"><a href="#添加软件源" class="headerlink" title="添加软件源"></a>添加软件源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O /usr/share/keyrings/elasticsearch.asc https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/usr/share/keyrings/elasticsearch.asc] https://artifacts.elastic.co/packages/8.x/apt stable main&quot;</span> &gt; /etc/apt/sources.list.d/elastic-8.x.list</span><br></pre></td></tr></table></figure><h2 id="安装ES"><a href="#安装ES" class="headerlink" title="安装ES"></a>安装ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install elasticsearch=8.4.1</span><br></pre></td></tr></table></figure><h2 id="启动ES"><a href="#启动ES" class="headerlink" title="启动ES"></a>启动ES</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now elasticsearch</span><br></pre></td></tr></table></figure><h2 id="分配内存"><a href="#分配内存" class="headerlink" title="分配内存"></a>分配内存</h2><p>添加配置文件<code>/etc/elasticsearch/jvm.options.d/ram.options</code><br>内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Xms represents the initial size of total heap space</span></span><br><span class="line"><span class="comment"># Xmx represents the maximum size of total heap space</span></span><br><span class="line"><span class="comment"># Both values should be the same</span></span><br><span class="line">-Xms2048m</span><br><span class="line">-Xmx2048m</span><br></pre></td></tr></table></figure><p>重启elasticsearch</p><h2 id="添加mastodon专用账号"><a href="#添加mastodon专用账号" class="headerlink" title="添加mastodon专用账号"></a>添加mastodon专用账号</h2><p>迁移前我一直使用<code>elastic</code>管理员账号来使用搜索功能，其实这是不安全的。首先要修改配置文件<code>/etc/elasticsearch/elasticsearch.yml</code>。<br>文件中，<code>xpack.security.enabled</code>值必须保持为<code>true</code>，否则无法使用密码。<code>xpack.security.http.ssl</code>的<code>enabled</code>改为<code>false</code>，否则无法用curl访问，长毛象可能也无法访问ES。</p><ul><li>首先重置elastic密码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic -i</span><br></pre></td></tr></table></figure><p>这条命令可以让你手动输入密码。<br>重置密码后，可以用如下命令验证密码是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u elastic 127.0.0.1:9200</span><br></pre></td></tr></table></figure><p>输入密码，如果返回如下结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;vmi2519229&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;iVja5rGkS-KYku7YBsqnlg&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;8.4.1&quot;,</span><br><span class="line">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class="line">    &quot;build_type&quot; : &quot;deb&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;2bd229c8e56650b42e40992322a76e7914258f0c&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2022-08-26T12:11:43.232597118Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;9.3.0&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;7.17.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;7.0.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>则密码正确<br>若密码错误，则会显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;error&quot;:&#123;&quot;root_cause&quot;:[&#123;&quot;type&quot;:&quot;security_exception&quot;,&quot;reason&quot;:&quot;unable to authenticate user [elastic] for REST request [/]&quot;,&quot;header&quot;:&#123;&quot;WWW-Authenticate&quot;:[&quot;Basic realm=\&quot;security\&quot; charset=\&quot;UTF-8\&quot;&quot;,&quot;ApiKey&quot;]&#125;&#125;],&quot;type&quot;:&quot;security_exception&quot;,&quot;reason&quot;:&quot;unable to authenticate user [elastic] for REST request [/]&quot;,&quot;header&quot;:&#123;&quot;WWW-Authenticate&quot;:[&quot;Basic realm=\&quot;security\&quot; charset=\&quot;UTF-8\&quot;&quot;,&quot;ApiKey&quot;]&#125;&#125;,&quot;status&quot;:401&#125;</span><br></pre></td></tr></table></figure><ul><li>创建角色<code>mastodon_full_access</code><br>执行如下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -u elastic <span class="string">&quot;localhost:9200/_security/role/mastodon_full_access?pretty&quot;</span> -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -d<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;cluster&quot;: [&quot;monitor&quot;],</span></span><br><span class="line"><span class="string">  &quot;indices&quot;: [&#123;</span></span><br><span class="line"><span class="string">    &quot;names&quot;: [&quot;*&quot;],</span></span><br><span class="line"><span class="string">    &quot;privileges&quot;: [&quot;read&quot;, &quot;monitor&quot;, &quot;write&quot;, &quot;manage&quot;]</span></span><br><span class="line"><span class="string">  &#125;]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>返回true则成功</p><ul><li>创建用户<code>mastodon</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -u elastic <span class="string">&quot;localhost:9200/_security/user/mastodon?pretty&quot;</span> -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -d<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;password&quot; : &quot;l0ng-r4nd0m-p@ssw0rd&quot;,</span></span><br><span class="line"><span class="string">  &quot;roles&quot; : [&quot;mastodon_full_access&quot;]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>其中<code>l0ng-r4nd0m-p@ssw0rd</code>替换为配置文件内的密码，如果首次创建，则可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/elasticsearch/bin/elasticsearch-reset-password -u mastodon</span><br></pre></td></tr></table></figure><p>生成一个随机密码。<br>配置完成后，重启<code>mastodon-sidekiq</code>和<code>mastodon-web</code>进程。</p><ul><li>登录网页端检查ES状态。</li></ul><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><ul><li>进入elasticsearch目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/elasticsearch</span><br></pre></td></tr></table></figure><ul><li>逐行运行如下命令，安装插件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-plugin install https://get.infini.cloud/elasticsearch/analysis-stconvert/8.4.1</span><br><span class="line">bin/elasticsearch-plugin install https://get.infini.cloud/elasticsearch/analysis-ik/8.4.1</span><br></pre></td></tr></table></figure><h2 id="禁止ES自动更新"><a href="#禁止ES自动更新" class="headerlink" title="禁止ES自动更新"></a>禁止ES自动更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-mark hold elasticsearch</span><br></pre></td></tr></table></figure><h2 id="部署索引"><a href="#部署索引" class="headerlink" title="部署索引"></a>部署索引</h2><p>安装完成后，就应该部署索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - mastodon</span><br><span class="line"><span class="built_in">cd</span> live</span><br><span class="line">RAILS_ENV=production bin/tootctl search deploy</span><br></pre></td></tr></table></figure><h1 id="迁移以后的工作"><a href="#迁移以后的工作" class="headerlink" title="迁移以后的工作"></a>迁移以后的工作</h1><p>DNS解析到新服务器以后，新址就已经算是正式开始工作了。旧服务器在剩下的时日，可以作为备份。每次迁移，我还要再花一点时间验证新实例是否正常。<br>旧服务器的长毛象sidekiq服务和证书自动更新计划，必须全部关掉，因为这会导致冲突。<br>之后我就把媒体文件和数据库备份给打包备份下来，下载回家（用于应对VPS捐款跑路的情况）。数据无价，且行且珍惜。</p><p>最后，我退订了旧VPS，最多一个月后下线。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本实例经过2次迁移，第1次迁移时，本博客也不存在，而且我也懒得写技术博客。当时本站只有20G大小，没有任何邮件功能，也没有全文搜索，字数限制和媒体限制也跟官方的一样小，富文本也不需要（不需要引用原文），置顶也没有超过10条。</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="运维" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="Postfix配置" scheme="https://blog.dzm.pp.ua/tags/Postfix%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>长毛象实例使用Cloudflare Warp代理（非Docker版）</title>
    <link href="https://blog.dzm.pp.ua/2025/04/12/Warp%E4%BB%A3%E7%90%86%EF%BC%88%E9%9D%9EDocker%E7%89%88%EF%BC%89/"/>
    <id>https://blog.dzm.pp.ua/2025/04/12/Warp%E4%BB%A3%E7%90%86%EF%BC%88%E9%9D%9EDocker%E7%89%88%EF%BC%89/</id>
    <published>2025-04-12T09:09:42.000Z</published>
    <updated>2025-04-12T14:02:30.678Z</updated>
    
    <content type="html"><![CDATA[<p>此类型的文章我不是第一个发的，之前已经有象友发了一篇<a href="https://blog.byteloid.one/2025/02/11/using-warp-to-protect-mastodon-origin-server/">使用 Cloudflare WARP 保护 Mastodon 源站</a>。但是为了方便我下次使用这项技术，而且我的方法又跟他不一样，所以我又写了一篇这个博客。</p><span id="more"></span><p><del>绝对不是为了凑文章数量申请开往啊🥺</del>这篇文章已经拖了2个月了才发。<del>主要原因还是沉迷游戏。</del><br>通过查询nginx日志来找源站真实IP，是我找<a href="https://baka.ink/@bingxin">笨蛋冰</a>告诉他的。fofa找不到他的源站，但是跟他实例有联合的站长都可以找到。<br>我并不急于去修复这个问题，也认为各位读者没有必要担心，因为仅仅暴露源站IP导致的风险，只有用ping的DDOS。绕过CloudFlare对我进行CC攻击是不可能的，因为我设置了<code>ufw</code>，拒绝一切非CloudFlare的IP访问。防注入防渗透也不该用这个手段来获取虚假的安全感。如果发生了DDOS攻击，那么我只要迁移实例或更换IP就行了，而攻击者则要花钱租用VPS或者肉鸡来进行攻击，很显然是不划算的。<br>我用这项技术，是因为VPS打折了，打折后的VPS按年付费，这样我好每月省1美元😀。如果我这一年的IP被盯上了，那么换IP就有点不太划算了。所以给它套个Warp，以后发生什么万一，好省一点。<br>如果是规模较大的实例，可能会导致实例的出口流量阻塞，影响对外联合、邮件收发，造成我无法预料的问题。</p><h1 id="面向的读者"><a href="#面向的读者" class="headerlink" title="面向的读者"></a>面向的读者</h1><p>写这文章主要是给自己看的，今后如果需要迁移实例，或是有什么触类旁通的操作，以供参考。对新手友好的文章，以后我会写一些<strong>保姆级教程</strong>。</p><h2 id="需要的基础知识"><a href="#需要的基础知识" class="headerlink" title="需要的基础知识"></a>需要的基础知识</h2><p>会使用<code>systemctl</code>，会修改<code>systemd</code>目录下的文件。使程序在Linux系统下后台运行、开机启动。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><h3 id="最低配置"><a href="#最低配置" class="headerlink" title="最低配置"></a>最低配置</h3><p>需拥有长毛象实例，作为管理员，至少要有服务器root权限。</p><h3 id="推荐配置"><a href="#推荐配置" class="headerlink" title="推荐配置"></a>推荐配置</h3><p>你有root权限也最好不要乱改朋友的实例。最好是实例网站创始人。</p><h1 id="原理简述"><a href="#原理简述" class="headerlink" title="原理简述"></a>原理简述</h1><p>隐藏长毛象实例的IP，首先要了解它的原理。根据<a href="https://docs.joinmastodon.org/">官方文档</a>，长毛象有2个进程负责对外通信，一个是mastodon-web，另一个是mastodon-sidekiq。<br>用户（你和你的实例用户）通过客户端和网页端访问你的实例，是通过443端口访问了服务器的nginx，从而访问了mastodon-web进程。这个进程的IP保护，可以通过配置CDN来实现。CloudFlare的教程请另行搜索，或者等我以后出个保姆级教程。简单来说，就是把你的域名托管到CloudFlare，再解析到你的IP地址，并且设置为“已代理”。这样每次客人通过域名访问你站，都会解析到CloudFlare的服务器，Cloudflare再通过IP和主机名访问你站的443端口。<br>其他实例和中继站对你进行访问，拉取你站嘟文，推送嘟文到你站，也是通过你的mastodon-web进程。还是走你的CDN来访问。<br>当你站访问其他实例和中继站时，通过mastodon-sidekiq进程。CDN保护你站的唯一盲点就是，你站访问其他实例和中继，主动推送和拉取内容时，报文的源IP就是你的真实IP。一般不是站长（且不是拥有root权限的实例管理员）的黑客，而且没在你站注册账号的前提下，无法被你站通过mastodon-sidekiq访问。<br>所以不用怀疑别人是通过这个方式黑你实例，即使是，他也跑不掉。😎</p><h1 id="验证方式（渗透测试）"><a href="#验证方式（渗透测试）" class="headerlink" title="验证方式（渗透测试）"></a>验证方式（渗透测试）</h1><p>前面介绍了原理，那么，你验证一个实例是否成功开启了正向代理，或者欲取得源站IP，是不是要自己另外开一个皮包实例（中继站）呢？<br>非也，非也。新建实例需要解析一个新的域名，整台服务器都要装一个新的。还要特地去开一个对象存储的桶，甚至还要申请一个邮箱的smtp接口，这么一套下来，至少就要好几天。其实最简单的办法就是开一个VPS，只要公网IP，不需要域名。在家的电脑不可以，靠端口转发的话，是很难获取源IP的。<br>找一个使用Cloudflare的实例，以wxw.moe实例为例进行演示：<br>已知，该实例使用了CloudFlare<br><img src="whats-my-dns.png"><br><img src="ip138.png"></p><ul><li><p>开一个最便宜的低配VPS<br><img src="digital-ocean.png"></p></li><li><p>登录VPS</p></li><li><p>安装nginx</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt install nginx</span><br></pre></td></tr></table></figure><p>安装成功后如图所示<br><img src="nginx.png"></p><ul><li><p>登录wxw.moe，搜索栏键入我的IP地址<br><img src="wxw.moe.png"></p></li><li><p>查看nginx日志</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/log/nginx</span><br><span class="line"><span class="built_in">cat</span> access.log</span><br></pre></td></tr></table></figure><p>发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">103.172.41.35 - - [12/Apr/2025:10:34:16 +0000] &quot;GET / HTTP/1.1&quot; 200 409 &quot;-&quot; &quot;Mastodon/4.3.6~wxw (http.rb/5.2.0; +https://wxw.moe/)&quot;</span><br></pre></td></tr></table></figure><p>就找到了网站的位置<br><img src="wxw-ip.png"><br>修改<code>hosts</code>后还发现该站真实网址确实如此，可以CC</p><h1 id="代理配置方法"><a href="#代理配置方法" class="headerlink" title="代理配置方法"></a>代理配置方法</h1><p>方案原理如同<a href="https://github.com/tunmax/canal">Canal项目</a><br>首先安装Cloudflare WARP，安装完成后可以通过http代理本机TCP 40000端口使用Cloudflare WARP</p><h2 id="安装Cloudflare-WARP"><a href="#安装Cloudflare-WARP" class="headerlink" title="安装Cloudflare WARP"></a>安装Cloudflare WARP</h2><p>参考文献<br><a href="https://developers.cloudflare.com/warp-client/get-started/linux/">https://developers.cloudflare.com/warp-client/get-started/linux/</a><br><a href="https://pkg.cloudflareclient.com/">https://pkg.cloudflareclient.com/</a></p><ul><li>添加密钥</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | <span class="built_in">sudo</span> gpg --<span class="built_in">yes</span> --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg</span><br></pre></td></tr></table></figure><ul><li>添加Cloudflare软件源</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class="subst">$(lsb_release -cs)</span> main&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/cloudflare-client.list</span><br></pre></td></tr></table></figure><ul><li>安装Cloudflare WARP</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update &amp;&amp; <span class="built_in">sudo</span> apt-get install cloudflare-warp</span><br></pre></td></tr></table></figure><ul><li>注册客户端</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli registration new</span><br></pre></td></tr></table></figure><ul><li>设置模式<br>这一操作<em><strong>非常重要</strong></em>！！！如果直接以<code>warp-cli mode warp</code>模式连接的话，会导致服务器的ssh服务掉线！<br>建议安装之前先进行服务器快照，如果没进行快照，<em><strong>请务必确认VNC或救援模式是否可用！</strong></em></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli mode proxy</span><br></pre></td></tr></table></figure><ul><li>进行连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warp-cli connect</span><br></pre></td></tr></table></figure><p>接下来用<code>netstat</code>等命令确认40000端口是否监听。该操作有助于后续排错，此处省略。</p><ul><li>验证结果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -x http://127.0.0.1:40000 https://www.cloudflare.com/cdn-cgi/trace/</span><br></pre></td></tr></table></figure><p>返回诸如此类的结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">fl=94f48</span><br><span class="line">h=www.cloudflare.com</span><br><span class="line">ip=104.28.214.112</span><br><span class="line">ts=1744463889.574</span><br><span class="line">visit_scheme=https</span><br><span class="line">uag=curl/8.5.0</span><br><span class="line">colo=STL</span><br><span class="line">sliver=none</span><br><span class="line">http=http/2</span><br><span class="line">loc=US</span><br><span class="line">tls=TLSv1.3</span><br><span class="line">sni=plaintext</span><br><span class="line">warp=on</span><br><span class="line">gateway=off</span><br><span class="line">rbi=off</span><br><span class="line">kex=X25519</span><br></pre></td></tr></table></figure><p>若其中IP地址为Cloudflare服务器的IP地址，或者<code>warp=on</code>，则warp-cli可视为运行正常<br>如果返回此类结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">fl=658f73</span><br><span class="line">h=www.cloudflare.com</span><br><span class="line">ip=XXX.XXX.XXX.XXX</span><br><span class="line">ts=1744463971.867</span><br><span class="line">visit_scheme=https</span><br><span class="line">uag=curl/8.5.0</span><br><span class="line">colo=ORD</span><br><span class="line">sliver=none</span><br><span class="line">http=http/2</span><br><span class="line">loc=US</span><br><span class="line">tls=TLSv1.3</span><br><span class="line">sni=plaintext</span><br><span class="line">warp=off</span><br><span class="line">gateway=off</span><br><span class="line">rbi=off</span><br><span class="line">kex=X25519</span><br></pre></td></tr></table></figure><p>IP地址为你的VPS地址，或者<code>warp=off</code>，则warp-cli有问题，请勿继续。我建议重新检查安装过程和测试步骤是否正确，或者直接放弃本文操作。</p><h2 id="安装GOST"><a href="#安装GOST" class="headerlink" title="安装GOST"></a>安装GOST</h2><p>GOST的项目地址如下：<br><a href="https://github.com/go-gost/gost">https://github.com/go-gost/gost</a><br>可按照项目文档操作，可参考<a href="https://gost.run/getting-started/configuration-overview/">https://gost.run/getting-started/configuration-overview/</a></p><ul><li>安装GOST</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -fsSL https://github.com/go-gost/gost/raw/master/install.sh) --install</span><br></pre></td></tr></table></figure><ul><li>配置端口转发<br>笔者建议配置开机自启：<br>首先进入<code>systemd</code>目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/systemd/system</span><br></pre></td></tr></table></figure><p>添加启动项（如果已有文件，请检查本服务器以前是否安装过GOST，并另取名称或灵活变通处理（本文阅读需要有Linux基础和灵活的学习能力））</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim gost.service</span><br></pre></td></tr></table></figure><p>添加一下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=GO Simple Tunnel</span><br><span class="line">After=network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/bin/gost -L http://127.0.0.1:1080 -F socks5://127.0.0.1:40000</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>以上端口可随机应变，需要根据实际情况，阅读项目文档，掌握Linux系统和网络的基础知识。<br>systemd文件更新后无法立即生效，首先更新配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>直接配置开机自启并立即执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now gost.service</span><br></pre></td></tr></table></figure><p>自此，1080端口（如无变通）可以进行http代理，使流量通过Cloudflare WARP了<br>执行<code>curl -x cip.cc</code>即可验证，若输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IP: 104.28.214.112</span><br><span class="line">地址: 美国</span><br><span class="line"></span><br><span class="line">数据二: 美国</span><br><span class="line">数据三: 美国</span><br><span class="line"></span><br><span class="line">URL: http://www.cip.cc/104.28.214.112</span><br></pre></td></tr></table></figure><p>其中IP地址为Cloudflare地址，且不为VPS的IP地址，即为成功。</p><h1 id="长毛象的配置"><a href="#长毛象的配置" class="headerlink" title="长毛象的配置"></a>长毛象的配置</h1><p>打开<code>.env.production</code>，添加如下一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http_proxy=http://127.0.0.1:1080</span><br></pre></td></tr></table></figure><p>完后回到root用户重启所有长毛象进程，或者至少重启所有长毛象的sidekiq进程。</p><p>最后，根据上文所述的渗透测试方法来进行验证，或者找个开实例的象友查询日志进行验证。</p><p>我对该配置的失效模式有点不成熟的理解：<br>经过实践发现，如果GOST或WARP出了问题，且长毛象的配置<code>http_proxy</code>没有问题，那么我的实例还是能够获取新的嘟文（甚至一分钟以内的），其他Fedi友也能即时看见我发的嘟文。但是，如果我用搜索栏输入网址，那边的服务器是收不到UA为我实例地址且源IP为Cloudflare的请求的。<br>最坏的情况，就是sidekiq可能绕过了代理，直接访问了其他实例或中继。<br>还有一种乐观一点的可能，就是全部互动都由被动接受推送完成了。</p><p>本文结果的日常运行情况，很难进行验证和监控，还请读者小心使用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;此类型的文章我不是第一个发的，之前已经有象友发了一篇&lt;a href=&quot;https://blog.byteloid.one/2025/02/11/using-warp-to-protect-mastodon-origin-server/&quot;&gt;使用 Cloudflare WARP 保护 Mastodon 源站&lt;/a&gt;。但是为了方便我下次使用这项技术，而且我的方法又跟他不一样，所以我又写了一篇这个博客。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="运维" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="网络安全" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="渗透测试" scheme="https://blog.dzm.pp.ua/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="提篮桥的入场券" scheme="https://blog.dzm.pp.ua/tags/%E6%8F%90%E7%AF%AE%E6%A1%A5%E7%9A%84%E5%85%A5%E5%9C%BA%E5%88%B8/"/>
    
  </entry>
  
  <entry>
    <title>长毛象增加图片数量上限</title>
    <link href="https://blog.dzm.pp.ua/2025/02/04/Mastodon-increase-MEDIA-ATTACHMENTS-LIMIT/"/>
    <id>https://blog.dzm.pp.ua/2025/02/04/Mastodon-increase-MEDIA-ATTACHMENTS-LIMIT/</id>
    <published>2025-02-04T07:01:41.000Z</published>
    <updated>2025-02-04T07:55:16.522Z</updated>
    
    <content type="html"><![CDATA[<p>开门见山地说😎之前我发了大量长毛象魔改的代码，但唯独跳过了增加图片数量。笔者也不想水博客数量，读者应该也认为自己可以触类旁通。但如果试下来，踩的坑也应该和我一样，于是为了能实现glitch的12宫格甚至16宫格，就</p><span id="more"></span><p><img src="do-anything.jpg"><br>不做了，睡大觉，早上起来把It’s MyGO!!!!!和Ave Mujica给补了，然后回来写了这篇博客。<br>接下来直接上代码</p><h1 id="增加图片上限"><a href="#增加图片上限" class="headerlink" title="增加图片上限"></a>增加图片上限</h1><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/models/status.rb b/app/models/status.rb</span></span><br><span class="line"><span class="comment">index e0630733d8..27fa5fe1f7 100644</span></span><br><span class="line"><span class="comment">--- a/app/models/status.rb</span></span><br><span class="line"><span class="comment">+++ b/app/models/status.rb</span></span><br><span class="line"><span class="meta">@@ -39,7 +39,7 @@</span> class Status &lt; ApplicationRecord</span><br><span class="line">   include Status::SnapshotConcern</span><br><span class="line">   include Status::ThreadingConcern</span><br><span class="line"></span><br><span class="line"><span class="deletion">-  MEDIA_ATTACHMENTS_LIMIT = 4</span></span><br><span class="line"><span class="addition">+  MEDIA_ATTACHMENTS_LIMIT = 12</span></span><br><span class="line"></span><br><span class="line">   rate_limit by: :account, family: :statuses</span><br></pre></td></tr></table></figure><blockquote><p>这是增加媒体上限的代码。不建议无限提高或者取消上限，因为这代码也决定了本实例接收其他实例媒体文件的上限。</p></blockquote><p>经过此番修改，你发送的12宫格可以给所有不适用官方mastodon的Fediverse实例所看见，但是却不能被自己和自己实例的用户看见。经过更换主题（换成官方默认的主题），可以看见确实有多图。</p><h1 id="九宫格的实现"><a href="#九宫格的实现" class="headerlink" title="九宫格的实现"></a>九宫格的实现</h1><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/components/media_gallery.jsx b/app/javascript/mastodon/components/media_gallery.jsx</span></span><br><span class="line"><span class="comment">index 59963a0a9f..3dc0fbe42e 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/components/media_gallery.jsx</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/components/media_gallery.jsx</span></span><br><span class="line"><span class="meta">@@ -16,6 +16,14 @@</span> import &#123; formatTime &#125; from &#x27;mastodon/features/video&#x27;;</span><br><span class="line"></span><br><span class="line"> import &#123; autoPlayGif, displayMedia, useBlurhash &#125; from &#x27;../initial_state&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="addition">+const colCount = function(size) &#123;</span></span><br><span class="line"><span class="addition">+  return Math.max(Math.ceil(Math.sqrt(size)), 2);</span></span><br><span class="line"><span class="addition">+&#125;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+const rowCount = function(size) &#123;</span></span><br><span class="line"><span class="addition">+  return Math.ceil(size / colCount(size));</span></span><br><span class="line"><span class="addition">+&#125;;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> class Item extends PureComponent &#123;</span><br><span class="line"></span><br><span class="line">   static propTypes = &#123;</span><br><span class="line"><span class="meta">@@ -87,14 +95,18 @@</span> class Item extends PureComponent &#123;</span><br><span class="line">     let badges = [], thumbnail;</span><br><span class="line"></span><br><span class="line">     let width  = 50;</span><br><span class="line"><span class="deletion">-    let height = 100;</span></span><br><span class="line"><span class="addition">+    let height = 50;</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-    if (size === 1) &#123;</span></span><br><span class="line"><span class="deletion">-      width = 100;</span></span><br><span class="line"><span class="deletion">-    &#125;</span></span><br><span class="line"><span class="addition">+    const cols = colCount(size);</span></span><br><span class="line"><span class="addition">+    const remaining = (-size % cols + cols) % cols;</span></span><br><span class="line"><span class="addition">+    const largeCount = Math.floor(remaining / 3); // width=2, height=2</span></span><br><span class="line"><span class="addition">+    const mediumCount = remaining % 3; // height=2</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-    if (size === 4 || (size === 3 &amp;&amp; index &gt; 0)) &#123;</span></span><br><span class="line"><span class="deletion">-      height = 50;</span></span><br><span class="line"><span class="addition">+    if (size === 1 || index &lt; largeCount) &#123;</span></span><br><span class="line"><span class="addition">+      width = 100;</span></span><br><span class="line"><span class="addition">+      height = 100;</span></span><br><span class="line"><span class="addition">+    &#125; else if (size === 2 || index &lt; largeCount + mediumCount) &#123;</span></span><br><span class="line"><span class="addition">+      height = 100;</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     const description = attachment.getIn([&#x27;translation&#x27;, &#x27;description&#x27;]) || attachment.get(&#x27;description&#x27;);</span><br><span class="line"><span class="meta">@@ -302,7 +314,12 @@</span> class MediaGallery extends PureComponent &#123;</span><br><span class="line">     if (this.isFullSizeEligible()) &#123;</span><br><span class="line">       style.aspectRatio = `$&#123;this.props.media.getIn([0, &#x27;meta&#x27;, &#x27;small&#x27;, &#x27;aspect&#x27;])&#125;`;</span><br><span class="line">     &#125; else &#123;</span><br><span class="line"><span class="deletion">-      style.aspectRatio = &#x27;3 / 2&#x27;;</span></span><br><span class="line"><span class="addition">+      const cols = colCount(media.size);</span></span><br><span class="line"><span class="addition">+      const rows = rowCount(media.size);</span></span><br><span class="line"><span class="addition">+      style.gridTemplateColumns = `repeat($&#123;cols&#125;, 1fr)`;</span></span><br><span class="line"><span class="addition">+      style.gridTemplateRows = `repeat($&#123;rows&#125;, 1fr)`;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      style.aspectRatio = &#x27;1 / 1&#x27;;</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     const size     = media.size;</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/components/upload_form.tsx b/app/javascript/mastodon/features/compose/components/upload_form.tsx</span></span><br><span class="line"><span class="comment">index 1c01c2bd9c..aaff7c13dd 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/features/compose/components/upload_form.tsx</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/components/upload_form.tsx</span></span><br><span class="line"><span class="meta">@@ -33,6 +33,9 @@</span> import &#123; useAppSelector, useAppDispatch &#125; from &#x27;mastodon/store&#x27;;</span><br><span class="line"> import &#123; Upload &#125; from &#x27;./upload&#x27;;</span><br><span class="line"> import &#123; UploadProgress &#125; from &#x27;./upload_progress&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="addition">+const colCount = (size: number) =&gt; Math.max(Math.ceil(Math.sqrt(size)), 2);</span></span><br><span class="line"><span class="addition">+const rowCount = (size: number) =&gt; Math.ceil(size / colCount(size));</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> const messages = defineMessages(&#123;</span><br><span class="line">   screenReaderInstructions: &#123;</span><br><span class="line">     id: &#x27;upload_form.drag_and_drop.instructions&#x27;,</span><br><span class="line"><span class="meta">@@ -140,6 +143,15 @@</span> export const UploadForm: React.FC = () =&gt; &#123;</span><br><span class="line">     [intl],</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line"><span class="addition">+  const style = &#123;</span></span><br><span class="line"><span class="addition">+    gridTemplateColumns: &#x27;1fr&#x27;,</span></span><br><span class="line"><span class="addition">+    gridTemplateRows: &#x27;1fr&#x27;,</span></span><br><span class="line"><span class="addition">+  &#125;;</span></span><br><span class="line"><span class="addition">+  const cols = colCount(mediaIds.size);</span></span><br><span class="line"><span class="addition">+  const rows = rowCount(mediaIds.size);</span></span><br><span class="line"><span class="addition">+  style.gridTemplateColumns = `repeat($&#123;cols&#125;, 1fr)`;</span></span><br><span class="line"><span class="addition">+  style.gridTemplateRows = `repeat($&#123;rows&#125;, 1fr)`;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line">   return (</span><br><span class="line">     &lt;&gt;</span><br><span class="line">       &lt;UploadProgress</span><br><span class="line"><span class="meta">@@ -151,6 +163,7 @@</span> export const UploadForm: React.FC = () =&gt; &#123;</span><br><span class="line">       &#123;mediaIds.size &gt; 0 &amp;&amp; (</span><br><span class="line">         &lt;div</span><br><span class="line">           className=&#123;`compose-form__uploads media-gallery media-gallery--layout-$&#123;mediaIds.size&#125;`&#125;</span><br><span class="line"><span class="addition">+          style=&#123;style&#125;</span></span><br><span class="line">         &gt;</span><br><span class="line">           &lt;DndContext</span><br><span class="line">             sensors=&#123;sensors&#125;</span><br></pre></td></tr></table></figure><p>该布局修改的代码参考了这两个提交。链接我全发在长毛象里了，我刚用<a href="/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E7%9A%84%E9%83%A8%E7%BD%B2/">全文搜索</a>搜出来，在这用一个<a href="https://archive.vn/qquQV">链接</a>概括一下。<br>可以发现，原作者将远程实例的媒体限制与本站的媒体限制分开来，试图实现官方实例的向上兼容，但是直至今日，似乎未被接受。</p><h1 id="一点题外话"><a href="#一点题外话" class="headerlink" title="一点题外话"></a>一点题外话</h1><p>我发现近两年卖沟和母鸡卡的梗图比当年LL大法还火，就去补了番。其实动画的世界观和长毛象的世界观应该是相通的。这世界上有两类人：一个是婴儿潮（Boomer）一代，他们是50后，吃尽了二战结束以后的人口红利（可能中国的经济红利不如国外）；另一群是迷失的一代，苏联解体后的一代，世界观应该跟《新世纪福音战士》（天鹰战士）差不多。机会就这么一点。<br>不管是已经就职的还是正在求职的，我感觉每天这压力跟断刀大赛的决赛差不多，不管你是摆烂交个钢坯给评委，还是努力了，不管刀最终还是崩碎了，还是花里胡哨地一通操作，最后对手更优秀，你这结果还是跟开局摆烂一样。然后有些人还要对你跟他们年轻时比较，说“奋斗才需要多大力气啊”。<br>不管是朋友还是货架上的货物，都不会自己长出来。就说这么多了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;开门见山地说😎之前我发了大量长毛象魔改的代码，但唯独跳过了增加图片数量。笔者也不想水博客数量，读者应该也认为自己可以触类旁通。但如果试下来，踩的坑也应该和我一样，于是为了能实现glitch的12宫格甚至16宫格，就&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="长毛象中度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E4%B8%AD%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    <category term="图片数量增加 网页端图片布局修正" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E4%B8%AD%E5%BA%A6%E9%AD%94%E6%94%B9/%E5%9B%BE%E7%89%87%E6%95%B0%E9%87%8F%E5%A2%9E%E5%8A%A0-%E7%BD%91%E9%A1%B5%E7%AB%AF%E5%9B%BE%E7%89%87%E5%B8%83%E5%B1%80%E4%BF%AE%E6%AD%A3/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="爱🐘TV" scheme="https://blog.dzm.pp.ua/tags/%E7%88%B1%F0%9F%90%98TV/"/>
    
    <category term="九宫格 长毛象" scheme="https://blog.dzm.pp.ua/tags/%E4%B9%9D%E5%AE%AB%E6%A0%BC-%E9%95%BF%E6%AF%9B%E8%B1%A1/"/>
    
    <category term="超长代码预警" scheme="https://blog.dzm.pp.ua/tags/%E8%B6%85%E9%95%BF%E4%BB%A3%E7%A0%81%E9%A2%84%E8%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>长毛象发送markdown嘟文</title>
    <link href="https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%8F%91%E9%80%81markdown%E5%98%9F%E6%96%87/"/>
    <id>https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%8F%91%E9%80%81markdown%E5%98%9F%E6%96%87/</id>
    <published>2025-02-01T15:37:23.000Z</published>
    <updated>2025-02-01T16:09:05.786Z</updated>
    
    <content type="html"><![CDATA[<p>经常玩长毛象的朋友会发现，glitch长毛象、Misskey及其分支，都可以发送富文本。现在我们虽然能看，但却只能发送可怜兮兮的plain text🥺</p><span id="more"></span><p>今天我自豪地宣布，我大致上找到了解决这个问题的答案！那就不提过程了，直接上代码</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/helpers/formatting_helper.rb b/app/helpers/formatting_helper.rb</span></span><br><span class="line"><span class="comment">index 7d1423e52d..a71ff32e1e 100644</span></span><br><span class="line"><span class="comment">--- a/app/helpers/formatting_helper.rb</span></span><br><span class="line"><span class="comment">+++ b/app/helpers/formatting_helper.rb</span></span><br><span class="line"><span class="meta">@@ -19,7 +19,7 @@</span> module FormattingHelper</span><br><span class="line">   module_function :extract_status_plain_text</span><br><span class="line"></span><br><span class="line">   def status_content_format(status)</span><br><span class="line"><span class="deletion">-    html_aware_format(status.text, status.local?, preloaded_accounts: [status.account] + (status.respond_to?(:active_mentions) ? status.active_mentions.map(&amp;:account) : []))</span></span><br><span class="line"><span class="addition">+    html_aware_format(status.text, status.local?, preloaded_accounts: [status.account] + (status.respond_to?(:active_mentions) ? status.active_mentions.map(&amp;:account) : []), content_type: &#x27;text/markdown&#x27;)</span></span><br><span class="line">   end</span><br><span class="line"></span><br><span class="line">   def rss_status_content_format(status)</span><br><span class="line"><span class="comment">diff --git a/app/lib/advanced_text_formatter.rb b/app/lib/advanced_text_formatter.rb</span></span><br><span class="line">new file mode 100644</span><br><span class="line"><span class="comment">index 0000000000..21e81d4d1e</span></span><br><span class="line"><span class="comment">--- /dev/null</span></span><br><span class="line"><span class="comment">+++ b/app/lib/advanced_text_formatter.rb</span></span><br><span class="line"><span class="meta">@@ -0,0 +1,133 @@</span></span><br><span class="line"><span class="addition">+# frozen_string_literal: true</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+class AdvancedTextFormatter &lt; TextFormatter</span></span><br><span class="line"><span class="addition">+  class HTMLRenderer &lt; Redcarpet::Render::HTML</span></span><br><span class="line"><span class="addition">+    def initialize(options, &amp;block)</span></span><br><span class="line"><span class="addition">+      super(options)</span></span><br><span class="line"><span class="addition">+      @format_link = block</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    def block_code(code, _language)</span></span><br><span class="line"><span class="addition">+      &lt;&lt;~HTML</span></span><br><span class="line"><span class="addition">+        &lt;pre&gt;&lt;code&gt;#&#123;ERB::Util.h(code).gsub(&quot;\n&quot;, &#x27;&lt;br/&gt;&#x27;)&#125;&lt;/code&gt;&lt;/pre&gt;</span></span><br><span class="line"><span class="addition">+      HTML</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    def autolink(link, link_type)</span></span><br><span class="line"><span class="addition">+      return link if link_type == :email</span></span><br><span class="line"><span class="addition">+      @format_link.call(link)</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+  end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  attr_reader :content_type</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  # @param [String] text</span></span><br><span class="line"><span class="addition">+  # @param [Hash] options</span></span><br><span class="line"><span class="addition">+  # @option options [Boolean] :multiline</span></span><br><span class="line"><span class="addition">+  # @option options [Boolean] :with_domains</span></span><br><span class="line"><span class="addition">+  # @option options [Boolean] :with_rel_me</span></span><br><span class="line"><span class="addition">+  # @option options [Array&lt;Account&gt;] :preloaded_accounts</span></span><br><span class="line"><span class="addition">+  # @option options [String] :content_type</span></span><br><span class="line"><span class="addition">+  def initialize(text, options = &#123;&#125;)</span></span><br><span class="line"><span class="addition">+    @content_type = options.delete(:content_type)</span></span><br><span class="line"><span class="addition">+    super(text, options)</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    @text = format_markdown(text) if content_type == &#x27;text/markdown&#x27;</span></span><br><span class="line"><span class="addition">+  end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  # Differs from TextFormatter by not messing with newline after parsing</span></span><br><span class="line"><span class="addition">+  def to_s</span></span><br><span class="line"><span class="addition">+    return &#x27;&#x27;.html_safe if text.blank?</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    html = rewrite do |entity|</span></span><br><span class="line"><span class="addition">+      if entity[:url]</span></span><br><span class="line"><span class="addition">+        link_to_url(entity)</span></span><br><span class="line"><span class="addition">+      elsif entity[:hashtag]</span></span><br><span class="line"><span class="addition">+        link_to_hashtag(entity)</span></span><br><span class="line"><span class="addition">+      elsif entity[:screen_name]</span></span><br><span class="line"><span class="addition">+        link_to_mention(entity)</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    html.html_safe # rubocop:disable Rails/OutputSafety</span></span><br><span class="line"><span class="addition">+  end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  # Differs from TextFormatter by operating on the parsed HTML tree</span></span><br><span class="line"><span class="addition">+  def rewrite</span></span><br><span class="line"><span class="addition">+    if @tree.nil?</span></span><br><span class="line"><span class="addition">+      src = text.gsub(Sanitize::REGEX_UNSUITABLE_CHARS, &#x27;&#x27;)</span></span><br><span class="line"><span class="addition">+      @tree = Nokogiri::HTML5.fragment(src)</span></span><br><span class="line"><span class="addition">+      document = @tree.document</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      @tree.xpath(&#x27;.//text()[not(ancestor::a | ancestor::code)]&#x27;).each do |text_node|</span></span><br><span class="line"><span class="addition">+        # Iterate over text elements and build up their replacements.</span></span><br><span class="line"><span class="addition">+        content = text_node.content</span></span><br><span class="line"><span class="addition">+        replacement = Nokogiri::XML::NodeSet.new(document)</span></span><br><span class="line"><span class="addition">+        processed_index = 0</span></span><br><span class="line"><span class="addition">+        Extractor.extract_entities_with_indices(</span></span><br><span class="line"><span class="addition">+          content,</span></span><br><span class="line"><span class="addition">+          extract_url_without_protocol: false</span></span><br><span class="line"><span class="addition">+        ) do |entity|</span></span><br><span class="line"><span class="addition">+          # Iterate over entities in this text node.</span></span><br><span class="line"><span class="addition">+          advance = entity[:indices].first - processed_index</span></span><br><span class="line"><span class="addition">+          if advance.positive?</span></span><br><span class="line"><span class="addition">+            # Text node for content which precedes entity.</span></span><br><span class="line"><span class="addition">+            replacement &lt;&lt; Nokogiri::XML::Text.new(</span></span><br><span class="line"><span class="addition">+              content[processed_index, advance],</span></span><br><span class="line"><span class="addition">+              document</span></span><br><span class="line"><span class="addition">+            )</span></span><br><span class="line"><span class="addition">+          end</span></span><br><span class="line"><span class="addition">+          replacement &lt;&lt; Nokogiri::HTML5.fragment(yield(entity))</span></span><br><span class="line"><span class="addition">+          processed_index = entity[:indices].last</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+        if processed_index &lt; content.size</span></span><br><span class="line"><span class="addition">+          # Text node for remaining content.</span></span><br><span class="line"><span class="addition">+          replacement &lt;&lt; Nokogiri::XML::Text.new(</span></span><br><span class="line"><span class="addition">+            content[processed_index, content.size - processed_index],</span></span><br><span class="line"><span class="addition">+            document</span></span><br><span class="line"><span class="addition">+          )</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+        text_node.replace(replacement)</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    Sanitize.node!(@tree, Sanitize::Config::MASTODON_OUTGOING).to_html</span></span><br><span class="line"><span class="addition">+  end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  private</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  def format_markdown(html)</span></span><br><span class="line"><span class="addition">+    html = markdown_formatter.render(html)</span></span><br><span class="line"><span class="addition">+    html.delete(&quot;\r&quot;).delete(&quot;\n&quot;)</span></span><br><span class="line"><span class="addition">+  end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+  def markdown_formatter</span></span><br><span class="line"><span class="addition">+    extensions = &#123;</span></span><br><span class="line"><span class="addition">+      autolink: true,</span></span><br><span class="line"><span class="addition">+      no_intra_emphasis: true,</span></span><br><span class="line"><span class="addition">+      fenced_code_blocks: true,</span></span><br><span class="line"><span class="addition">+      disable_indented_code_blocks: true,</span></span><br><span class="line"><span class="addition">+      strikethrough: true,</span></span><br><span class="line"><span class="addition">+      lax_spacing: true,</span></span><br><span class="line"><span class="addition">+      space_after_headers: true,</span></span><br><span class="line"><span class="addition">+      superscript: true,</span></span><br><span class="line"><span class="addition">+      underline: true,</span></span><br><span class="line"><span class="addition">+      highlight: true,</span></span><br><span class="line"><span class="addition">+      footnotes: false,</span></span><br><span class="line"><span class="addition">+    &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    renderer = HTMLRenderer.new(&#123;</span></span><br><span class="line"><span class="addition">+      filter_html: false,</span></span><br><span class="line"><span class="addition">+      escape_html: false,</span></span><br><span class="line"><span class="addition">+      no_images: true,</span></span><br><span class="line"><span class="addition">+      no_styles: true,</span></span><br><span class="line"><span class="addition">+      safe_links_only: true,</span></span><br><span class="line"><span class="addition">+      hard_wrap: true,</span></span><br><span class="line"><span class="addition">+      link_attributes: &#123; target: &#x27;_blank&#x27;, rel: &#x27;nofollow noopener&#x27; &#125;,</span></span><br><span class="line"><span class="addition">+    &#125;) do |url|</span></span><br><span class="line"><span class="addition">+      link_to_url(&#123; url: url &#125;)</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    Redcarpet::Markdown.new(renderer, extensions)</span></span><br><span class="line"><span class="addition">+  end</span></span><br><span class="line"><span class="addition">+end</span></span><br><span class="line"><span class="comment">diff --git a/app/lib/html_aware_formatter.rb b/app/lib/html_aware_formatter.rb</span></span><br><span class="line"><span class="comment">index 64edba09b5..7a1cd03409 100644</span></span><br><span class="line"><span class="comment">--- a/app/lib/html_aware_formatter.rb</span></span><br><span class="line"><span class="comment">+++ b/app/lib/html_aware_formatter.rb</span></span><br><span class="line"><span class="meta">@@ -33,6 +33,10 @@</span> class HtmlAwareFormatter</span><br><span class="line">   end</span><br><span class="line"></span><br><span class="line">   def linkify</span><br><span class="line"><span class="deletion">-    TextFormatter.new(text, options).to_s</span></span><br><span class="line"><span class="addition">+    if %w(text/markdown text/html).include?(@options[:content_type])</span></span><br><span class="line"><span class="addition">+      AdvancedTextFormatter.new(text, options).to_s</span></span><br><span class="line"><span class="addition">+    else</span></span><br><span class="line"><span class="addition">+      TextFormatter.new(text, options).to_s</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line">   end</span><br><span class="line"> end</span><br><span class="line"><span class="comment">diff --git a/lib/sanitize_ext/sanitize_config.rb b/lib/sanitize_ext/sanitize_config.rb</span></span><br><span class="line"><span class="comment">index f0a7b65783..7fe667db54 100644</span></span><br><span class="line"><span class="comment">--- a/lib/sanitize_ext/sanitize_config.rb</span></span><br><span class="line"><span class="comment">+++ b/lib/sanitize_ext/sanitize_config.rb</span></span><br><span class="line"><span class="meta">@@ -112,5 +112,47 @@</span> class Sanitize</span><br><span class="line">         &#x27;iframe&#x27; =&gt; &#123; &#x27;sandbox&#x27; =&gt; &#x27;allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-forms&#x27; &#125;,</span><br><span class="line">       &#125;</span><br><span class="line">     )</span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    LINK_REL_TRANSFORMER = lambda do |env|</span></span><br><span class="line"><span class="addition">+      return unless env[:node_name] == &#x27;a&#x27; &amp;&amp; env[:node][&#x27;href&#x27;]</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      node = env[:node]</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      rel = (node[&#x27;rel&#x27;] || &#x27;&#x27;).split(&#x27; &#x27;) &amp; [&#x27;tag&#x27;]</span></span><br><span class="line"><span class="addition">+      rel += [&#x27;nofollow&#x27;, &#x27;noopener&#x27;, &#x27;noreferrer&#x27;] unless TagManager.instance.local_url?(node[&#x27;href&#x27;])</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      if rel.empty?</span></span><br><span class="line"><span class="addition">+        node.remove_attribute(&#x27;rel&#x27;)</span></span><br><span class="line"><span class="addition">+      else</span></span><br><span class="line"><span class="addition">+        node[&#x27;rel&#x27;] = rel.join(&#x27; &#x27;)</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    LINK_TARGET_TRANSFORMER = lambda do |env|</span></span><br><span class="line"><span class="addition">+      return unless env[:node_name] == &#x27;a&#x27; &amp;&amp; env[:node][&#x27;href&#x27;]</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      node = env[:node]</span></span><br><span class="line"><span class="addition">+      if node[&#x27;target&#x27;] != &#x27;_blank&#x27; &amp;&amp; TagManager.instance.local_url?(node[&#x27;href&#x27;])</span></span><br><span class="line"><span class="addition">+        node.remove_attribute(&#x27;target&#x27;)</span></span><br><span class="line"><span class="addition">+      else</span></span><br><span class="line"><span class="addition">+        node[&#x27;target&#x27;] = &#x27;_blank&#x27;</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    MASTODON_OUTGOING ||= freeze_config MASTODON_STRICT.merge(</span></span><br><span class="line"><span class="addition">+      attributes: merge(</span></span><br><span class="line"><span class="addition">+        MASTODON_STRICT[:attributes],</span></span><br><span class="line"><span class="addition">+        &#x27;a&#x27; =&gt; %w(href rel class title target)</span></span><br><span class="line"><span class="addition">+      ),</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      add_attributes: &#123;&#125;,</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      transformers: [</span></span><br><span class="line"><span class="addition">+        CLASS_WHITELIST_TRANSFORMER,</span></span><br><span class="line"><span class="addition">+        UNSUPPORTED_HREF_TRANSFORMER,</span></span><br><span class="line"><span class="addition">+        LINK_REL_TRANSFORMER,</span></span><br><span class="line"><span class="addition">+        LINK_TARGET_TRANSFORMER,</span></span><br><span class="line"><span class="addition">+      ]</span></span><br><span class="line"><span class="addition">+    )</span></span><br><span class="line">   end</span><br><span class="line"> end</span><br><span class="line"><span class="comment">diff --git a/spec/lib/advanced_text_formatter_spec.rb b/spec/lib/advanced_text_formatter_spec.rb</span></span><br><span class="line">new file mode 100644</span><br><span class="line"><span class="comment">index 0000000000..c1e4696061</span></span><br><span class="line"><span class="comment">--- /dev/null</span></span><br><span class="line"><span class="comment">+++ b/spec/lib/advanced_text_formatter_spec.rb</span></span><br><span class="line"><span class="meta">@@ -0,0 +1,298 @@</span></span><br><span class="line"><span class="addition">+require &#x27;rails_helper&#x27;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+RSpec.describe AdvancedTextFormatter do</span></span><br><span class="line"><span class="addition">+  describe &#x27;#to_s&#x27; do</span></span><br><span class="line"><span class="addition">+    let(:preloaded_accounts) &#123; nil &#125;</span></span><br><span class="line"><span class="addition">+    let(:content_type) &#123; &#x27;text/markdown&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    subject &#123; described_class.new(text, preloaded_accounts: preloaded_accounts, content_type: content_type).to_s &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    context &#x27;given a markdown source&#x27; do</span></span><br><span class="line"><span class="addition">+      let(:content_type) &#123; &#x27;text/markdown&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing plain text&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;text&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;paragraphizes the text&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to eq &#x27;&lt;p&gt;text&lt;/p&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing line feeds&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &quot;line\nfeed&quot; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;removes line feeds&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.not_to include &quot;\n&quot;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given some inline code using backticks&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;test `foo` bar&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;formats code using &lt;code&gt;&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;test &lt;code&gt;foo&lt;/code&gt; bar&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a block code&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &quot;test\n\n```\nint main(void) &#123;\n  return 0; // https://joinmastodon.org/foo\n&#125;\n```\n&quot; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;formats code using &lt;pre&gt; and &lt;code&gt;&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;&lt;pre&gt;&lt;code&gt;int main&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not strip leading spaces&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;&gt;  return 0&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not format links&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;return 0; // https://joinmastodon.org/foo&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a link in inline code using backticks&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;test `https://foo.bar/bar` bar&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not rewrite the link&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;test &lt;code&gt;https://foo.bar/bar&lt;/code&gt; bar&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text with a local-domain mention&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;foo https://cb6e6126.ngrok.io/about/more&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;creates a link&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;&lt;a href=&quot;https://cb6e6126.ngrok.io/about/more&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing linkable mentions&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:preloaded_accounts) &#123; [Fabricate(:account, username: &#x27;alice&#x27;)] &#125;</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;@alice&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;creates a mention link&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;&lt;a href=&quot;https://cb6e6126.ngrok.io/@alice&quot; class=&quot;u-url mention&quot;&gt;@&lt;span&gt;alice&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing unlinkable mentions&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:preloaded_accounts) &#123; [] &#125;</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;@alice&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not create a mention link&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;@alice&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a stand-alone medium URL&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;https://hackernoon.com/the-power-to-build-communities-a-response-to-mark-zuckerberg-3f2cac9148a4&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://hackernoon.com/the-power-to-build-communities-a-response-to-mark-zuckerberg-3f2cac9148a4&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a stand-alone google URL&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;http://google.com&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;http://google.com&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a stand-alone URL with a newer TLD&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;http://example.gay&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;http://example.gay&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a stand-alone IDN URL&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;https://nic.みんな/&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://nic.みんな/&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;has display URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;&lt;span class=&quot;&quot;&gt;nic.みんな/&lt;/span&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL with a trailing period&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;http://www.mcmansionhell.com/post/156408871451/50-states-of-mcmansion-hell-scottsdale-arizona. &#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL but not the period&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;http://www.mcmansionhell.com/post/156408871451/50-states-of-mcmansion-hell-scottsdale-arizona&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL enclosed with parentheses&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;(http://google.com/)&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL but not the parentheses&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;http://google.com/&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL with a trailing exclamation point&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;http://www.google.com!&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL but not the exclamation point&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;http://www.google.com&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL with a trailing single quote&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &quot;http://www.google.com&#x27;&quot; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL but not the single quote&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;http://www.google.com&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    context &#x27;given a URL with a trailing angle bracket&#x27; do</span></span><br><span class="line"><span class="addition">+      let(:text) &#123; &#x27;http://www.google.com&gt;&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      it &#x27;matches the full URL but not the angle bracket&#x27; do</span></span><br><span class="line"><span class="addition">+        is_expected.to include &#x27;href=&quot;http://www.google.com&quot;&#x27;</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+    context &#x27;given a URL with a query string&#x27; do</span></span><br><span class="line"><span class="addition">+      context &#x27;with escaped unicode character&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;https://www.ruby-toolbox.com/search?utf8=%E2%9C%93&amp;q=autolink&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://www.ruby-toolbox.com/search?utf8=%E2%9C%93&amp;amp;q=autolink&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;with unicode character&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;https://www.ruby-toolbox.com/search?utf8=✓&amp;q=autolink&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://www.ruby-toolbox.com/search?utf8=✓&amp;amp;q=autolink&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;with unicode character at the end&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;https://www.ruby-toolbox.com/search?utf8=✓&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://www.ruby-toolbox.com/search?utf8=✓&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;with escaped and not escaped unicode characters&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;https://www.ruby-toolbox.com/search?utf8=%E2%9C%93&amp;utf81=✓&amp;q=autolink&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;preserves escaped unicode characters&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://www.ruby-toolbox.com/search?utf8=%E2%9C%93&amp;amp;utf81=✓&amp;amp;q=autolink&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL with parentheses in it&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;https://en.wikipedia.org/wiki/Diaspora_(software)&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://en.wikipedia.org/wiki/Diaspora_(software)&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL in quotation marks&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;&quot;https://example.com/&quot;&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not match the quotation marks&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://example.com/&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL in angle brackets&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;&lt;https://example.com/&gt;&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not match the angle brackets&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;https://example.com/&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given a URL containing unsafe code (XSS attack, invisible part)&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; %q&#123;http://example.com/blahblahblahblah/a&lt;script&gt;alert(&quot;Hello&quot;)&lt;/script&gt;&#125; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not include the HTML in the URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;&quot;http://example.com/blahblahblahblah/a&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not include a script tag&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to_not include &#x27;&lt;script&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing HTML code (script tag)&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;&lt;script&gt;alert(&quot;Hello&quot;)&lt;/script&gt;&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not include a script tag&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to_not include &#x27;&lt;script&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing HTML (XSS attack)&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; %q&#123;&lt;img src=&quot;javascript:alert(&#x27;XSS&#x27;);&quot;&gt;&#125; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;does not include the javascript&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to_not include &#x27;href=&quot;javascript:&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given an invalid URL&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;http://www\.google\.com&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;outputs the raw URL&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to eq &#x27;&lt;p&gt;http://www\.google\.com&lt;/p&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing a hashtag&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text)  &#123; &#x27;#hashtag&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;creates a hashtag link&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;/tags/hashtag&quot; class=&quot;mention hashtag&quot; rel=&quot;tag&quot;&gt;#&lt;span&gt;hashtag&lt;/span&gt;&lt;/a&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing a hashtag with Unicode chars&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text)  &#123; &#x27;#hashtagタグ&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;creates a hashtag link&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;/tags/hashtag%E3%82%BF%E3%82%B0&quot; class=&quot;mention hashtag&quot; rel=&quot;tag&quot;&gt;#&lt;span&gt;hashtagタグ&lt;/span&gt;&lt;/a&gt;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text with a stand-alone xmpp: URI&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;xmpp:user@instance.com&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URI&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;xmpp:user@instance.com&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text with an xmpp: URI with a query-string&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;please join xmpp:muc@instance.com?join right now&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URI&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;xmpp:muc@instance.com?join&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+      context &#x27;given text containing a magnet: URI&#x27; do</span></span><br><span class="line"><span class="addition">+        let(:text) &#123; &#x27;wikipedia gives this example of a magnet uri: magnet:?xt=urn:btih:c12fe1c06bba254a9dc9f519b335aa7c1367a88a&#x27; &#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        it &#x27;matches the full URI&#x27; do</span></span><br><span class="line"><span class="addition">+          is_expected.to include &#x27;href=&quot;magnet:?xt=urn:btih:c12fe1c06bba254a9dc9f519b335aa7c1367a88a&quot;&#x27;</span></span><br><span class="line"><span class="addition">+        end</span></span><br><span class="line"><span class="addition">+      end</span></span><br><span class="line"><span class="addition">+    end</span></span><br><span class="line"><span class="addition">+  end</span></span><br><span class="line"><span class="addition">+end</span></span><br></pre></td></tr></table></figure><h1 id="解决的过程"><a href="#解决的过程" class="headerlink" title="解决的过程"></a>解决的过程</h1><p>以上那么长的代码，当然不是我一个字一个字敲出来的。我找到了长毛象最先实现Markdown的提交<a href="https://github.com/ClearlyClaire/mastodon/commit/2a8ce1a28809501e88493744c93dc22c7a1c1dc8">https://github.com/ClearlyClaire/mastodon/commit/2a8ce1a28809501e88493744c93dc22c7a1c1dc8</a> 。将他的代码下载下来，合并以后在开发环境进行测试。发现每次发嘟文都会陷入500的报错。反复实验，查看后台的日志。发现嘟文（status）缺少方法（method）<code>content_type</code>。然后我又下载了glitch的代码进行一一比对（我前两天都没学会<code>git diff</code>，纯手工操作），发现glitch分支可以通过网页端界面选择你的嘟文类型，是plain text？还是Markdown？还是HTML？通过这个模块，选择了<code>content_type</code>。而我没有这个模块，没时间写，也没本事写。所以，最简单的办法，就是把<code>content_type: status.content_type</code>给写死，写成<code>content_type: &#39;text/markdown&#39;</code>。最后那个对象成员一定要有引号，否则还是报错。</p><p>问题就此解决</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>最后我想说的，我还是<em><strong>不建议任何允许陌生人注册的实例使用我的代码！</strong></em> 我对可能会引来<a href="https://bsky.app/profile/z35a.bsky.social/post/3lh3lf55css2f">恶意用户</a>的安全问题概不负责！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;经常玩长毛象的朋友会发现，glitch长毛象、Misskey及其分支，都可以发送富文本。现在我们虽然能看，但却只能发送可怜兮兮的plain text🥺&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="长毛象中度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E4%B8%AD%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    <category term="长毛象重度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E9%87%8D%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="爱🐘TV" scheme="https://blog.dzm.pp.ua/tags/%E7%88%B1%F0%9F%90%98TV/"/>
    
    <category term="哈基象欠爱了" scheme="https://blog.dzm.pp.ua/tags/%E5%93%88%E5%9F%BA%E8%B1%A1%E6%AC%A0%E7%88%B1%E4%BA%86/"/>
    
    <category term="超长代码预警！！！" scheme="https://blog.dzm.pp.ua/tags/%E8%B6%85%E9%95%BF%E4%BB%A3%E7%A0%81%E9%A2%84%E8%AD%A6%EF%BC%81%EF%BC%81%EF%BC%81/"/>
    
  </entry>
  
  <entry>
    <title>长毛象轻度魔改合集</title>
    <link href="https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9%E5%90%88%E9%9B%86/"/>
    <id>https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9%E5%90%88%E9%9B%86/</id>
    <published>2025-02-01T14:24:55.000Z</published>
    <updated>2025-02-01T15:34:18.339Z</updated>
    
    <content type="html"><![CDATA[<p>这些魔改内容，非常简单，其他博主也发过,就比如</p><span id="more"></span><p><a href="https://pullopen.github.io/%E8%BF%9B%E9%98%B6%E9%AD%94%E6%94%B9/2020/11/14/mastodon-modify.html">https://pullopen.github.io/%E8%BF%9B%E9%98%B6%E9%AD%94%E6%94%B9/2020/11/14/mastodon-modify.html</a><br><a href="https://blog.bgme.me/">https://blog.bgme.me/</a><br><a href="https://pullopen.github.io/%E8%BF%9B%E9%98%B6%E9%AD%94%E6%94%B9/2020/11/01/Mastodon-on-Docker-2.html">https://pullopen.github.io/%E8%BF%9B%E9%98%B6%E9%AD%94%E6%94%B9/2020/11/01/Mastodon-on-Docker-2.html</a><br><a href="https://blog.tantalum.life/posts/notes-on-modifying-mastodon-in-docker/">https://blog.tantalum.life/posts/notes-on-modifying-mastodon-in-docker/</a><br>就不一一例举了。</p><p>我这大概也算是跟风吧？但是有些内容我在网上中文圈实在是查不到，可能研究的人少，也可能被淹没了。</p><h1 id="投票增加"><a href="#投票增加" class="headerlink" title="投票增加"></a>投票增加</h1><p>官方长毛象投票只能投4行，实在太少了。你觉得呢？</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/validators/poll_validator.rb b/app/validators/poll_validator.rb</span></span><br><span class="line"><span class="comment">index a327277963..fb6dbad38c 100644</span></span><br><span class="line"><span class="comment">--- a/app/validators/poll_validator.rb</span></span><br><span class="line"><span class="comment">+++ b/app/validators/poll_validator.rb</span></span><br><span class="line"><span class="meta">@@ -1,7 +1,7 @@</span></span><br><span class="line"> # frozen_string_literal: true</span><br><span class="line"></span><br><span class="line"> class PollValidator &lt; ActiveModel::Validator</span><br><span class="line"><span class="deletion">-  MAX_OPTIONS      = 4</span></span><br><span class="line"><span class="addition">+  MAX_OPTIONS      = 40</span></span><br><span class="line">   MAX_OPTION_CHARS = 50</span><br><span class="line">   MAX_EXPIRATION   = 1.month.freeze</span><br><span class="line">   MIN_EXPIRATION   = 5.minutes.freeze</span><br></pre></td></tr></table></figure><p>总共需要改1处代码。我改为了最多40个选项。因为我的实例不开放注册，所以投票选项近乎无限，<em><strong>非常不建议公共实例开太多选项，稍微增加一点得了。你必须考虑到会有你不认识的恶意用户用大量投票水贴刷屏！</strong></em></p><h1 id="媒体大小增加"><a href="#媒体大小增加" class="headerlink" title="媒体大小增加"></a>媒体大小增加</h1><p>玩象途中，经常会发生媒体文件过大的报错，发个图还不如微博，束手束脚的。<strong>所以也果断改了！</strong> 但要提醒的是，光靠这一处无限增大，也是无法让你在你的实例上上传电影，它应该是有其他写死的地方作为保险的。同样的，<em><strong>我也不建议彻底放开媒体限制，个人私有的实例也不例外，这是为了你好</strong></em></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/models/media_attachment.rb b/app/models/media_attachment.rb</span></span><br><span class="line"><span class="comment">index 6708cd7793..4788ce1414 100644</span></span><br><span class="line"><span class="comment">--- a/app/models/media_attachment.rb</span></span><br><span class="line"><span class="comment">+++ b/app/models/media_attachment.rb</span></span><br><span class="line"><span class="meta">@@ -39,8 +39,8 @@</span> class MediaAttachment &lt; ApplicationRecord</span><br><span class="line"></span><br><span class="line">   MAX_DESCRIPTION_LENGTH = 1_500</span><br><span class="line"></span><br><span class="line"><span class="deletion">-  IMAGE_LIMIT = 16.megabytes</span></span><br><span class="line"><span class="deletion">-  VIDEO_LIMIT = 99.megabytes</span></span><br><span class="line"><span class="addition">+  IMAGE_LIMIT = 32.megabytes</span></span><br><span class="line"><span class="addition">+  VIDEO_LIMIT = 200.megabytes</span></span><br><span class="line"></span><br><span class="line">   MAX_VIDEO_MATRIX_LIMIT = 8_294_400 # 3840x2160px</span><br><span class="line">   MAX_VIDEO_FRAME_RATE   = 120</span><br></pre></td></tr></table></figure><h1 id="嘟文字数增加"><a href="#嘟文字数增加" class="headerlink" title="嘟文字数增加"></a>嘟文字数增加</h1><p>微博类服务的特点就是字数少，要在140字内把话说完。但是，长毛象是我们吐露心声的地方，如果500字（官方限制）不够用，那就得开一长串（我才不会搬到博客来发！键政的事就留在长毛象好了）。那么我再稍微改改代码 <em>（以前改的不止这一处，现版本听说优化过了，大大减轻了站长们的负担！）</em></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/validators/status_length_validator.rb b/app/validators/status_length_validator.rb</span></span><br><span class="line"><span class="comment">index dc841ded3e..9cb1ec94b3 100644</span></span><br><span class="line"><span class="comment">--- a/app/validators/status_length_validator.rb</span></span><br><span class="line"><span class="comment">+++ b/app/validators/status_length_validator.rb</span></span><br><span class="line"><span class="meta">@@ -1,7 +1,7 @@</span></span><br><span class="line"> # frozen_string_literal: true</span><br><span class="line"></span><br><span class="line"> class StatusLengthValidator &lt; ActiveModel::Validator</span><br><span class="line"><span class="deletion">-  MAX_CHARS = 500</span></span><br><span class="line"><span class="addition">+  MAX_CHARS = 5000</span></span><br><span class="line">   URL_PLACEHOLDER_CHARS = 23</span><br><span class="line">   URL_PLACEHOLDER = &#x27;x&#x27; * 23</span><br></pre></td></tr></table></figure><h1 id="置顶限制增加"><a href="#置顶限制增加" class="headerlink" title="置顶限制增加"></a>置顶限制增加</h1><p>置顶贴原来的限制为5个。其实没必要增加，但是有的时候，我置顶了5个以后，又想发起投票，在有效期间提高参与度。这样的话，我就得在我的<a href="https://cmx.dzm.pp.ua/@Network">所有置顶</a>当中做出取舍。但最终，我选择了舍弃置顶数量限制😎</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/validators/status_pin_validator.rb b/app/validators/status_pin_validator.rb</span></span><br><span class="line"><span class="comment">index c9c1effba8..3868a85718 100644</span></span><br><span class="line"><span class="comment">--- a/app/validators/status_pin_validator.rb</span></span><br><span class="line"><span class="comment">+++ b/app/validators/status_pin_validator.rb</span></span><br><span class="line"><span class="meta">@@ -1,7 +1,7 @@</span></span><br><span class="line"> # frozen_string_literal: true</span><br><span class="line"></span><br><span class="line"> class StatusPinValidator &lt; ActiveModel::Validator</span><br><span class="line"><span class="deletion">-  PIN_LIMIT = 5</span></span><br><span class="line"><span class="addition">+  PIN_LIMIT = 10</span></span><br><span class="line"></span><br><span class="line">   def validate(pin)</span><br><span class="line">     pin.errors.add(:base, I18n.t(&#x27;statuses.pin_errors.reblog&#x27;)) if pin.status.reblog?</span><br></pre></td></tr></table></figure><h1 id="发送多个视频"><a href="#发送多个视频" class="headerlink" title="发送多个视频"></a>发送多个视频</h1><p>新浪微博好像只允许会员在一条微博发多个视频？（我被封太久了，不知现在政策如何了，知情的朋友在评论区留个言）<br>这个政策是因为大量用户使用这个功能会占用大量的系统资源<del>，即使在家开机房，我也是会心疼电费的，所以实例不给别人用😅跑题了</del>。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/services/update_status_service.rb b/app/services/update_status_service.rb</span></span><br><span class="line"><span class="comment">index a2f50e901a..126d9b3293 100644</span></span><br><span class="line"><span class="comment">--- a/app/services/update_status_service.rb</span></span><br><span class="line"><span class="comment">+++ b/app/services/update_status_service.rb</span></span><br><span class="line"><span class="meta">@@ -76,7 +76,6 @@</span> class UpdateStatusService &lt; BaseService</span><br><span class="line">     not_found_ids = @options[:media_ids].map(&amp;:to_i) - media_attachments.map(&amp;:id)</span><br><span class="line">     raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.not_found&#x27;, ids: not_found_ids.join(&#x27;, &#x27;)) if not_found_ids.any?</span><br><span class="line"></span><br><span class="line"><span class="deletion">-    raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.images_and_video&#x27;) if media_attachments.size &gt; 1 &amp;&amp; media_attachments.find(&amp;:audio_or_video?)</span></span><br><span class="line">     raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.not_ready&#x27;) if media_attachments.any?(&amp;:not_processed?)</span><br><span class="line"></span><br><span class="line">     media_attachments</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/containers/upload_button_container.js b/app/javascript/mastodon/features/compose/containers/upload_button_container.js</span></span><br><span class="line"><span class="comment">index 53528ca3f8..a0532fdac4 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/features/compose/containers/upload_button_container.js</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/containers/upload_button_container.js</span></span><br><span class="line"><span class="meta">@@ -13,7 +13,7 @@</span> const mapStateToProps = state =&gt; &#123;</span><br><span class="line">   const hasVideoOrAudio = state.getIn([&#x27;compose&#x27;, &#x27;media_attachments&#x27;]).some(m =&gt; [&#x27;video&#x27;, &#x27;audio&#x27;].includes(m.get(&#x27;type&#x27;)));</span><br><span class="line"></span><br><span class="line">   return &#123;</span><br><span class="line"><span class="deletion">-    disabled:  isUploading || isOverLimit || hasVideoOrAudio,</span></span><br><span class="line"><span class="addition">+    disabled:  isUploading || isOverLimit,</span></span><br><span class="line">     resetFileKey: state.getIn([&#x27;compose&#x27;, &#x27;resetFileKey&#x27;]),</span><br><span class="line">   &#125;;</span><br><span class="line"> &#125;;</span><br><span class="line"><span class="comment">diff --git a/app/services/post_status_service.rb b/app/services/post_status_service.rb</span></span><br><span class="line"><span class="comment">index 4cb2b399ff..3d6aa857e6 100644</span></span><br><span class="line"><span class="comment">--- a/app/services/post_status_service.rb</span></span><br><span class="line"><span class="comment">+++ b/app/services/post_status_service.rb</span></span><br><span class="line"><span class="meta">@@ -137,7 +137,6 @@</span> class PostStatusService &lt; BaseService</span><br><span class="line">     not_found_ids = @options[:media_ids].map(&amp;:to_i) - @media.map(&amp;:id)</span><br><span class="line">     raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.not_found&#x27;, ids: not_found_ids.join(&#x27;, &#x27;)) if not_found_ids.any?</span><br><span class="line"></span><br><span class="line"><span class="deletion">-    raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.images_and_video&#x27;) if @media.size &gt; 1 &amp;&amp; @media.find(&amp;:audio_or_video?)</span></span><br><span class="line">     raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.not_ready&#x27;) if @media.any?(&amp;:not_processed?)</span><br><span class="line">   end</span><br></pre></td></tr></table></figure><h1 id="个人资料附加信息增加"><a href="#个人资料附加信息增加" class="headerlink" title="个人资料附加信息增加"></a>个人资料附加信息增加</h1><p>个人资料的field除了发自己的博客、主页、GitHub和各种乱七八糟的酷东西以外，还要发switch游戏账号，方便交友，所以4个怎么够用呢？</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/models/account.rb b/app/models/account.rb</span></span><br><span class="line"><span class="comment">index 708415b6ee..1af6bab511 100644</span></span><br><span class="line"><span class="comment">--- a/app/models/account.rb</span></span><br><span class="line"><span class="comment">+++ b/app/models/account.rb</span></span><br><span class="line"><span class="meta">@@ -65,7 +65,7 @@</span> class Account &lt; ApplicationRecord</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line">   BACKGROUND_REFRESH_INTERVAL = 1.week.freeze</span><br><span class="line"><span class="deletion">-  DEFAULT_FIELDS_SIZE = 4</span></span><br><span class="line"><span class="addition">+  DEFAULT_FIELDS_SIZE = 8</span></span><br><span class="line">   INSTANCE_ACTOR_ID = -99</span><br><span class="line"></span><br><span class="line">   USERNAME_RE   = /[a-z0-9_]+([.-]+[a-z0-9_]+)*/i</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;这些魔改内容，非常简单，其他博主也发过,就比如&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="长毛象轻度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    <category term="投票增加" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/%E6%8A%95%E7%A5%A8%E5%A2%9E%E5%8A%A0/"/>
    
    <category term="媒体大小增加" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/%E5%AA%92%E4%BD%93%E5%A4%A7%E5%B0%8F%E5%A2%9E%E5%8A%A0/"/>
    
    <category term="嘟文字数增加" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/%E5%98%9F%E6%96%87%E5%AD%97%E6%95%B0%E5%A2%9E%E5%8A%A0/"/>
    
    <category term="置顶限制增加" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/%E7%BD%AE%E9%A1%B6%E9%99%90%E5%88%B6%E5%A2%9E%E5%8A%A0/"/>
    
    <category term="发送多个视频" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/%E5%8F%91%E9%80%81%E5%A4%9A%E4%B8%AA%E8%A7%86%E9%A2%91/"/>
    
    <category term="个人资料附加信息增加" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/%E4%B8%AA%E4%BA%BA%E8%B5%84%E6%96%99%E9%99%84%E5%8A%A0%E4%BF%A1%E6%81%AF%E5%A2%9E%E5%8A%A0/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="暴🐘改造者" scheme="https://blog.dzm.pp.ua/tags/%E6%9A%B4%F0%9F%90%98%E6%94%B9%E9%80%A0%E8%80%85/"/>
    
    <category term="差不多得了😅" scheme="https://blog.dzm.pp.ua/tags/%E5%B7%AE%E4%B8%8D%E5%A4%9A%E5%BE%97%E4%BA%86%F0%9F%98%85/"/>
    
  </entry>
  
  <entry>
    <title>长毛象带图投票</title>
    <link href="https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%B8%A6%E5%9B%BE%E6%8A%95%E7%A5%A8/"/>
    <id>https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%B8%A6%E5%9B%BE%E6%8A%95%E7%A5%A8/</id>
    <published>2025-02-01T13:47:41.000Z</published>
    <updated>2025-02-01T15:30:05.832Z</updated>
    
    <content type="html"><![CDATA[<p>我们在使用微型博客（简称微博）时，时常会需要带图片发起投票。<del>就比如给小姐姐打分</del>投票时没有图片，就很难把问题描述清楚。这种情况就需要进行<a href="/tags/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/">长毛象轻度魔改</a>。</p><span id="more"></span><p>那么废话不多说，直接进入正题</p><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><p>不想看过程的（跟我想的一样的）可以跳过这一章节。</p><p>这个灵感直接来源于这个glitch版长毛象的提交<a href="https://github.com/BakaAC/mastodon/commit/e797b43a328679c879bd7ddadfafc701daccefc8">https://github.com/BakaAC/mastodon/commit/e797b43a328679c879bd7ddadfafc701daccefc8</a> （这里不方便嵌入网页，就直接分析一下思路得了）</p><p>原版长毛象<em><strong>故意</strong></em> 禁了投票的功能。我在魔改完成后，提交了<a href="https://github.com/mastodon/mastodon/pull/33756">Pull Request</a>，尽管这个呼声在长毛象用户当中非常强烈，但作者方面仍然拒绝了本次合并。理由很简单：</p><blockquote><p>Thank you for your contribution, however, I’ve discussed this with our designer and our position remains that we don’t want to encourage media + poll posts (even though we are aware they are possible in other fediverse software) for two main reasons:</p><ol><li>Height of individual items in the feed (a single post shouldn’t be able to hog too much scroll space)</li><li>Box-in-a-box-over-box problem (polls are boxes, media is boxes, they’re in a post, with quote posts they’re in another box, etc)<br>纯粹是担心影响用户体验罢了。</li></ol></blockquote><p>让我们来看看作者是如何禁止的：</p><ol><li>“发送”代码被写死：禁止带图和投票的嘟文被发送</li><li>“插入图片”和“插入投票”的代码分别被写死：禁止在有图片或投票时，处于可用状态，只能处于禁用（disabled）状态</li><li>后端可能被写死：所有同时包含投票和图片的嘟文，禁止以发送（post）和编辑(update)方式发布<br>可谓是严防死守。</li></ol><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p><em>歪个题，以后所有魔改，我都直接<code>git diff</code>两个提交，粘贴输出的代码到这里来，家人们自己抄</em></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/actions/compose.js b/app/javascript/mastodon/actions/compose.js</span></span><br><span class="line"><span class="comment">index aa1c6de20e..7525be454e 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/actions/compose.js</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/actions/compose.js</span></span><br><span class="line"><span class="meta">@@ -83,7 +83,6 @@</span> export const COMPOSE_FOCUS = &#x27;COMPOSE_FOCUS&#x27;;</span><br><span class="line"></span><br><span class="line"> const messages = defineMessages(&#123;</span><br><span class="line">   uploadErrorLimit: &#123; id: &#x27;upload_error.limit&#x27;, defaultMessage: &#x27;File upload limit exceeded.&#x27; &#125;,</span><br><span class="line"><span class="deletion">-  uploadErrorPoll:  &#123; id: &#x27;upload_error.poll&#x27;, defaultMessage: &#x27;File upload not allowed with polls.&#x27; &#125;,</span></span><br><span class="line">   open: &#123; id: &#x27;compose.published.open&#x27;, defaultMessage: &#x27;Open&#x27; &#125;,</span><br><span class="line">   published: &#123; id: &#x27;compose.published.body&#x27;, defaultMessage: &#x27;Post published.&#x27; &#125;,</span><br><span class="line">   saved: &#123; id: &#x27;compose.saved.body&#x27;, defaultMessage: &#x27;Post saved.&#x27; &#125;,</span><br><span class="line"><span class="meta">@@ -310,11 +309,6 @@</span> export function uploadCompose(files) &#123;</span><br><span class="line">       return;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="deletion">-    if (getState().getIn([&#x27;compose&#x27;, &#x27;poll&#x27;])) &#123;</span></span><br><span class="line"><span class="deletion">-      dispatch(showAlert(&#123; message: messages.uploadErrorPoll &#125;));</span></span><br><span class="line"><span class="deletion">-      return;</span></span><br><span class="line"><span class="deletion">-    &#125;</span></span><br><span class="line"><span class="deletion">-</span></span><br><span class="line">     dispatch(uploadComposeRequest());</span><br><span class="line"></span><br><span class="line">     for (const [i, file] of Array.from(files).entries()) &#123;</span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/containers/poll_button_container.js b/app/javascript/mastodon/features/compose/containers/poll_button_container.js</span></span><br><span class="line"><span class="comment">index 9de388f64a..f037c253a8 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/features/compose/containers/poll_button_container.js</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/containers/poll_button_container.js</span></span><br><span class="line"><span class="meta">@@ -4,7 +4,7 @@</span> import &#123; addPoll, removePoll &#125; from &#x27;../../../actions/compose&#x27;;</span><br><span class="line"> import PollButton from &#x27;../components/poll_button&#x27;;</span><br><span class="line"></span><br><span class="line"> const mapStateToProps = state =&gt; (&#123;</span><br><span class="line"><span class="deletion">-  disabled: state.getIn([&#x27;compose&#x27;, &#x27;is_uploading&#x27;]) || (state.getIn([&#x27;compose&#x27;, &#x27;media_attachments&#x27;]).size &gt; 0),</span></span><br><span class="line"><span class="addition">+  disabled: state.getIn([&#x27;compose&#x27;, &#x27;is_uploading&#x27;]) ,</span></span><br><span class="line">   active: state.getIn([&#x27;compose&#x27;, &#x27;poll&#x27;]) !== null,</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">diff --git a/app/javascript/mastodon/features/compose/containers/upload_button_container.js b/app/javascript/mastodon/features/compose/containers/upload_button_container.js</span></span><br><span class="line"><span class="comment">index 7cdc12663d..53528ca3f8 100644</span></span><br><span class="line"><span class="comment">--- a/app/javascript/mastodon/features/compose/containers/upload_button_container.js</span></span><br><span class="line"><span class="comment">+++ b/app/javascript/mastodon/features/compose/containers/upload_button_container.js</span></span><br><span class="line"><span class="meta">@@ -13,7 +13,7 @@</span> const mapStateToProps = state =&gt; &#123;</span><br><span class="line">   const hasVideoOrAudio = state.getIn([&#x27;compose&#x27;, &#x27;media_attachments&#x27;]).some(m =&gt; [&#x27;video&#x27;, &#x27;audio&#x27;].includes(m.get(&#x27;type&#x27;)));</span><br><span class="line"></span><br><span class="line">   return &#123;</span><br><span class="line"><span class="deletion">-    disabled: isPoll || isUploading || isOverLimit || hasVideoOrAudio,</span></span><br><span class="line"><span class="addition">+    disabled:  isUploading || isOverLimit || hasVideoOrAudio,</span></span><br><span class="line">     resetFileKey: state.getIn([&#x27;compose&#x27;, &#x27;resetFileKey&#x27;]),</span><br><span class="line">   &#125;;</span><br><span class="line"> &#125;;</span><br><span class="line"><span class="comment">diff --git a/app/services/post_status_service.rb b/app/services/post_status_service.rb</span></span><br><span class="line"><span class="comment">index 98fd95f025..4cb2b399ff 100644</span></span><br><span class="line"><span class="comment">--- a/app/services/post_status_service.rb</span></span><br><span class="line"><span class="comment">+++ b/app/services/post_status_service.rb</span></span><br><span class="line"><span class="meta">@@ -130,7 +130,7 @@</span> class PostStatusService &lt; BaseService</span><br><span class="line">       return</span><br><span class="line">     end</span><br><span class="line"></span><br><span class="line"><span class="deletion">-    raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.too_many&#x27;) if @options[:media_ids].size &gt; Status::MEDIA_ATTACHMENTS_LIMIT || @options[:poll].present?</span></span><br><span class="line"><span class="addition">+    raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.too_many&#x27;) if @options[:media_ids].size &gt; Status::MEDIA_ATTACHMENTS_LIMIT</span></span><br><span class="line"></span><br><span class="line">     @media = @account.media_attachments.where(status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&amp;:to_i))</span><br><span class="line"></span><br><span class="line"><span class="comment">diff --git a/app/services/update_status_service.rb b/app/services/update_status_service.rb</span></span><br><span class="line"><span class="comment">index 7837d37c95..a2f50e901a 100644</span></span><br><span class="line"><span class="comment">--- a/app/services/update_status_service.rb</span></span><br><span class="line"><span class="comment">+++ b/app/services/update_status_service.rb</span></span><br><span class="line"><span class="meta">@@ -69,7 +69,7 @@</span> class UpdateStatusService &lt; BaseService</span><br><span class="line">   def validate_media!</span><br><span class="line">     return [] if @options[:media_ids].blank? || !@options[:media_ids].is_a?(Enumerable)</span><br><span class="line"></span><br><span class="line"><span class="deletion">-    raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.too_many&#x27;) if @options[:media_ids].size &gt; Status::MEDIA_ATTACHMENTS_LIMIT || @options[:poll].present?</span></span><br><span class="line"><span class="addition">+    raise Mastodon::ValidationError, I18n.t(&#x27;media_attachments.validations.too_many&#x27;) if @options[:media_ids].size &gt; Status::MEDIA_ATTACHMENTS_LIMIT</span></span><br><span class="line"></span><br><span class="line">     media_attachments = @status.account.media_attachments.where(status_id: [nil, @status.id]).where(scheduled_status_id: nil).where(id: @options[:media_ids].take(Status::MEDIA_ATTACHMENTS_LIMIT).map(&amp;:to_i)).to_a</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;我们在使用微型博客（简称微博）时，时常会需要带图片发起投票。&lt;del&gt;就比如给小姐姐打分&lt;/del&gt;投票时没有图片，就很难把问题描述清楚。这种情况就需要进行&lt;a href=&quot;/tags/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/&quot;&gt;长毛象轻度魔改&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="长毛象中度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E4%B8%AD%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    <category term="长毛象轻度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="爱🐘TV" scheme="https://blog.dzm.pp.ua/tags/%E7%88%B1%F0%9F%90%98TV/"/>
    
    <category term="暴🐘改造者" scheme="https://blog.dzm.pp.ua/tags/%E6%9A%B4%F0%9F%90%98%E6%94%B9%E9%80%A0%E8%80%85/"/>
    
  </entry>
  
  <entry>
    <title>长毛象全文搜索的部署</title>
    <link href="https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <id>https://blog.dzm.pp.ua/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E7%9A%84%E9%83%A8%E7%BD%B2/</id>
    <published>2025-02-01T07:23:46.000Z</published>
    <updated>2025-02-07T14:47:24.799Z</updated>
    
    <content type="html"><![CDATA[<p>本博客作为技术博客，已部署了搜索功能*（虽然不敢保证是由有用）*。但是，有更多的资源我记录或收藏在了长毛象里，经过长时间高频率地使用，很容易就会被淹没在茫茫信息之中。没有搜索功能，在需要时（就比如写本博客、<del>寻找收藏的小姐姐🤤</del>、分享某些象友的经典言论）就只能手动去一一翻找。所以，没有搜索功能很不方便，我们需要部署全文搜索。</p><span id="more"></span><h1 id="面向的读者"><a href="#面向的读者" class="headerlink" title="面向的读者"></a>面向的读者</h1><p>跟前一篇不同，本篇理论上不适合所有读者。适合的人群须满足：</p><ul><li>确有需要并且有技术自建长毛象实例的</li><li>对自己实例的使用体验和自己的运维水平有一定的追求</li><li>想要以后开始学习给<a href="https://github.com/mastodon/mastodon">长毛象项目</a>做贡献，或开发自己的长毛象变种，就像<a href="https://github.com/TheEssem/mastodon">https://github.com/TheEssem/mastodon</a> 一样</li></ul><h2 id="需要的基础知识"><a href="#需要的基础知识" class="headerlink" title="需要的基础知识"></a>需要的基础知识</h2><ul><li>熟练掌握Linux服务的重启</li><li>Ubuntu的软件安装与<em><strong>卸载</strong></em></li><li>掌握一定的Linux系统知识</li><li>通读长毛象的官方文档<br><a href="https://docs.joinmastodon.org/admin/install/">长毛象的安装</a><br><a href="https://docs.joinmastodon.org/admin/migrating/">长毛象的迁移（备份）</a><br><a href="https://docs.joinmastodon.org/dev/setup/">长毛象的开发</a><br><strong><a href="https://docs.joinmastodon.org/admin/elasticsearch/">长毛象部署全文搜索</a></strong></li></ul><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>首先，你要有个未部署全文搜索的长毛象实例（网页端搜索是灰色&#x2F;无法点击的），最好是官方实例，没魔改过的更好。如果魔改过，说明你对长毛象的代码理解水平在我之上，也不需要我担心。如果不是官方实例，那么<strong>请熟读该魔改版本作者写的文档！</strong><br>如果你已部署了全文搜索，也不必急着走，可以跳到本文后半部分。</p><h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><p>官方文档<a href="https://docs.joinmastodon.org/admin/elasticsearch/">https://docs.joinmastodon.org/admin/elasticsearch/</a> 已给出非常具体的操作方法，除了<a href="https://docs.joinmastodon.org/admin/elasticsearch/#search-optimization-for-other-languages">这一部分</a>以外，完全照做一遍都没有问题。根据<a href="https://baka.ink/">某象友</a>的实践，当前版本早已不需要优化即可进行中文搜索。</p><p><em><strong>但是，</strong></em> 在这种情况下，你无法用中文搜索找到简繁不一致的内容。这时，你就需要优化。如果你没有上述需求，那么现在就可以出门左转了。</p><p>笔者踩了好几天的坑，发现如果需要进行中文搜索的优化，你不应该按照<a href="https://docs.joinmastodon.org/admin/elasticsearch/">官方文档</a>进行操作，而是应该如下进行操作。但是<a href="https://docs.joinmastodon.org/admin/elasticsearch/">官方文档</a>仍有巨大的参考价值。</p><p>首先需要安装依赖</p><blockquote><p><strong>小知识</strong><br>提示符为#时，代表以root权限执行，为$时，代表以普通用户权限执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt install openjdk-17-jre-headless</span></span><br></pre></td></tr></table></figure><p>接下来的操作，与官方文档不同，如果已经安装官方文档操作，则需要彻底删除<code>elasticsearch</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget -O /usr/share/keyrings/elasticsearch.asc https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="comment"># echo &quot;deb [signed-by=/usr/share/keyrings/elasticsearch.asc] https://artifacts.elastic.co/packages/8.x/apt stable main&quot; &gt; /etc/apt/sources.list.d/elastic-8.x.list</span></span><br></pre></td></tr></table></figure><p><em><strong>注意：要把官方文档的版本号改为8.x。</strong></em><br>接下来，更新软件源，并安装Elasticsearch 8.4.1 。<em><strong>如果不安装该版本，官方最稳定的analysis-ik将无法正常安装！</strong></em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt update</span></span><br><span class="line"><span class="comment"># apt install elasticsearch=8.4.1</span></span><br></pre></td></tr></table></figure><p>安装完毕后，执行以下命令启动Elasticsearch。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl daemon-reload</span></span><br><span class="line"><span class="comment"># systemctl enable --now elasticsearch</span></span><br></pre></td></tr></table></figure><p><em>小踩坑点：</em> 以上命令跳过第一条则无法启动第二条。在<code>top</code>中，<code>elasticsearch</code>以<code>java</code>进程的形式运行。<br><em><strong>大踩坑点：</strong></em> 如果之前安装过其他版本的Elasticsearch，就比如按照<a href="https://docs.joinmastodon.org/admin/elasticsearch/">官方文档</a>的步骤按照了Elasticsearch 7.x版本，则这一步可能失败。验证方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl status elasticsearch</span><br></pre></td></tr></table></figure><h2 id="卸载旧版Elasticsearch的方法"><a href="#卸载旧版Elasticsearch的方法" class="headerlink" title="卸载旧版Elasticsearch的方法"></a>卸载旧版Elasticsearch的方法</h2><p>有点Linux经验的小伙伴，会知道一个办法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt remove elasticsearch</span></span><br></pre></td></tr></table></figure><p>但是这样会保留配置文件。如果卸载不干净，则重装过后依然无法启动。<br>正确的卸载方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt purge elasticsearch</span></span><br></pre></td></tr></table></figure><p>之后查找一下elasticsearch在本机留下的痕迹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># updatedb</span></span><br><span class="line"><span class="comment"># locate elasticsearch</span></span><br></pre></td></tr></table></figure><p>如果生产环境（在你的实例中，而不是在测试环境或虚拟机中）中更新索引<code>updatedb</code>，则可能因为文件系统过于庞大而没有响应。所以这种情况下，一般来说，只要再删除<code>/var/lib/elasticsearch</code>就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -r /var/lib/elasticsearch</span></span><br></pre></td></tr></table></figure><p>目前我只能帮到这里了，如果还是无法删干净，或新版Elasticsearch无法正常使用，请自行搜索资料，或重装系统。重装系统后仍无法使用，那就排除这个原因。</p><h2 id="解决内存不足导致的问题"><a href="#解决内存不足导致的问题" class="headerlink" title="解决内存不足导致的问题"></a>解决内存不足导致的问题</h2><p>一般来说，根据<a href="https://docs.joinmastodon.org/admin/elasticsearch/#config">官方文档</a>对长毛象实例进行配置以后，发生的问题往往跟内存不足有关。<a href="https://docs.joinmastodon.org/admin/elasticsearch/#populate-the-indices">官方文档</a>已给出解决方法。<br>如果内存仍然不足，则需要分配虚拟内存。以下给出实用的方法：</p><p>查看交换空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># swapon --show</span></span><br></pre></td></tr></table></figure><p>分配内存文件（在系统盘）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fallocate -l 4G /swapfile</span></span><br></pre></td></tr></table></figure><p>设置文件权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod 600 /swapfile</span></span><br></pre></td></tr></table></figure><p>格式化虚拟内存文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkswap /swapfile</span></span><br></pre></td></tr></table></figure><p>挂载虚拟内存（立即生效，关机后失效）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># swapon /swapfile</span></span><br></pre></td></tr></table></figure><h3 id="重启后挂载虚拟内存"><a href="#重启后挂载虚拟内存" class="headerlink" title="重启后挂载虚拟内存"></a>重启后挂载虚拟内存</h3><p>打开<code>/etc/fstab</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/fstab</span></span><br></pre></td></tr></table></figure><p>在文件最后添加以下内容，并保存退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/swapfile none swap defaults 0 0</span><br></pre></td></tr></table></figure><h3 id="重新分配虚拟内存"><a href="#重新分配虚拟内存" class="headerlink" title="重新分配虚拟内存"></a>重新分配虚拟内存</h3><p>卸载虚拟内存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># swapoff /swapfile</span></span><br></pre></td></tr></table></figure><p>调整虚拟内存文件大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fallocate -l 1G /swapfile</span></span><br></pre></td></tr></table></figure><p>重新格式化虚拟内存文件（否则改动不生效！）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkswap /swapfile</span></span><br></pre></td></tr></table></figure><p>重新挂载虚拟内存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># swapon /swapfile</span></span><br></pre></td></tr></table></figure><p>以上操作在解决长毛象实例部署时，内存不足导致的编译失败，也很有用。因为VPS系统资源很贵，所以以上内容我另外打了tag，并且希望你们<em><strong>划重点</strong></em>。</p><h2 id="防止Elasticsearch-自动更新"><a href="#防止Elasticsearch-自动更新" class="headerlink" title="防止Elasticsearch 自动更新"></a>防止Elasticsearch 自动更新</h2><p>由于本文根据需要进行了指定版本安装，所以今后你们应该不会手欠去<code>apt upgrade</code>的吧。<br>不过以防万一，要对该软件进行固定。</p><p>禁止<code>elasticsearch</code>的自动更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt-mark hold elasticsearch</span></span><br></pre></td></tr></table></figure><p>检查被禁止更新的软件列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt-mark showhold</span></span><br></pre></td></tr></table></figure><p>解除禁止<code>elasticsearch</code>的自动更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt-mark unhold elasticsearch</span></span><br></pre></td></tr></table></figure><p>参考链接 <a href="https://blog.csdn.net/liaowenxiong/article/details/118962873">https://blog.csdn.net/liaowenxiong/article/details/118962873</a></p><h1 id="优化中文搜索"><a href="#优化中文搜索" class="headerlink" title="优化中文搜索"></a>优化中文搜索</h1><p>在改长毛象代码之前，必须先安装插件，否则会导致全文搜索变得无法使用。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>正如<a href="/2025/02/01/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E7%9A%84%E9%83%A8%E7%BD%B2/#%E5%BC%80%E5%A7%8B%E9%83%A8%E7%BD%B2">上文</a>所言，安装插件可以按照官方文档进行操作。<br>插件官方文档如下：<br>简繁转换插件 <a href="https://github.com/infinilabs/analysis-stconvert">https://github.com/infinilabs/analysis-stconvert</a><br>安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-plugin install https://get.infini.cloud/elasticsearch/analysis-stconvert/8.4.1</span><br></pre></td></tr></table></figure><p>分词插件 <a href="https://github.com/infinilabs/analysis-ik">https://github.com/infinilabs/analysis-ik</a><br>安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-plugin install https://get.infini.cloud/elasticsearch/analysis-ik/8.4.1</span><br></pre></td></tr></table></figure><p><em>小坑：</em> 但是官方文档有一点没有说清楚，所有插件的安装命令都需要在<code>elasticsearch</code>的安装目录下执行。而使用<code>apt</code>包管理器安装的<code>elasticsearch</code>，则在以下目录执行以上官方文档的安装命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/share/elasticsearch</span></span><br></pre></td></tr></table></figure><h1 id="长毛象代码魔改"><a href="#长毛象代码魔改" class="headerlink" title="长毛象代码魔改"></a>长毛象代码魔改</h1><p>接下来就到了本博客第一次解说长毛象魔改的时间了。长毛象要想使用ES插件，必须修改代码。</p><p>由于长毛象的开源协议，你修改代码后，必须在首页的<code>源代码</code>处公开自己修改后的代码。你不遵守这个协议，其实也无所谓，守规矩的人应该都在刷微信、微博、哔哩哔哩、学习强国。但是本着分享知识，记录备份代码的原则，我还是把代码放在GitHub上。其实这点轻改，在shell上就可以完成，但是以后还是会有相对重度的魔改，也可能会参与开发和调试，所以以下步骤是入门长毛象魔改的第一步。</p><h2 id="fork仓库"><a href="#fork仓库" class="headerlink" title="fork仓库"></a>fork仓库</h2><p>登录GitHub,进入长毛象仓库<a href="https://github.com/mastodon/mastodon">https://github.com/mastodon/mastodon</a> ，单击Fork<br><img src="fork.png"><br>可以克隆所有分支</p><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>在配置文件加一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GITHUB_REPOSITORY=dongzhimin-xz/mastodon</span><br></pre></td></tr></table></figure><p>改成你的用户名和长毛象仓库名称</p><h2 id="clone仓库"><a href="#clone仓库" class="headerlink" title="clone仓库"></a>clone仓库</h2><p>如图复制本仓库地址<br><img src="clone1.png"><br>用sourcetree克隆仓库<br><img src="clone2.png"></p><h2 id="搭建测试环境"><a href="#搭建测试环境" class="headerlink" title="搭建测试环境"></a>搭建测试环境</h2><h3 id="安装开发测试软件"><a href="#安装开发测试软件" class="headerlink" title="安装开发测试软件"></a>安装开发测试软件</h3><p>这里可以完全参照官方的<a href="https://docs.joinmastodon.org/dev/setup/">开发文档</a>进行环境配置。需要从官网下载两个软件用于开发（如果已有，则可跳过此步骤）<br><a href="https://www.vagrantup.com/">https://www.vagrantup.com/</a><br><a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a><br>我觉得在Windows中，vagrant-hostupdater似乎没什么用，我都是自己手动配置的<code>hosts</code>文件。以防有人不会，我再赘述一遍：用管理员权限打开记事本，打开<code>C:\Windows\System32\drivers\etc\hosts</code>,增加一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.42.42mastodon.local</span><br></pre></td></tr></table></figure><h3 id="安装运行长毛象的代码"><a href="#安装运行长毛象的代码" class="headerlink" title="安装运行长毛象的代码"></a>安装运行长毛象的代码</h3><p>检出你要魔改的分支，我选择的是我正在运行的分支，也就是稳定版，而不是<code>main</code>分支。<br><img src="checkout.png"><br>在资源管理器打开代码目录，右键在此处打开命令行。右键找不到终端选项，则按Shift+鼠标右键，或在地址栏输入cmd，在此处打开命令行。<br>在命令行输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure><p>这里根据我个人经验，需要等半小时以上。它进行的操作，是创建虚拟机，安装依赖，安装Elasticsearch等大量软件。由于国内的网络环境<del>（你懂得）</del>，安装<code>elasticsearch</code>时间占大头。<br>命令提示符重新出现后，再运行如下<em><strong>最实用的</strong></em> 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant ssh -c <span class="string">&quot;cd /vagrant &amp;&amp; foreman start&quot;</span></span><br></pre></td></tr></table></figure><p>经过我长时间的多次使用，知道了它的作用是进入长毛象代码根目录，并执行<code>foreman start</code>命令。在开发过程中，如果你已经用<code>vagrant ssh</code>进入了虚拟机，那么你就可以用<code>foreman start</code>启动开发环境。如果提示没有安装，那么你可以先执行<code>gem install foreman --no-document</code>。<a href="https://docs.joinmastodon.org/dev/setup/#running">官方文档</a>都有记载。</p><p><code>foreman</code>的意义就在于直接编译代码，当你保存了代码时，它会根据依赖关系重新进行编译，重启服务，并刷新你的浏览器。可谓时按一下保存，就可以看见你改代码的效果。</p><p>但是，如果你<code>checkout</code>到了其他版本的分支，你需要进入<code>/vagrant</code>目录，执行<code>bundle install</code>和<code>yarn install</code>命令，再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gem install foreman --no-document</span><br><span class="line">foreman start</span><br></pre></td></tr></table></figure><p>修改完成后，将代码git push到你的仓库，再登录到你服务器的<code>mastodon</code>账户下。假设你按照官方文档<a href="https://docs.joinmastodon.org/admin/install/">长毛象的安装</a>部署了你的实例。执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> live</span><br><span class="line">$ git remote rename origin upstream</span><br><span class="line">$ git remote add origin https://github.com/&lt;your_github_account&gt;/mastodon.git</span><br></pre></td></tr></table></figure><p>其中，<code>&lt;your_github_account&gt;/mastodon</code>为你长毛象仓库名称。<br>再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch --tags</span><br></pre></td></tr></table></figure><p>最后执行<code>git checkout</code>到你修改后的分支。<br>接下来执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ RAILS_ENV=production bundle <span class="built_in">exec</span> rails assets:precompile</span><br></pre></td></tr></table></figure><p>重新编译。回到root账号，重启所有长毛象服务。</p><p>当然，在执行服务器上的操作之前，你应该先根据官方的<a href="https://docs.joinmastodon.org/admin/migrating/">长毛象迁移（备份）</a>文档，在<code>mastodon</code>账户执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pg_restore -Fc -j# -U mastodon -n public --no-owner --role=mastodon \</span><br><span class="line">  -d mastodon_production backup.dump</span><br></pre></td></tr></table></figure><h2 id="中文搜索优化"><a href="#中文搜索优化" class="headerlink" title="中文搜索优化"></a>中文搜索优化</h2><p>**<a href="https://docs.joinmastodon.org/admin/elasticsearch/">官方文档</a>**已给出了代码的修改方案，但是这个代码经过我的实测，效果并不好。主要体现在：在我将它部署到服务器上以后，根据官方文档执行<code>bin/tootctl search deploy</code>之后，就会发现所有索引建立完成后的一切新嘟文，都无法被搜索到！这个可能是因为它无法自动把新嘟文加入到索引中。经过我反复试验，发现是官方文档中的<code>ik_max_word</code>有问题。我没有时间和能力进行更进一步的调试和研究，经过黑盒测试，不使用长毛象官方文档中的analyzer&#x2F;tokenizer <code>ik_max_word</code>最好。</p><h3 id="最佳代码修改"><a href="#最佳代码修改" class="headerlink" title="最佳代码修改"></a>最佳代码修改</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/app/chewy/accounts_index.rb b/app/chewy/accounts_index.rb</span></span><br><span class="line"><span class="comment">index 59f2f991f2..71d60e3806 100644</span></span><br><span class="line"><span class="comment">--- a/app/chewy/accounts_index.rb</span></span><br><span class="line"><span class="comment">+++ b/app/chewy/accounts_index.rb</span></span><br><span class="line"><span class="meta">@@ -36,7 +36,7 @@</span> class AccountsIndex &lt; Chewy::Index</span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       verbatim: &#123;</span><br><span class="line"><span class="deletion">-        tokenizer: &#x27;standard&#x27;,</span></span><br><span class="line"><span class="addition">+        tokenizer: &#x27;ik_smart&#x27;,</span></span><br><span class="line">         filter: %w(lowercase asciifolding cjk_width),</span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">diff --git a/app/chewy/public_statuses_index.rb b/app/chewy/public_statuses_index.rb</span></span><br><span class="line"><span class="comment">index 09a4dfc093..fc9396a537 100644</span></span><br><span class="line"><span class="comment">--- a/app/chewy/public_statuses_index.rb</span></span><br><span class="line"><span class="comment">+++ b/app/chewy/public_statuses_index.rb</span></span><br><span class="line"><span class="meta">@@ -20,7 +20,14 @@</span> class PublicStatusesIndex &lt; Chewy::Index</span><br><span class="line">         language: &#x27;possessive_english&#x27;,</span><br><span class="line">       &#125;,</span><br><span class="line">     &#125;,</span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="addition">+    char_filter: &#123;</span></span><br><span class="line"><span class="addition">+      tsconvert: &#123;</span></span><br><span class="line"><span class="addition">+        type: &#x27;stconvert&#x27;,</span></span><br><span class="line"><span class="addition">+        keep_both: false,</span></span><br><span class="line"><span class="addition">+        delimiter: &#x27;#&#x27;,</span></span><br><span class="line"><span class="addition">+        convert_type: &#x27;t2s&#x27;,</span></span><br><span class="line"><span class="addition">+      &#125;,</span></span><br><span class="line"><span class="addition">+    &#125;,</span></span><br><span class="line">     analyzer: &#123;</span><br><span class="line">       verbatim: &#123;</span><br><span class="line">         tokenizer: &#x27;uax_url_email&#x27;,</span><br><span class="line"><span class="meta">@@ -28,7 +35,7 @@</span> class PublicStatusesIndex &lt; Chewy::Index</span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       content: &#123;</span><br><span class="line"><span class="deletion">-        tokenizer: &#x27;standard&#x27;,</span></span><br><span class="line"><span class="addition">+        tokenizer: &#x27;ik_smart&#x27;,</span></span><br><span class="line">         filter: %w(</span><br><span class="line">           lowercase</span><br><span class="line">           asciifolding</span><br><span class="line"><span class="meta">@@ -38,6 +45,7 @@</span> class PublicStatusesIndex &lt; Chewy::Index</span><br><span class="line">           english_stop</span><br><span class="line">           english_stemmer</span><br><span class="line">         ),</span><br><span class="line"><span class="addition">+        char_filter: %w(tsconvert),</span></span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       hashtag: &#123;</span><br><span class="line"><span class="comment">diff --git a/app/chewy/statuses_index.rb b/app/chewy/statuses_index.rb</span></span><br><span class="line"><span class="comment">index e739ccecb4..c3c41259f3 100644</span></span><br><span class="line"><span class="comment">--- a/app/chewy/statuses_index.rb</span></span><br><span class="line"><span class="comment">+++ b/app/chewy/statuses_index.rb</span></span><br><span class="line"><span class="meta">@@ -20,7 +20,14 @@</span> class StatusesIndex &lt; Chewy::Index</span><br><span class="line">         language: &#x27;possessive_english&#x27;,</span><br><span class="line">       &#125;,</span><br><span class="line">     &#125;,</span><br><span class="line"><span class="deletion">-</span></span><br><span class="line"><span class="addition">+    char_filter: &#123;</span></span><br><span class="line"><span class="addition">+      tsconvert: &#123;</span></span><br><span class="line"><span class="addition">+        type: &#x27;stconvert&#x27;,</span></span><br><span class="line"><span class="addition">+        keep_both: false,</span></span><br><span class="line"><span class="addition">+        delimiter: &#x27;#&#x27;,</span></span><br><span class="line"><span class="addition">+        convert_type: &#x27;t2s&#x27;,</span></span><br><span class="line"><span class="addition">+      &#125;,</span></span><br><span class="line"><span class="addition">+    &#125;,</span></span><br><span class="line">     analyzer: &#123;</span><br><span class="line">       verbatim: &#123;</span><br><span class="line">         tokenizer: &#x27;uax_url_email&#x27;,</span><br><span class="line"><span class="meta">@@ -28,7 +35,7 @@</span> class StatusesIndex &lt; Chewy::Index</span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       content: &#123;</span><br><span class="line"><span class="deletion">-        tokenizer: &#x27;standard&#x27;,</span></span><br><span class="line"><span class="addition">+        tokenizer: &#x27;ik_smart&#x27;,</span></span><br><span class="line">         filter: %w(</span><br><span class="line">           lowercase</span><br><span class="line">           asciifolding</span><br><span class="line"><span class="meta">@@ -38,6 +45,7 @@</span> class StatusesIndex &lt; Chewy::Index</span><br><span class="line">           english_stop</span><br><span class="line">           english_stemmer</span><br><span class="line">         ),</span><br><span class="line"><span class="addition">+        char_filter: %w(tsconvert),</span></span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       hashtag: &#123;</span><br><span class="line"><span class="comment">diff --git a/app/chewy/tags_index.rb b/app/chewy/tags_index.rb</span></span><br><span class="line"><span class="comment">index c99218a47f..8785b537a9 100644</span></span><br><span class="line"><span class="comment">--- a/app/chewy/tags_index.rb</span></span><br><span class="line"><span class="comment">+++ b/app/chewy/tags_index.rb</span></span><br><span class="line"><span class="meta">@@ -4,15 +4,24 @@</span> class TagsIndex &lt; Chewy::Index</span><br><span class="line">   include DatetimeClampingConcern</span><br><span class="line"></span><br><span class="line">   settings index: index_preset(refresh_interval: &#x27;30s&#x27;), analysis: &#123;</span><br><span class="line"><span class="addition">+    char_filter: &#123;</span></span><br><span class="line"><span class="addition">+      tsconvert: &#123;</span></span><br><span class="line"><span class="addition">+        type: &#x27;stconvert&#x27;,</span></span><br><span class="line"><span class="addition">+        keep_both: false,</span></span><br><span class="line"><span class="addition">+        delimiter: &#x27;#&#x27;,</span></span><br><span class="line"><span class="addition">+        convert_type: &#x27;t2s&#x27;,</span></span><br><span class="line"><span class="addition">+      &#125;,</span></span><br><span class="line"><span class="addition">+    &#125;,</span></span><br><span class="line">     analyzer: &#123;</span><br><span class="line">       content: &#123;</span><br><span class="line"><span class="deletion">-        tokenizer: &#x27;keyword&#x27;,</span></span><br><span class="line"><span class="addition">+        tokenizer: &#x27;ik_smart&#x27;,</span></span><br><span class="line">         filter: %w(</span><br><span class="line">           word_delimiter_graph</span><br><span class="line">           lowercase</span><br><span class="line">           asciifolding</span><br><span class="line">           cjk_width</span><br><span class="line">         ),</span><br><span class="line"><span class="addition">+        char_filter: %w(tsconvert),</span></span><br><span class="line">       &#125;,</span><br><span class="line"></span><br><span class="line">       edge_ngram: &#123;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本博客作为技术博客，已部署了搜索功能*（虽然不敢保证是由有用）*。但是，有更多的资源我记录或收藏在了长毛象里，经过长时间高频率地使用，很容易就会被淹没在茫茫信息之中。没有搜索功能，在需要时（就比如写本博客、&lt;del&gt;寻找收藏的小姐姐🤤&lt;/del&gt;、分享某些象友的经典言论）就只能手动去一一翻找。所以，没有搜索功能很不方便，我们需要部署全文搜索。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="长毛象开发环境的搭建" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    
    <category term="长毛象轻度魔改" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E8%BD%BB%E5%BA%A6%E9%AD%94%E6%94%B9/"/>
    
    <category term="vagrant的使用" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E9%95%BF%E6%AF%9B%E8%B1%A1%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/vagrant%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="暴🐘改造者" scheme="https://blog.dzm.pp.ua/tags/%E6%9A%B4%F0%9F%90%98%E6%94%B9%E9%80%A0%E8%80%85/"/>
    
    <category term="分配交换空间" scheme="https://blog.dzm.pp.ua/tags/%E5%88%86%E9%85%8D%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4/"/>
    
    <category term="apt阻止特定软件升级" scheme="https://blog.dzm.pp.ua/tags/apt%E9%98%BB%E6%AD%A2%E7%89%B9%E5%AE%9A%E8%BD%AF%E4%BB%B6%E5%8D%87%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客教程</title>
    <link href="https://blog.dzm.pp.ua/2025/01/19/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>https://blog.dzm.pp.ua/2025/01/19/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</id>
    <published>2025-01-19T06:58:54.000Z</published>
    <updated>2025-02-01T14:27:24.855Z</updated>
    
    <content type="html"><![CDATA[<p>本文适合对建设网站有兴趣的读者。例如，你想要在互联网上留下你制作的网页，想要在互联网上自由地表达你自己的言论，<em><strong>又想避免封号禁言之苦</strong></em>，那么恭喜你，这个tag就是给你而设的😁。</p><span id="more"></span><h1 id="对读者的要求"><a href="#对读者的要求" class="headerlink" title="对读者的要求"></a>对读者的要求</h1><h2 id="你需要的基础知识-（非必需）"><a href="#你需要的基础知识-（非必需）" class="headerlink" title="你需要的基础知识 （非必需）"></a>你需要的基础知识 <em>（非必需）</em></h2><ul><li>如何安装一个网页服务器，并进行配置（nginx、apache或是自己用C语言写一个都行）</li><li>Git的使用 <a href="https://zh.moegirl.org.cn/%E8%B7%9FWakaba%E9%85%B1%E4%B8%80%E8%B5%B7%E5%AD%A6">跟wakaba酱一起学</a><br>  <img src="/Hexo/wakaba_git.jpg"></li><li>命令行的使用（包括Linux命令、ssh的使用、ssh协议传输文件等等）</li><li>网页制作 <a href="https://zh.moegirl.org.cn/%E8%B7%9FWakaba%E9%85%B1%E4%B8%80%E8%B5%B7%E5%AD%A6">跟wakaba酱一起学</a><br>  <img src="/Hexo/wakaba_web.jpg"></li><li>MarkDown语言基础</li><li>注册域名</li><li>使用vscode (下载地址<a href="https://code.visualstudio.com/">https://code.visualstudio.com</a> ，请勿下载任何收费版！)</li></ul><p>以上技能都会或者愿意学的话，恭喜你，你适合继续阅读。不会的话，也没关系，我也不精通😁，今后笔者 <em><strong>可能</strong></em> 会在博客更新保姆级教程。</p><h2 id="不适合的读者人群"><a href="#不适合的读者人群" class="headerlink" title="不适合的读者人群"></a>不适合的读者人群</h2><ul><li>需要在淘宝上请人安装<a href="https://steampowered.com/">steam</a>，结果仍然无法正确安装，最后还要找卖家算账的。</li><li>认为网络对于居民来说，只需要用来读书看报就可以了，其余网站或功能都应该封禁的议员或人大代表。</li><li>对如何搭建本站不感兴趣，只想快速手搓一个淘宝网站。</li><li>只知道单击“下一步”，至于使用<code>apt install</code>或者如下命令安装软件，太麻烦了，不想折腾的读者</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>爱当脑残粉。认为某人（包括其他技术博主、我本人、其他网友以及某种权威）说的是对的，一定要照他&#x2F;她说的做，必须一字不差地执行（有些内容可以帮助你避坑，少走弯路，但我希望你多踩坑，熟悉其中的原理）。<br>比起当乖宝宝，你当个杠精我更可能欣赏你。</li></ul><p>搭建Hexo以后，可以变通地使用宝塔面板、Cloudflare Pages、其他网页托管服务部署网站。</p><h1 id="对电脑的要求"><a href="#对电脑的要求" class="headerlink" title="对电脑的要求"></a>对电脑的要求</h1><h2 id="对本机的要求"><a href="#对本机的要求" class="headerlink" title="对本机的要求"></a>对本机的要求</h2><p>读者可能有疑问：“我这电脑（自从上次重装以来）用得太久了，有些软件可能已经装过了，有些软件可能缺失了，该怎么办？”所以请先阅读本节。假设用的都是Windows。<br>此外，还需要安装vscode，上文已提过。也可以使用NotePad++等一些会自动规范代码格式的软件来进行配置。只要编辑器会帮你找到另一半的括号在哪里，以及代码所用的标点符号是否符合全角半角就可以了。<br>不了解工作方法的新人，或者非常自信且强悍的高手，可能会使用Windows自带的“记事本”来修改代码和配置文件，对此我表示尊重祝福🙏。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>首先确认以前是否装过，打开命令行。输入<code>node -v</code><br>有类似以下输出，跟<a href="https://hexo.io/zh-cn/docs/">官网</a>核对版本后即可跳过本节。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v22.13.0</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>如果没有以上输出，那么，进入 <a href="https://nodejs.org/">https://nodejs.org</a> 下载最新版进行安装。或者进入Windows的C:\Program Files\寻找是否有nodejs文件夹，里面是否有nodejs文件。如果有，那么配置环境变量。</p><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>右击“此电脑”，单击“高级系统设置”<br><img src="/Hexo/env1.png"><br>进入“环境变量”,双击查看上下两个<code>Path</code>变量，把<code>node.exe</code>所处的目录的路径给添加进去就可以了。</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>方法同上。在见到本教程之前，很可能你有安装过Git，或者<a href="https://www.c-r.com/book/detail/1108">跟wakaba酱一起</a>安装了source tree，里面自带了git。如果<code>git -v</code>不能正确显示git的版本，还是找到git的安装目录，添加进环境变量PATH。不再赘述。</p><h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><p>接下来是创立本站的步骤</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>Hexo是个实用的软件，所以可以全局安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>在操作过程中自行判断报错和各种信息。</p><h2 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h2><p>本文假设我们的网站项目为 <strong>test</strong> 。在你要建站的位置，打开命令行。我推荐下载Windows商店里的Windows Terminal。画面比PowerShell和cmd好看多了。<br><img src="/Hexo/terminal.png"><br>该软件的配置不再赘述，根据你自己的喜好来。<br>通过<code>cd</code>命令或者右击（Shift+右击）打开命令行，进入目录后。输入<code>hexo init test</code>，即可创建博客文件。成功时输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init <span class="built_in">test</span></span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">INFO  Start blogging with Hexo!</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>如果不需要此博客了，或者要推倒重来，需要删除，直接删除文件夹即可逆转回<code>hexo init</code>之前的状态。可谓是非常的绿色。<br>此时，你的第一个博客已搭建完成。你可以在博客目录内输入<code>hexo server</code>立即观看效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个输出说明了Hexo在本机TCP 4000端口运行了一个http服务器，你在<strong>你的电脑</strong>上打开浏览器，输入 <a href="http://localhost:4000/">http://localhost:4000</a> 即可访问你自己的网站。<br><img src="/Hexo/index1.png"><br>该网站包含了Hello World页面，以及一些在该主题下的基本操作。这对我们来说远远不够，因为这样的网站发布出去，你的读者就会认为你的能力大概就如此了（虽然已经超越了大多数的用户）。首先，第一眼，就知道你是用Hexo搭建的个人静态博客（但至少比WordPress操作要更装B，安装软件不用图形化界面，系统资源消耗更少，底层原理也更低级，无数据库，无后端😁）。即使你改了标题，看这样式和背景图片也猜得到你是怎么搭建的。而且，你这页面如果发布出去，大概只是几万人当中的一分子，默认主题，给人一种网站跑路了的感觉。</p><h2 id="安装主题（拓展）"><a href="#安装主题（拓展）" class="headerlink" title="安装主题（拓展）"></a>安装主题（拓展）</h2><p>之所以没急着开始写作，是因为主题关系到你文章之间的分类结构。有的主题着重写个人简历，有的主题像我一样用来记录点滴以备不时之需。<br>对于主题，不必自己制作一个原创的，原创还需要积累和沉淀。在官网找一个看上去狂拽酷炫屌炸天的 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 。我的主题是这个 <a href="https://github.com/fan-lv/Fan">https://github.com/fan-lv/Fan</a> 。作者已经2年没有维护了。你不一定要使用该主题，去找你自己喜欢的，但是本文<strong>仍然有一定的参考意义</strong>。<br>首先，<code>cd test</code>，再输入以下指令下载主题的源代码（请手动输入自己主题的仓库地址）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/fan-lv/Fan.git themes/Fan</span><br><span class="line">Cloning into <span class="string">&#x27;themes/Fan&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 512, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (216/216), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (103/103), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 512 (delta 149), reused 160 (delta 111), pack-reused 296 (from 1)</span><br><span class="line">Receiving objects: 100% (512/512), 2.63 MiB | 4.56 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (300/300), <span class="keyword">done</span>.</span><br><span class="line">$ </span><br></pre></td></tr></table></figure><p>下载完主题后，首先要安装主题的依赖。根据刚才的实测，每一个Hexo实例都必须安装一遍。<br>安装依赖的命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure><p>在根目录的 <code>_config.yml</code>,打开编辑。在里面可以设置网站的名字和作者</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>找到主题，把landscape修改为Fan</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">Fan</span></span><br></pre></td></tr></table></figure><p>此外，还必须打开 <code>themes/Fan/_config.yml</code>进行修改，禁用搜索和评论。否则，由于未配置评论和algolia搜索的API，会导致<font color=Red>红字</font>报错，网站也无法访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># algolia 搜索</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地搜索</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制代码</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 评论</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 使用哪种评论插件[&quot;gitment&quot;, &quot;valine&quot;,&quot;twikoo&quot;]</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;valine&quot;</span></span><br></pre></td></tr></table></figure><p>接下来输入<code>hexo s</code>即可预览效果<br>此时会发现一些主题作者没有在文档中说明的坑。单击“标签”和”分类”，以及“关于”，你会发现网页直接显示<code>Cannot GET /tags/</code>这种信息，显然这样的网站时不能发布的。这个坑，我在准备更换主题时，在其他主题的文档发现解决的灵感，接下来我会在下一个章节讲解。</p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>根据官方文档，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>即可新建文章。layout是文章的布局，总共有3种：</p><ol><li>post</li><li>page</li><li>draft<br>post很简单，就是我现在正在写的文章类型。draft也很好理解，就是post的草稿，使用<code>hexo publish</code>即可发布为post。<br>问题来了，page又是什么呢？经过踩坑，发现，如果你使用<code>hexo new page --path about/me &quot;About me&quot;</code>，实际渲染后，无法显示任何新的页面。其实，page布局的用途，即是生成<a href="./#%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98%EF%BC%88%E6%8B%93%E5%B1%95%EF%BC%89">上一章</a>单击菜单中的“标签”、“分类”和“关于”的页面。<br>将<code>hexo new page &quot;tags&quot;</code>生成的文件夹中的index.md文件，内容改为</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: All tags</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure><p><code>hexo new page &quot;categories&quot;</code>生成的文件改为</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: All tags</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>“关于”也用同样方法生成。</p><h3 id="脚手架"><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h3><p>每次你使用<code>hexo new</code>生成新文章时，hexo都会从根目录的<code>scaffolds</code>内的模板生成新的文件，你再使用新生成的文件，使用Markdown语言进行新的写作。我建议对scaffolds进行修改，加上</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">categories:</span><br></pre></td></tr></table></figure><p>以便对文章进行归类</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>Hexo采用Markdown语言进行写作。Markdown语言为GitHub写文档时使用的语言，相信在座的各位比我都懂，在此不班门弄斧了，丢下一个链接 <a href="https://markdown.com.cn/">https://markdown.com.cn/</a> 给新人学习去吧。<br>最值得注意的点就是代码块要采用的，是反引号&#96;,而不是单引号’，反引号位于键盘左上角，按Shift会输入~。</p><p>写作过程中，你可以在博客根目录的命令行内输入<code>hexo server</code>，随时查看博客的渲染情况。每保存一次，它就渲染一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">[Browsersync] Access URLs:</span><br><span class="line"> ----------------------------------</span><br><span class="line">          UI: http://localhost:3001</span><br><span class="line"> ----------------------------------</span><br><span class="line"> UI External: http://localhost:3001</span><br><span class="line"> ----------------------------------</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br><span class="line">[Browsersync] Reloading Browsers...</span><br><span class="line">[Browsersync] Reloading Browsers...</span><br><span class="line">[Browsersync] Reloading Browsers...</span><br><span class="line">[Browsersync] Reloading Browsers...</span><br><span class="line">[Browsersync] Reloading Browsers...</span><br><span class="line">[Browsersync] Reloading Browsers...</span><br></pre></td></tr></table></figure><p>以上节选自本文写作过程中，终端窗口的输出</p><h2 id="插件的安装"><a href="#插件的安装" class="headerlink" title="插件的安装"></a>插件的安装</h2><p>algolia搜索和评论已在<a href="https://github.com/fan-lv/Fan">作者文档</a>中。具体要强调几点踩坑事项：</p><ul><li>要将你的Admin API Key导入到你的环境变量中<br><img src="/Hexo/env1.png"><br>否则无法使用<code>hexo algolia</code>命令</li><li>HTTP Referers必须设为例如<code>*blog.dzm.pp.ua*</code>和<code>*localhost*</code>，否则Algolia搜索将无法使用。</li><li>评论gitmen似乎已经无法使用，作者的博客也是如此。建议使用valine。具体如何审核评论，目前似乎只能让大家自由地评论了。valine的原理似乎是将评论存储在valine的服务器上。静态博客是没有后端的。</li></ul><p>本小节就不放图了，避免泄露我的api key</p><h2 id="长毛象作者署名"><a href="#长毛象作者署名" class="headerlink" title="长毛象作者署名"></a>长毛象作者署名</h2><p>长毛象近两年出了个新功能，就是验证网站署名。用语言讲不清楚，直接上图<br><img src="/Hexo/author.png"><br>假如胡锡进在他的每篇文章加入如下api元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;fediverse:creator&quot;</span> <span class="attr">content</span>=<span class="string">&quot;@Network@cmx.dzm.pp.ua&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那么每篇文章的分享下面就会多出一个“老🦊以为”。<br>然而，经过我的踩坑，该元素仅放在<code>&lt;head&gt;&lt;/head&gt;</code>里面才有效。要修改每个网页的head元素，需要进入（以我主题为例，其他主题自行搜索）hexo博客根目录<code>/themes/Fan/layout/includes/layout.pug</code>，里面可以找到渲染所有网页元素的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">head</span><br><span class="line">        <span class="title function_">meta</span>(charset=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line">        <span class="title function_">meta</span>(http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>)</span><br><span class="line">        <span class="title function_">meta</span>(name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>)</span><br><span class="line">        <span class="title function_">meta</span>(name=<span class="string">&quot;description&quot;</span> content=pageDescription)</span><br><span class="line">        <span class="title function_">meta</span>(name=<span class="string">&quot;keywords&quot;</span> content=pageKeywords)</span><br><span class="line">        <span class="title function_">meta</span>(name=<span class="string">&quot;author&quot;</span> content=pageAuthor)</span><br><span class="line">        <span class="title function_">meta</span>(name=<span class="string">&quot;copyright&quot;</span> content=pageCopyright)</span><br><span class="line">        <span class="title function_">meta</span>(name=<span class="string">&quot;fediverse:creator&quot;</span> content=<span class="string">&quot;@Network@cmx.dzm.pp.ua&quot;</span>)</span><br><span class="line">        title= pageTitle</span><br><span class="line">        <span class="keyword">if</span> theme.<span class="property">stylesheets</span> !== <span class="literal">undefined</span> &amp;&amp; theme.<span class="property">stylesheets</span>.<span class="property">length</span> &gt; <span class="number">0</span></span><br><span class="line">            <span class="comment">//- stylesheets list from config.yml</span></span><br><span class="line">            each url <span class="keyword">in</span> theme.<span class="property">stylesheets</span></span><br><span class="line">                <span class="title function_">link</span>(rel=<span class="string">&#x27;stylesheet&#x27;</span>, href=<span class="title function_">url_for</span>(url))</span><br><span class="line">        <span class="title function_">link</span>(rel=<span class="string">&quot;icon&quot;</span>, href=<span class="title function_">url_for</span>(theme.<span class="property">favicon</span>))</span><br><span class="line">        include ./head.<span class="property">pug</span></span><br><span class="line">        include ./config.<span class="property">pug</span></span><br></pre></td></tr></table></figure><p>（以上代码名称仅为高亮而输入）<br>找到head，加入如上代码<code>meta(name=&quot;fediverse:creator&quot; content=&quot;@Network@cmx.dzm.pp.ua&quot;)</code>，包含长毛象实例所指示的要素，实际渲染时会在head内生成它所要求的元素。</p><p>以上所有插件可以在本地<code>hexo server</code>试验中产生效果。但是，<a href="./#%E9%95%BF%E6%AF%9B%E8%B1%A1%E4%BD%9C%E8%80%85%E7%BD%B2%E5%90%8D">长毛象署名</a>只有部署后才能确认。</p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>Hexo的部署，也包括本站在内，不应拘泥于一种形式。常见的有git一键部署。最简单、最纯粹的方法，直接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>然后将根目录下的<code>/public</code>里面所有文件拷到网页服务器的根目录文件夹内。这种情况下，完全无需重启nginx。如果非要装一下，那么就用这个插件也是不错的😎 <a href="https://github.com/HakurouKen/hexo-deployer-shell">https://github.com/HakurouKen/hexo-deployer-shell</a> 。</p><h2 id="Git的使用"><a href="#Git的使用" class="headerlink" title="Git的使用"></a>Git的使用</h2><p>本站采用GitHub一键部署。<a href="https://hexo.io/zh-cn/docs/one-command-deployment#Git">官方文档</a>也已经详细说明了（首先不要忘记装插件，即使忘记了，报错以后你应该也会想起来的）。其中，配置文件<code>_config.yml</code>下，以下内容是必须的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span> <span class="comment"># https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br></pre></td></tr></table></figure><p>在部署前应该先在GitHub建立空白repo。<br><code>branch</code>和<code>message</code>不输入则自动取默认值。你并不需要配置token。你的repo值可以写成两种形式：</p><ul><li><code>https://github.com/dongzhimin-xz/dongzhimin-xz.github.io.git</code><br>这种形式最适合小白。如果在ssh服务器或无GUI操作系统使用这种形式的GitHub仓库URL，则无法推送代码。因为，现在github已经禁止了用户名密码推送代码了。<br>你在用这种方式部署时，电脑会弹出一个浏览器窗口，让你登录GitHub账号，可能还需要双因素认证或passkey登录。我使用密码管理器，这还是挺方便的。</li><li><code>git@github.com:dongzhimin-xz/dongzhimin-xz.github.io.git</code><br>这种形式，适合ssh服务器和无GUI操作系统推送代码。这种情况下，你需要使用ssh密钥。生成密钥的步骤如下（最好按照我的建议来）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -f <span class="variable">$env</span>:USERPROFILE/.ssh/test</span><br><span class="line">Generating public/private ed25519 key pair.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>其中test改为其他文件名，强烈建议不要使用默认文件名，否则可能会将该电脑内已有的私钥覆盖！<br>然后进入你的用户目录，进入该目录下的<code>.ssh</code>文件夹，用记事本或vscode（其他你用得顺手的文本编辑器）打开config文件。如果没有，请新建文本文件，并改为此名称。</p><blockquote><p>给小白的小知识：文本文件是由ASCII码或UTF-8构成的二进制文件，跟.doc和.wps这种妖艳贱货不一样。<br>在该文件内输入：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    IdentityFile ~/.ssh/test</span><br></pre></td></tr></table></figure><p>其中<code>~/.ssh/test</code>为你私钥的路径。第1行的<code>github.com</code>为主机名，如果你有多个GitHub账号，建议改为其他好记的名字，我的为<code>dongzhimin.github.com</code>。第2行的HostName为目标主机名，一般为目标的域名或IP地址（登录暗网的服务器除外，但也是一样的道理）<br>保存该文件后，还需要将公钥放入GitHub服务器。</p><h3 id="GitHub的使用"><a href="#GitHub的使用" class="headerlink" title="GitHub的使用"></a>GitHub的使用</h3><ol><li>在 <a href="https://github.com/">https://github.com</a> 登录你的账号，单击你右上角的头像，再选择Settings，然后再左侧选择SSH and GPG keys。<br>如果你还是不会以上步骤，请点击该链接直接进入此页面 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 。</li><li>单击New SSH key。</li><li>在Title输入好记的备注名称，Key type选择Authentication Key。</li><li>用记事本打开刚才生成的<code>test.pub</code>文件（不要打开<code>test</code>文件，这是私钥，如果泄露，请立即删除，并回到上文<code>ssh-keygen</code>那一步😅），全选复制，粘贴到GitHub界面的Key栏，再单击Add SSH key。</li></ol><p>使用如下命令进行测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@dongzhimin.github.com</span><br><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">&#x27;~/.ssh/id_github_dongzhimin&#x27;</span>:</span><br><span class="line">Hi dongzhimin-xz! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>有如上第3行输出即为密钥有效。</p><p>做完以上准备后，在根目录执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>一般来说应该成功了，但是我的主题又有一坑，最后会输出如下错误信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Writing objects: 100% (59/59), 2.58 MiB | 1.25 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 59 (delta 5), reused 0 (delta 0), pack-reused 0 (from 0)</span><br><span class="line">remote: Resolving deltas: 100% (5/5), <span class="keyword">done</span>.</span><br><span class="line">remote: error: GH013: Repository rule violations found <span class="keyword">for</span> refs/heads/master.</span><br><span class="line">remote:</span><br><span class="line">remote: - GITHUB PUSH PROTECTION</span><br><span class="line">remote:   —————————————————————————————————————————</span><br><span class="line">remote:     Resolve the following violations before pushing again</span><br><span class="line">remote:</span><br><span class="line">remote:     - Push cannot contain secrets</span><br><span class="line">remote:</span><br><span class="line">remote:</span><br><span class="line">remote:      (?) Learn how to resolve a blocked push</span><br><span class="line">remote:      https://docs.github.com/code-security/secret-scanning/working-with-secret-scanning-and-push-protection/working-with-push-protection-from-the-command-line#resolving-a-blocked-push</span><br><span class="line">remote:</span><br><span class="line">remote:</span><br><span class="line">remote:       —— Tencent Cloud Secret ID ———————————————————————————</span><br><span class="line">remote:        locations:</span><br><span class="line">remote:          - commit: a28f434d32b07039d89e63057af54133a36ffa34</span><br><span class="line">remote:            path: js/comments/twikoo.all.min.js:2</span><br><span class="line">remote:</span><br><span class="line">remote:        (?) To push, remove secret from commit(s) or follow this URL to allow the secret.</span><br><span class="line">remote:        https://github.com/dongzhimin-xz/test/security/secret-scanning/unblock-secret/2rqx1UZ0XaU2bNDrXiNAA1mEE5</span><br><span class="line">remote:</span><br><span class="line">remote:</span><br><span class="line">remote:</span><br><span class="line">To dongzhimin.github.com:dongzhimin-xz/test</span><br><span class="line"> ! [remote rejected] HEAD -&gt; master (push declined due to repository rule violations)</span><br><span class="line">error: failed to push some refs to <span class="string">&#x27;dongzhimin.github.com:dongzhimin-xz/test&#x27;</span></span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: Spawn failed</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>这种情况，可以删除相关文件（<code>twikoo.all.min.js</code>），或者修改策略，放过该文件（刚才测试时无法放过）。国产软件的作者也确实值得吐槽，特别爱把密码给写死在代码里。<br>经过刚才测试，最根本的解决办法就是，删除theme文件夹内的<code>twikoo.all.min.js</code>，或者打开后，搜索<code>AKIDBgZDdnbTw9D4ey9qPkrkwtb2Do9EwIHw</code>，并删除它。完成操作后，先执行<code>hexo clean</code>，<em><strong>再删除根目录下的<code>.deploy_git</code></strong></em>。然后再次部署，问题即可解决。</p><p>推送完毕后，点击仓库页面的Settings，进入左侧的Pages，Source选择Deploy from a branch，选择你的分支和网站根目录。</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>将我的hexo实例推送到我的仓库<code>dongzhimin-xz.github.io</code>（二级域名必须与我的GitHub用户名完全一致）后，在浏览器输入 <a href="https://dongzhimin-xz.github.io/">https://dongzhimin-xz.github.io</a> 即可访问。如果推送到了<code>test</code>仓库，那么该网站的网址在<a href="https://dongzhimin-xz.github.io/test">https://dongzhimin-xz.github.io/test</a> 。<br>既然是我的博客，那么它应该有我自己的域名，不应该寄人篱下。<br>首先我将我的Cloudflare DNS记录设为</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog    <span class="keyword">CNAME</span>     dongzhimin-xz.github.io</span><br></pre></td></tr></table></figure><p>同时，服务器端的主机名也需要设置，这样才能通过域名访问我的网站。<br>这里又有一坑，在GitHub Pages设置界面，将Custom domain设为blog.dzm.pp.ua。这样就可以访问了。<br>然而，我的网页更新以后，通过域名blog.dzm.pp.ua又无法访问网站了。<br>其实，配置主机名的真正方法是，在<code>source</code>文件夹下新建一个文本文件，改名为<code>CNAME</code>（无后缀），内容为自己的网址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog.dzm.pp.ua</span><br></pre></td></tr></table></figure><p>经过<code>hexo clean</code>和<code>hexo g</code>，它就到了网站的根目录中，再次<code>hexo d</code>，即可将域名永久解析到自己的网址。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文适合对建设网站有兴趣的读者。例如，你想要在互联网上留下你制作的网页，想要在互联网上自由地表达你自己的言论，&lt;em&gt;&lt;strong&gt;又想避免封号禁言之苦&lt;/strong&gt;&lt;/em&gt;，那么恭喜你，这个tag就是给你而设的😁。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    <category term="博客搭建" scheme="https://blog.dzm.pp.ua/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="言论自由只在这里" scheme="https://blog.dzm.pp.ua/tags/%E8%A8%80%E8%AE%BA%E8%87%AA%E7%94%B1%E5%8F%AA%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    
    <category term="Git的使用" scheme="https://blog.dzm.pp.ua/tags/Git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>大家好！这是我的新博客</title>
    <link href="https://blog.dzm.pp.ua/2025/01/14/%E5%A4%A7%E5%AE%B6%E5%A5%BD%EF%BC%81%E8%BF%99%E6%98%AF%E6%88%91%E7%9A%84%E6%96%B0%E5%8D%9A%E5%AE%A2/"/>
    <id>https://blog.dzm.pp.ua/2025/01/14/%E5%A4%A7%E5%AE%B6%E5%A5%BD%EF%BC%81%E8%BF%99%E6%98%AF%E6%88%91%E7%9A%84%E6%96%B0%E5%8D%9A%E5%AE%A2/</id>
    <published>2025-01-14T14:48:42.000Z</published>
    <updated>2025-01-18T13:32:10.891Z</updated>
    
    <content type="html"><![CDATA[<p>许久没搭建过博客了，今天第一次进行，踩了很多坑，因为有很多依赖在这几年里面更新了。<br>今天完成了GitHub Pages的部署和域名的配置。更多细节方面的技术坑之后将在本博客写出教程！</p><h3 id="预告"><a href="#预告" class="headerlink" title="预告"></a>预告</h3><p>明天写部署Hexo心得。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;许久没搭建过博客了，今天第一次进行，踩了很多坑，因为有很多依赖在这几年里面更新了。&lt;br&gt;今天完成了GitHub Pages的部署和域名的配置。更多细节方面的技术坑之后将在本博客写出教程！&lt;/p&gt;
&lt;h3 id=&quot;预告&quot;&gt;&lt;a href=&quot;#预告&quot; class=&quot;heade</summary>
      
    
    
    
    
    <category term="精彩明天继续！" scheme="https://blog.dzm.pp.ua/tags/%E7%B2%BE%E5%BD%A9%E6%98%8E%E5%A4%A9%E7%BB%A7%E7%BB%AD%EF%BC%81/"/>
    
  </entry>
  
</feed>
